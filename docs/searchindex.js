Search.setIndex({"alltitles": {"Basic information": [[7, "basic-information"]], "Changelog": [[0, null]], "Changelog and Contribution": [[8, null]], "Contribution domains": [[1, "contribution-domains"]], "Contributor List": [[1, "contributor-list"]], "Contributors": [[1, "contributors"]], "Function One Variable Max Problem": [[40, null]], "How to Contribute": [[1, null]], "How-to Guides": [[2, null]], "Implementation notes": [[7, "implementation-notes"]], "Implemented algorithms": [[3, null], [3, null]], "Implemented exact algorithms": [[4, null], [4, null]], "Implemented metaheuristic algorithms": [[5, null], [5, null]], "In-depth Information": [[8, null]], "Indices and tables": [[8, "indices-and-tables"]], "Library": [[9, null]], "Minimum Multi Cut Problem": [[41, null]], "Module contents": [[10, "module-opt"], [11, "module-opt.multi_objective"], [12, "module-opt.single_objective"], [13, "module-opt.single_objective.comb"], [14, "module-opt.single_objective.comb.minimum_multi_cut_problem"], [15, "module-opt.single_objective.comb.ones_count_max_problem"], [16, "module-opt.single_objective.comb.ones_count_min_problem"], [17, "module-opt.single_objective.comb.set_covering_problem"], [18, "module-opt.single_objective.comb.traveling_salesperson_problem"], [19, "module-opt.single_objective.constraint"], [20, "module-opt.single_objective.glob"], [21, "module-opt.single_objective.glob.function_one_variable_max_problem"], [22, "module-opt.single_objective.glob.function_one_variable_min_problem"], [23, "module-opt.tests"], [24, "module-opt.tests.integration"], [25, "module-opt.tests.integration.opt"], [26, "module-opt.tests.integration.opt.single_objective"], [27, "module-opt.tests.integration.opt.single_objective.comb"], [28, "module-opt.tests.integration.opt.single_objective.comb.ones_count_problem"], [29, "module-opt.tests.integration.opt.single_objective.glob"], [30, "module-opt.tests.integration.opt.single_objective.glob.function_one_variable_problem"], [31, "module-opt.tests.unit"], [32, "module-opt.tests.unit.single_objective"], [33, "module-opt.tests.unit.single_objective.comb"], [34, "module-opt.tests.unit.single_objective.comb.minimum_multi_cut_problem"], [35, "module-opt.tests.unit.single_objective.comb.ones_count_max_problem"], [36, "module-opt.tests.unit.single_objective.comb.set_covering_problem"], [37, "module-opt.tests.unit.single_objective.glob"], [38, "module-opt.tests.unit.single_objective.glob.function_one_variable_max_problem"], [45, "module-uo"], [46, "module-uo.algorithm"], [47, "module-uo.algorithm.exact"], [48, "module-uo.algorithm.exact.total_enumeration"], [49, "module-uo.algorithm.metaheuristic"], [50, "module-uo.algorithm.metaheuristic.electro_magnetism_like_metaheuristic"], [51, "module-uo.algorithm.metaheuristic.genetic_algorithm"], [52, "module-uo.algorithm.metaheuristic.variable_neighborhood_search"], [53, "module-uo.problem"], [54, "module-uo.solution"], [55, "module-uo.problem"], [56, "module-uo.solution"], [57, "module-uo.tests"], [58, "module-uo.tests.unit"], [59, "module-uo.tests.unit.algorithm"], [60, "module-uo.tests.unit.algorithm.exact"], [61, "module-uo.tests.unit.algorithm.exact.total_enumeration"], [62, "module-uo.tests.unit.algorithm.metaheuristic"], [63, "module-uo.tests.unit.algorithm.metaheuristic.genetic_algorithm"], [64, "module-uo.tests.unit.algorithm.metaheuristic.variable_neighborhood_search"], [65, "module-uo.tests.unit.problem"], [66, "module-uo.tests.unit.solution"], [67, "module-uo.tests.unit.utils"], [68, "module-uo.utils"]], "Ones Count Max Problem": [[42, null]], "Optimization": [[9, "optimization"]], "Problems": [[39, null]], "Problems to be solved": [[39, null]], "Program code": [[8, null]], "References": [[7, "references"]], "Set Covering Problem": [[43, null]], "Structure of the algorithm": [[7, "structure-of-the-algorithm"]], "Submodules": [[14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [21, "submodules"], [22, "submodules"], [28, "submodules"], [30, "submodules"], [34, "submodules"], [35, "submodules"], [36, "submodules"], [38, "submodules"], [46, "submodules"], [48, "submodules"], [49, "submodules"], [52, "submodules"], [53, "submodules"], [54, "submodules"], [55, "submodules"], [56, "submodules"], [58, "submodules"], [59, "submodules"], [61, "submodules"], [62, "submodules"], [63, "submodules"], [64, "submodules"], [65, "submodules"], [66, "submodules"], [67, "submodules"], [68, "submodules"]], "Subpackages": [[10, "subpackages"], [12, "subpackages"], [13, "subpackages"], [20, "subpackages"], [23, "subpackages"], [24, "subpackages"], [25, "subpackages"], [26, "subpackages"], [27, "subpackages"], [29, "subpackages"], [31, "subpackages"], [32, "subpackages"], [33, "subpackages"], [37, "subpackages"], [45, "subpackages"], [46, "subpackages"], [47, "subpackages"], [49, "subpackages"], [57, "subpackages"], [58, "subpackages"], [59, "subpackages"], [60, "subpackages"], [62, "subpackages"]], "Total Enumeration": [[6, null]], "Tutorials": [[44, null]], "Tutorials and How-To Guides": [[8, null]], "Universal optimizer - Optimization algorithms library": [[8, null]], "Variable Neighborhood Search": [[7, null]], "opt package": [[10, null]], "opt.multi_objective package": [[11, null]], "opt.single_objective package": [[12, null]], "opt.single_objective.comb package": [[13, null]], "opt.single_objective.comb.minimum_multi_cut_problem package": [[14, null]], "opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem module": [[14, "module-opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem"]], "opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem_binary_bit_array_solution module": [[14, "opt-single-objective-comb-minimum-multi-cut-problem-minimum-multi-cut-problem-binary-bit-array-solution-module"]], "opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem_binary_bit_array_solution_vns_support module": [[14, "opt-single-objective-comb-minimum-multi-cut-problem-minimum-multi-cut-problem-binary-bit-array-solution-vns-support-module"]], "opt.single_objective.comb.ones_count_max_problem package": [[15, null]], "opt.single_objective.comb.ones_count_max_problem.command_line module": [[15, "module-opt.single_objective.comb.ones_count_max_problem.command_line"]], "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem module": [[15, "module-opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem"]], "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_binary_bit_array_solution module": [[15, "opt-single-objective-comb-ones-count-max-problem-ones-count-max-problem-binary-bit-array-solution-module"]], "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_binary_bit_array_solution_te_support module": [[15, "opt-single-objective-comb-ones-count-max-problem-ones-count-max-problem-binary-bit-array-solution-te-support-module"]], "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_binary_bit_array_solution_vns_support module": [[15, "opt-single-objective-comb-ones-count-max-problem-ones-count-max-problem-binary-bit-array-solution-vns-support-module"]], "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_binary_int_solution module": [[15, "opt-single-objective-comb-ones-count-max-problem-ones-count-max-problem-binary-int-solution-module"]], "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_binary_int_solution_vns_support module": [[15, "opt-single-objective-comb-ones-count-max-problem-ones-count-max-problem-binary-int-solution-vns-support-module"]], "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy module": [[15, "module-opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy"]], "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_solver module": [[15, "opt-single-objective-comb-ones-count-max-problem-ones-count-max-problem-solver-module"]], "opt.single_objective.comb.ones_count_max_problem.solver module": [[15, "module-opt.single_objective.comb.ones_count_max_problem.solver"]], "opt.single_objective.comb.ones_count_min_problem package": [[16, null]], "opt.single_objective.comb.ones_count_min_problem.ones_count_min_problem module": [[16, "module-opt.single_objective.comb.ones_count_min_problem.ones_count_min_problem"]], "opt.single_objective.comb.set_covering_problem package": [[17, null]], "opt.single_objective.comb.set_covering_problem.set_covering_problem module": [[17, "module-opt.single_objective.comb.set_covering_problem.set_covering_problem"]], "opt.single_objective.comb.set_covering_problem.set_covering_problem_ilp_linopy_solution module": [[17, "opt-single-objective-comb-set-covering-problem-set-covering-problem-ilp-linopy-solution-module"]], "opt.single_objective.combinatorial.traveling_salesperson_problem package": [[18, null]], "opt.single_objective.constraint package": [[19, null]], "opt.single_objective.glob package": [[20, null]], "opt.single_objective.glob.function_one_variable_max_problem package": [[21, null]], "opt.single_objective.glob.function_one_variable_max_problem.command_line module": [[21, "module-opt.single_objective.glob.function_one_variable_max_problem.command_line"]], "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem module": [[21, "module-opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem"]], "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem_binary_int_solution module": [[21, "opt-single-objective-glob-function-one-variable-max-problem-function-one-variable-max-problem-binary-int-solution-module"]], "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem_binary_int_solution_vns_support module": [[21, "opt-single-objective-glob-function-one-variable-max-problem-function-one-variable-max-problem-binary-int-solution-vns-support-module"]], "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem_solver module": [[21, "opt-single-objective-glob-function-one-variable-max-problem-function-one-variable-max-problem-solver-module"]], "opt.single_objective.glob.function_one_variable_max_problem.solver module": [[21, "module-opt.single_objective.glob.function_one_variable_max_problem.solver"]], "opt.single_objective.glob.function_one_variable_min_problem package": [[22, null]], "opt.single_objective.glob.function_one_variable_min_problem.function_one_variable_min_problem module": [[22, "module-opt.single_objective.glob.function_one_variable_min_problem.function_one_variable_min_problem"]], "opt.tests package": [[23, null]], "opt.tests.integration package": [[24, null]], "opt.tests.integration.opt package": [[25, null]], "opt.tests.integration.opt.single_objective package": [[26, null]], "opt.tests.integration.opt.single_objective.comb package": [[27, null]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem package": [[28, null]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_ga_bit_array_solution module": [[28, "module-opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_ga_bit_array_solution"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_ilp_linopy module": [[28, "module-opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_ilp_linopy"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_te_bit_array_solution module": [[28, "module-opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_te_bit_array_solution"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_vns_bit_array_solution_lsbi module": [[28, "module-opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_vns_bit_array_solution_lsbi"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_vns_bit_array_solution_lsfi module": [[28, "module-opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_vns_bit_array_solution_lsfi"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_vns_int_solution_lsbi module": [[28, "module-opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_vns_int_solution_lsbi"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_vns_int_solution_lsfi module": [[28, "module-opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_vns_int_solution_lsfi"]], "opt.tests.integration.opt.single_objective.glob package": [[29, null]], "opt.tests.integration.opt.single_objective.glob.function_one_variable_problem package": [[30, null]], "opt.tests.integration.opt.single_objective.glob.function_one_variable_problem.test_max_function_one_variable_problem_vns_binary_int_solution_lsfi module": [[30, "module-opt.tests.integration.opt.single_objective.glob.function_one_variable_problem.test_max_function_one_variable_problem_vns_binary_int_solution_lsfi"]], "opt.tests.unit package": [[31, null]], "opt.tests.unit.single_objective package": [[32, null]], "opt.tests.unit.single_objective.comb package": [[33, null]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem package": [[34, null]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem module": [[34, "module-opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem"]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem_binary_bit_array_solution module": [[34, "module-opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem_binary_bit_array_solution"]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem_binary_bit_array_solution_ga_support module": [[34, "module-opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem_binary_bit_array_solution_ga_support"]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem_binary_bit_array_solution_vns_support module": [[34, "module-opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem_binary_bit_array_solution_vns_support"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem package": [[35, null]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem module": [[35, "module-opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution module": [[35, "module-opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution_te_support module": [[35, "module-opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution_te_support"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution_vns_support module": [[35, "module-opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution_vns_support"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_int_solution module": [[35, "module-opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_int_solution"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_ilp_linopy module": [[35, "module-opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_ilp_linopy"]], "opt.tests.unit.single_objective.comb.set_covering_problem package": [[36, null]], "opt.tests.unit.single_objective.comb.set_covering_problem.test_set_covering_problem module": [[36, "module-opt.tests.unit.single_objective.comb.set_covering_problem.test_set_covering_problem"]], "opt.tests.unit.single_objective.glob package": [[37, null]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem package": [[38, null]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_funcion_one_variable_problem module": [[38, "module-opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_funcion_one_variable_problem"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_function_one_variable_problem_binary_int_solution module": [[38, "module-opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_function_one_variable_problem_binary_int_solution"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_function_one_variable_problem_binary_int_solution_vns_support module": [[38, "module-opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_function_one_variable_problem_binary_int_solution_vns_support"]], "uo package": [[45, null]], "uo.algorithm package": [[46, null]], "uo.algorithm.algorithm module": [[46, "module-uo.algorithm.algorithm"]], "uo.algorithm.exact package": [[47, null]], "uo.algorithm.exact.total_enumeration package": [[48, null]], "uo.algorithm.exact.total_enumeration.problem_solution_te_support module": [[48, "uo-algorithm-exact-total-enumeration-problem-solution-te-support-module"]], "uo.algorithm.exact.total_enumeration.te_optimizer module": [[48, "module-uo.algorithm.exact.total_enumeration.te_optimizer"]], "uo.algorithm.metaheuristic package": [[49, null]], "uo.algorithm.metaheuristic.electro_magnetism_like_metaheuristic package": [[50, null]], "uo.algorithm.metaheuristic.genetic_algorithm package": [[51, null]], "uo.algorithm.metaheuristic.metaheuristic module": [[49, "module-uo.algorithm.metaheuristic.metaheuristic"]], "uo.algorithm.metaheuristic.variable_neighborhood_search package": [[52, null]], "uo.algorithm.metaheuristic.variable_neighborhood_search.problem_solution_vns_support module": [[52, "uo-algorithm-metaheuristic-variable-neighborhood-search-problem-solution-vns-support-module"]], "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer module": [[52, "module-uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer"]], "uo.algorithm.output_control module": [[46, "module-uo.algorithm.output_control"]], "uo.problem package": [[53, null]], "uo.problem.problem module": [[53, "module-uo.problem.problem"]], "uo.problem.problem_void module": [[53, "uo-problem-problem-void-module"]], "uo.solution package": [[54, null]], "uo.solution.distance_calculation_cache_control_statistics module": [[54, "module-uo.solution.distance_calculation_cache_control_statistics"]], "uo.solution.evaluation_cache_control_statistics module": [[54, "module-uo.solution.evaluation_cache_control_statistics"]], "uo.solution.quality_of_solution module": [[54, "module-uo.solution.quality_of_solution"]], "uo.solution.solution module": [[54, "module-uo.solution.solution"]], "uo.solution.solution_void module": [[54, "uo-solution-solution-void-module"]], "uo.solution.solution_void_object_str module": [[54, "uo-solution-solution-void-object-str-module"]], "uo.target_problem package": [[55, null]], "uo.target_problem.target_problem module": [[55, "module-uo.problem.problem"]], "uo.target_solution package": [[56, null]], "uo.target_solution.evaluation_cache_control_statistics module": [[56, "module-uo.solution.evaluation_cache_control_statistics"]], "uo.target_solution.target_solution module": [[56, "module-uo.solution.solution"]], "uo.tests package": [[57, null]], "uo.tests.unit package": [[58, null]], "uo.tests.unit.algorithm package": [[59, null]], "uo.tests.unit.algorithm.exact package": [[60, null]], "uo.tests.unit.algorithm.exact.total_enumeration package": [[61, null]], "uo.tests.unit.algorithm.exact.total_enumeration.test_te_optimizer module": [[61, "module-uo.tests.unit.algorithm.exact.total_enumeration.test_te_optimizer"]], "uo.tests.unit.algorithm.metaheuristic package": [[62, null]], "uo.tests.unit.algorithm.metaheuristic.genetic_algorithm package": [[63, null]], "uo.tests.unit.algorithm.metaheuristic.genetic_algorithm.test_ga_optimizer module": [[63, "module-uo.tests.unit.algorithm.metaheuristic.genetic_algorithm.test_ga_optimizer"]], "uo.tests.unit.algorithm.metaheuristic.genetic_algorithm.test_ga_optimizer_properties module": [[63, "module-uo.tests.unit.algorithm.metaheuristic.genetic_algorithm.test_ga_optimizer_properties"]], "uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control module": [[62, "module-uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control"]], "uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control_2 module": [[62, "module-uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control_2"]], "uo.tests.unit.algorithm.metaheuristic.test_finish_control module": [[62, "module-uo.tests.unit.algorithm.metaheuristic.test_finish_control"]], "uo.tests.unit.algorithm.metaheuristic.test_metaheuristic module": [[62, "module-uo.tests.unit.algorithm.metaheuristic.test_metaheuristic"]], "uo.tests.unit.algorithm.metaheuristic.test_single_solution_metaheuristic module": [[62, "module-uo.tests.unit.algorithm.metaheuristic.test_single_solution_metaheuristic"]], "uo.tests.unit.algorithm.metaheuristic.variable_neighborhood_search package": [[64, null]], "uo.tests.unit.algorithm.metaheuristic.variable_neighborhood_search.test_vns_optimizer module": [[64, "module-uo.tests.unit.algorithm.metaheuristic.variable_neighborhood_search.test_vns_optimizer"]], "uo.tests.unit.algorithm.metaheuristic.variable_neighborhood_search.test_vns_optmizer_properties module": [[64, "module-uo.tests.unit.algorithm.metaheuristic.variable_neighborhood_search.test_vns_optmizer_properties"]], "uo.tests.unit.algorithm.test_algorithm module": [[59, "module-uo.tests.unit.algorithm.test_algorithm"]], "uo.tests.unit.algorithm.test_optimizer module": [[59, "module-uo.tests.unit.algorithm.test_optimizer"]], "uo.tests.unit.algorithm.test_output_control module": [[59, "module-uo.tests.unit.algorithm.test_output_control"]], "uo.tests.unit.problem package": [[65, null]], "uo.tests.unit.problem.test_problem__copy__ module": [[65, "module-uo.tests.unit.problem.test_problem__copy__"]], "uo.tests.unit.problem.test_problem_properties module": [[65, "module-uo.tests.unit.problem.test_problem_properties"]], "uo.tests.unit.solution package": [[66, null]], "uo.tests.unit.solution.test_distance_calculation_cache_control_statistics module": [[66, "module-uo.tests.unit.solution.test_distance_calculation_cache_control_statistics"]], "uo.tests.unit.solution.test_evaluation_cache_control_statistics_operations module": [[66, "module-uo.tests.unit.solution.test_evaluation_cache_control_statistics_operations"]], "uo.tests.unit.solution.test_evaluation_cache_control_statistics_properties module": [[66, "module-uo.tests.unit.solution.test_evaluation_cache_control_statistics_properties"]], "uo.tests.unit.solution.test_solution module": [[66, "module-uo.tests.unit.solution.test_solution"]], "uo.tests.unit.solution.test_solution1 module": [[66, "module-uo.tests.unit.solution.test_solution1"]], "uo.tests.unit.solution.test_solution2 module": [[66, "module-uo.tests.unit.solution.test_solution2"]], "uo.tests.unit.solution.test_solution_void_object_str module": [[66, "module-uo.tests.unit.solution.test_solution_void_object_str"]], "uo.tests.unit.test_dummy module": [[58, "module-uo.tests.unit.test_dummy"]], "uo.tests.unit.utils package": [[67, null]], "uo.tests.unit.utils.test_complex_counter_bit_array_full module": [[67, "module-uo.tests.unit.utils.test_complex_counter_bit_array_full"]], "uo.tests.unit.utils.test_test_complex_counter_uniform_ascending module": [[67, "module-uo.tests.unit.utils.test_test_complex_counter_uniform_ascending"]], "uo.utils package": [[68, null]], "uo.utils.files module": [[68, "module-uo.utils.files"]], "uo.utils.logger module": [[68, "module-uo.utils.logger"]]}, "docnames": ["changelog", "contribution", "how_to_guides", "implemented_algorithms", "implemented_algorithms_exact", "implemented_algorithms_metaheuristic", "implemented_algorithms_total_enumeration", "implemented_algorithms_vns", "index", "modules", "opt", "opt.multi_objective", "opt.single_objective", "opt.single_objective.comb", "opt.single_objective.comb.minimum_multi_cut_problem", "opt.single_objective.comb.ones_count_max_problem", "opt.single_objective.comb.ones_count_min_problem", "opt.single_objective.comb.set_covering_problem", "opt.single_objective.comb.traveling_salesperson_problem", "opt.single_objective.constraint", "opt.single_objective.glob", "opt.single_objective.glob.function_one_variable_max_problem", "opt.single_objective.glob.function_one_variable_min_problem", "opt.tests", "opt.tests.integration", "opt.tests.integration.opt", "opt.tests.integration.opt.single_objective", "opt.tests.integration.opt.single_objective.comb", "opt.tests.integration.opt.single_objective.comb.ones_count_problem", "opt.tests.integration.opt.single_objective.glob", "opt.tests.integration.opt.single_objective.glob.function_one_variable_problem", "opt.tests.unit", "opt.tests.unit.single_objective", "opt.tests.unit.single_objective.comb", "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem", "opt.tests.unit.single_objective.comb.ones_count_max_problem", "opt.tests.unit.single_objective.comb.set_covering_problem", "opt.tests.unit.single_objective.glob", "opt.tests.unit.single_objective.glob.function_one_variable_max_problem", "problems_to_be_solved", "problems_to_be_solved_function_one_variable_max", "problems_to_be_solved_minimum_multi_cut", "problems_to_be_solved_ones_count", "problems_to_be_solved_set_covering_problem", "tutorials", "uo", "uo.algorithm", "uo.algorithm.exact", "uo.algorithm.exact.total_enumeration", "uo.algorithm.metaheuristic", "uo.algorithm.metaheuristic.electro_magnetism_like_metaheuristic", "uo.algorithm.metaheuristic.genetic_algorithm", "uo.algorithm.metaheuristic.variable_neighborhood_search", "uo.problem", "uo.solution", "uo.target_problem", "uo.target_solution", "uo.tests", "uo.tests.unit", "uo.tests.unit.algorithm", "uo.tests.unit.algorithm.exact", "uo.tests.unit.algorithm.exact.total_enumeration", "uo.tests.unit.algorithm.metaheuristic", "uo.tests.unit.algorithm.metaheuristic.genetic_algorithm", "uo.tests.unit.algorithm.metaheuristic.variable_neighborhood_search", "uo.tests.unit.problem", "uo.tests.unit.solution", "uo.tests.unit.utils", "uo.utils"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["changelog.rst", "contribution.rst", "how_to_guides.rst", "implemented_algorithms.rst", "implemented_algorithms_exact.rst", "implemented_algorithms_metaheuristic.rst", "implemented_algorithms_total_enumeration.rst", "implemented_algorithms_vns.rst", "index.rst", "modules.rst", "opt.rst", "opt.multi_objective.rst", "opt.single_objective.rst", "opt.single_objective.comb.rst", "opt.single_objective.comb.minimum_multi_cut_problem.rst", "opt.single_objective.comb.ones_count_max_problem.rst", "opt.single_objective.comb.ones_count_min_problem.rst", "opt.single_objective.comb.set_covering_problem.rst", "opt.single_objective.comb.traveling_salesperson_problem.rst", "opt.single_objective.constraint.rst", "opt.single_objective.glob.rst", "opt.single_objective.glob.function_one_variable_max_problem.rst", "opt.single_objective.glob.function_one_variable_min_problem.rst", "opt.tests.rst", "opt.tests.integration.rst", "opt.tests.integration.opt.rst", "opt.tests.integration.opt.single_objective.rst", "opt.tests.integration.opt.single_objective.comb.rst", "opt.tests.integration.opt.single_objective.comb.ones_count_problem.rst", "opt.tests.integration.opt.single_objective.glob.rst", "opt.tests.integration.opt.single_objective.glob.function_one_variable_problem.rst", "opt.tests.unit.rst", "opt.tests.unit.single_objective.rst", "opt.tests.unit.single_objective.comb.rst", "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.rst", "opt.tests.unit.single_objective.comb.ones_count_max_problem.rst", "opt.tests.unit.single_objective.comb.set_covering_problem.rst", "opt.tests.unit.single_objective.glob.rst", "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.rst", "problems_to_be_solved.rst", "problems_to_be_solved_function_one_variable_max.rst", "problems_to_be_solved_minimum_multi_cut.rst", "problems_to_be_solved_ones_count.rst", "problems_to_be_solved_set_covering_problem.rst", "tutorials.rst", "uo.rst", "uo.algorithm.rst", "uo.algorithm.exact.rst", "uo.algorithm.exact.total_enumeration.rst", "uo.algorithm.metaheuristic.rst", "uo.algorithm.metaheuristic.electro_magnetism_like_metaheuristic.rst", "uo.algorithm.metaheuristic.genetic_algorithm.rst", "uo.algorithm.metaheuristic.variable_neighborhood_search.rst", "uo.problem.rst", "uo.solution.rst", "uo.target_problem.rst", "uo.target_solution.rst", "uo.tests.rst", "uo.tests.unit.rst", "uo.tests.unit.algorithm.rst", "uo.tests.unit.algorithm.exact.rst", "uo.tests.unit.algorithm.exact.total_enumeration.rst", "uo.tests.unit.algorithm.metaheuristic.rst", "uo.tests.unit.algorithm.metaheuristic.genetic_algorithm.rst", "uo.tests.unit.algorithm.metaheuristic.variable_neighborhood_search.rst", "uo.tests.unit.problem.rst", "uo.tests.unit.solution.rst", "uo.tests.unit.utils.rst", "uo.utils.rst"], "indexentries": {"__copy__() (opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.minimummulticutproblem method)": [[14, "opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.MinimumMultiCutProblem.__copy__", false]], "__copy__() (opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.onescountmaxproblem method)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.OnesCountMaxProblem.__copy__", false]], "__copy__() (opt.single_objective.comb.set_covering_problem.set_covering_problem.setcoveringproblem method)": [[17, "opt.single_objective.comb.set_covering_problem.set_covering_problem.SetCoveringProblem.__copy__", false]], "__copy__() (uo.problem.problem.problem method)": [[53, "uo.problem.problem.Problem.__copy__", false]], "__format__() (opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.minimummulticutproblem method)": [[14, "opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.MinimumMultiCutProblem.__format__", false]], "__format__() (opt.single_objective.comb.set_covering_problem.set_covering_problem.setcoveringproblem method)": [[17, "opt.single_objective.comb.set_covering_problem.set_covering_problem.SetCoveringProblem.__format__", false]], "__repr__() (opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.minimummulticutproblem method)": [[14, "opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.MinimumMultiCutProblem.__repr__", false]], "__repr__() (opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.onescountmaxproblem method)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.OnesCountMaxProblem.__repr__", false]], "__repr__() (opt.single_objective.comb.set_covering_problem.set_covering_problem.setcoveringproblem method)": [[17, "opt.single_objective.comb.set_covering_problem.set_covering_problem.SetCoveringProblem.__repr__", false]], "__repr__() (uo.problem.problem.problem method)": [[53, "uo.problem.problem.Problem.__repr__", false]], "__str__() (opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.minimummulticutproblem method)": [[14, "opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.MinimumMultiCutProblem.__str__", false]], "__str__() (opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.onescountmaxproblem method)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.OnesCountMaxProblem.__str__", false]], "__str__() (opt.single_objective.comb.set_covering_problem.set_covering_problem.setcoveringproblem method)": [[17, "opt.single_objective.comb.set_covering_problem.set_covering_problem.SetCoveringProblem.__str__", false]], "__str__() (uo.problem.problem.problem method)": [[53, "uo.problem.problem.Problem.__str__", false]], "additional_statistics_control (uo.algorithm.metaheuristic.metaheuristic.metaheuristic property)": [[49, "uo.algorithm.metaheuristic.metaheuristic.Metaheuristic.additional_statistics_control", false]], "additional_statistics_control (uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.vnsoptimizerconstructionparameters attribute)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizerConstructionParameters.additional_statistics_control", false]], "argument() (uo.solution.solution.solution method)": [[54, "uo.solution.solution.Solution.argument", false]], "cache (uo.solution.distance_calculation_cache_control_statistics.distancecalculationcachecontrolstatistics property)": [[54, "uo.solution.distance_calculation_cache_control_statistics.DistanceCalculationCacheControlStatistics.cache", false]], "cache (uo.solution.evaluation_cache_control_statistics.evaluationcachecontrolstatistics property)": [[54, "uo.solution.evaluation_cache_control_statistics.EvaluationCacheControlStatistics.cache", false]], "cache_hit_count (uo.solution.distance_calculation_cache_control_statistics.distancecalculationcachecontrolstatistics property)": [[54, "uo.solution.distance_calculation_cache_control_statistics.DistanceCalculationCacheControlStatistics.cache_hit_count", false]], "cache_hit_count (uo.solution.evaluation_cache_control_statistics.evaluationcachecontrolstatistics property)": [[54, "uo.solution.evaluation_cache_control_statistics.EvaluationCacheControlStatistics.cache_hit_count", false]], "cache_request_count (uo.solution.distance_calculation_cache_control_statistics.distancecalculationcachecontrolstatistics property)": [[54, "uo.solution.distance_calculation_cache_control_statistics.DistanceCalculationCacheControlStatistics.cache_request_count", false]], "cache_request_count (uo.solution.evaluation_cache_control_statistics.evaluationcachecontrolstatistics property)": [[54, "uo.solution.evaluation_cache_control_statistics.EvaluationCacheControlStatistics.cache_request_count", false]], "calculate_quality() (uo.solution.solution.solution method)": [[54, "uo.solution.solution.Solution.calculate_quality", false]], "calculate_quality_directly() (uo.solution.solution.solution method)": [[54, "uo.solution.solution.Solution.calculate_quality_directly", false]], "copy() (opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.minimummulticutproblem method)": [[14, "id2", false], [14, "opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.MinimumMultiCutProblem.copy", false]], "copy() (opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.onescountmaxproblem method)": [[15, "id1", false], [15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.OnesCountMaxProblem.copy", false]], "copy() (opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.onescountmaxproblemintegerlinearprogrammingsolver method)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.OnesCountMaxProblemIntegerLinearProgrammingSolver.copy", false]], "copy() (opt.single_objective.comb.set_covering_problem.set_covering_problem.setcoveringproblem method)": [[17, "id2", false], [17, "opt.single_objective.comb.set_covering_problem.set_covering_problem.SetCoveringProblem.copy", false]], "copy() (opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.functiononevariablemaxproblemmax method)": [[21, "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.FunctionOneVariableMaxProblemMax.copy", false]], "copy() (uo.algorithm.exact.total_enumeration.te_optimizer.teoptimizer method)": [[48, "uo.algorithm.exact.total_enumeration.te_optimizer.TeOptimizer.copy", false]], "copy() (uo.algorithm.metaheuristic.metaheuristic.metaheuristic method)": [[49, "uo.algorithm.metaheuristic.metaheuristic.Metaheuristic.copy", false]], "copy() (uo.algorithm.metaheuristic.metaheuristic_void.metaheuristicvoid method)": [[49, "uo.algorithm.metaheuristic.metaheuristic_void.MetaheuristicVoid.copy", false]], "copy() (uo.algorithm.metaheuristic.population_based_metaheuristic.populationbasedmetaheuristic method)": [[49, "uo.algorithm.metaheuristic.population_based_metaheuristic.PopulationBasedMetaheuristic.copy", false]], "copy() (uo.algorithm.metaheuristic.population_based_metaheuristic_void.populationbasedmetaheuristicvoid method)": [[49, "uo.algorithm.metaheuristic.population_based_metaheuristic_void.PopulationBasedMetaheuristicVoid.copy", false]], "copy() (uo.algorithm.metaheuristic.single_solution_metaheuristic.singlesolutionmetaheuristic method)": [[49, "uo.algorithm.metaheuristic.single_solution_metaheuristic.SingleSolutionMetaheuristic.copy", false]], "copy() (uo.algorithm.metaheuristic.single_solution_metaheuristic_void.singlesolutionmetaheuristicvoid method)": [[49, "uo.algorithm.metaheuristic.single_solution_metaheuristic_void.SingleSolutionMetaheuristicVoid.copy", false]], "copy() (uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.vnsoptimizer method)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizer.copy", false]], "copy() (uo.problem.problem.problem method)": [[53, "id3", false], [53, "uo.problem.problem.Problem.copy", false]], "copy() (uo.solution.solution.solution method)": [[54, "uo.solution.solution.Solution.copy", false]], "copy_from() (uo.solution.solution.solution method)": [[54, "uo.solution.solution.Solution.copy_from", false]], "current_population (uo.algorithm.metaheuristic.population_based_metaheuristic.populationbasedmetaheuristic property)": [[49, "uo.algorithm.metaheuristic.population_based_metaheuristic.PopulationBasedMetaheuristic.current_population", false]], "current_solution (uo.algorithm.exact.total_enumeration.te_optimizer.teoptimizer property)": [[48, "uo.algorithm.exact.total_enumeration.te_optimizer.TeOptimizer.current_solution", false]], "current_solution (uo.algorithm.metaheuristic.single_solution_metaheuristic.singlesolutionmetaheuristic property)": [[49, "uo.algorithm.metaheuristic.single_solution_metaheuristic.SingleSolutionMetaheuristic.current_solution", false]], "determine_fields_val() (uo.algorithm.metaheuristic.metaheuristic.metaheuristic method)": [[49, "uo.algorithm.metaheuristic.metaheuristic.Metaheuristic.determine_fields_val", false]], "dimension (opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.onescountmaxproblem attribute)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.OnesCountMaxProblem.dimension", false]], "dimension (opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.onescountmaxproblem property)": [[15, "id2", false]], "dimension (opt.single_objective.comb.set_covering_problem.set_covering_problem.setcoveringproblem property)": [[17, "id3", false]], "dimension() (opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.onescountmaxproblem method)": [[15, "id0", false]], "dimension() (opt.single_objective.comb.set_covering_problem.set_covering_problem.setcoveringproblem method)": [[17, "opt.single_objective.comb.set_covering_problem.set_covering_problem.SetCoveringProblem.dimension", false]], "distancecalculationcachecontrolstatistics (class in uo.solution.distance_calculation_cache_control_statistics)": [[54, "uo.solution.distance_calculation_cache_control_statistics.DistanceCalculationCacheControlStatistics", false]], "domain_high (opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.functiononevariablemaxproblemmax property)": [[21, "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.FunctionOneVariableMaxProblemMax.domain_high", false]], "domain_high (opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.functiononevariablemaxproblemmaxelements attribute)": [[21, "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.FunctionOneVariableMaxProblemMaxElements.domain_high", false]], "domain_low (opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.functiononevariablemaxproblemmax property)": [[21, "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.FunctionOneVariableMaxProblemMax.domain_low", false]], "domain_low (opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.functiononevariablemaxproblemmaxelements attribute)": [[21, "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.FunctionOneVariableMaxProblemMaxElements.domain_low", false]], "elapsed_seconds() (uo.algorithm.metaheuristic.metaheuristic.metaheuristic method)": [[49, "uo.algorithm.metaheuristic.metaheuristic.Metaheuristic.elapsed_seconds", false]], "evaluate() (uo.solution.solution.solution method)": [[54, "uo.solution.solution.Solution.evaluate", false]], "evaluation_cache_cs (uo.solution.solution.solution property)": [[54, "uo.solution.solution.Solution.evaluation_cache_cs", false]], "evaluationcachecontrolstatistics (class in uo.solution.evaluation_cache_control_statistics)": [[54, "uo.solution.evaluation_cache_control_statistics.EvaluationCacheControlStatistics", false]], "expression (opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.functiononevariablemaxproblemmax property)": [[21, "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.FunctionOneVariableMaxProblemMax.expression", false]], "expression (opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.functiononevariablemaxproblemmaxelements attribute)": [[21, "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.FunctionOneVariableMaxProblemMaxElements.expression", false]], "finish_control (uo.algorithm.metaheuristic.metaheuristic.metaheuristic property)": [[49, "uo.algorithm.metaheuristic.metaheuristic.Metaheuristic.finish_control", false]], "finish_control (uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.vnsoptimizerconstructionparameters attribute)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizerConstructionParameters.finish_control", false]], "fitness_value (uo.solution.quality_of_solution.qualityofsolution property)": [[54, "uo.solution.quality_of_solution.QualityOfSolution.fitness_value", false]], "fitness_value (uo.solution.solution.solution property)": [[54, "uo.solution.solution.Solution.fitness_value", false]], "fitness_values (uo.solution.quality_of_solution.qualityofsolution property)": [[54, "uo.solution.quality_of_solution.QualityOfSolution.fitness_values", false]], "fitness_values (uo.solution.solution.solution property)": [[54, "uo.solution.solution.Solution.fitness_values", false]], "from_construction_tuple() (opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.onescountmaxproblemintegerlinearprogrammingsolver class method)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.OnesCountMaxProblemIntegerLinearProgrammingSolver.from_construction_tuple", false]], "from_construction_tuple() (uo.algorithm.exact.total_enumeration.te_optimizer.teoptimizer class method)": [[48, "uo.algorithm.exact.total_enumeration.te_optimizer.TeOptimizer.from_construction_tuple", false]], "from_construction_tuple() (uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.vnsoptimizer class method)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizer.from_construction_tuple", false]], "from_dimension() (opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.onescountmaxproblem class method)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.OnesCountMaxProblem.from_dimension", false]], "from_graph_and_source_terminal_pairs() (opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.minimummulticutproblem class method)": [[14, "opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.MinimumMultiCutProblem.from_graph_and_source_terminal_pairs", false]], "from_input_file() (opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.onescountmaxproblem class method)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.OnesCountMaxProblem.from_input_file", false]], "from_input_file() (opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.functiononevariablemaxproblemmax class method)": [[21, "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.FunctionOneVariableMaxProblemMax.from_input_file", false]], "from_input_files() (opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.minimummulticutproblem class method)": [[14, "opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.MinimumMultiCutProblem.from_input_files", false]], "from_input_files() (opt.single_objective.comb.set_covering_problem.set_covering_problem.setcoveringproblem class method)": [[17, "opt.single_objective.comb.set_covering_problem.set_covering_problem.SetCoveringProblem.from_input_files", false]], "from_universe_and_subset_files() (opt.single_objective.comb.set_covering_problem.set_covering_problem.setcoveringproblem class method)": [[17, "opt.single_objective.comb.set_covering_problem.set_covering_problem.SetCoveringProblem.from_universe_and_subset_files", false]], "functiononevariablemaxproblemmax (class in opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem)": [[21, "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.FunctionOneVariableMaxProblemMax", false]], "functiononevariablemaxproblemmaxelements (class in opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem)": [[21, "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.FunctionOneVariableMaxProblemMaxElements", false]], "graph (opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.minimummulticutproblem attribute)": [[14, "opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.MinimumMultiCutProblem.graph", false]], "graph (opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.minimummulticutproblem property)": [[14, "id3", false]], "graph() (opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.minimummulticutproblem method)": [[14, "id0", false]], "increment_cache_hit_count() (uo.solution.distance_calculation_cache_control_statistics.distancecalculationcachecontrolstatistics method)": [[54, "uo.solution.distance_calculation_cache_control_statistics.DistanceCalculationCacheControlStatistics.increment_cache_hit_count", false]], "increment_cache_hit_count() (uo.solution.evaluation_cache_control_statistics.evaluationcachecontrolstatistics method)": [[54, "uo.solution.evaluation_cache_control_statistics.EvaluationCacheControlStatistics.increment_cache_hit_count", false]], "increment_cache_request_count() (uo.solution.distance_calculation_cache_control_statistics.distancecalculationcachecontrolstatistics method)": [[54, "uo.solution.distance_calculation_cache_control_statistics.DistanceCalculationCacheControlStatistics.increment_cache_request_count", false]], "increment_cache_request_count() (uo.solution.evaluation_cache_control_statistics.evaluationcachecontrolstatistics method)": [[54, "uo.solution.evaluation_cache_control_statistics.EvaluationCacheControlStatistics.increment_cache_request_count", false]], "init() (uo.algorithm.exact.total_enumeration.te_optimizer.teoptimizer method)": [[48, "uo.algorithm.exact.total_enumeration.te_optimizer.TeOptimizer.init", false]], "init() (uo.algorithm.metaheuristic.metaheuristic_void.metaheuristicvoid method)": [[49, "uo.algorithm.metaheuristic.metaheuristic_void.MetaheuristicVoid.init", false]], "init() (uo.algorithm.metaheuristic.population_based_metaheuristic_void.populationbasedmetaheuristicvoid method)": [[49, "uo.algorithm.metaheuristic.population_based_metaheuristic_void.PopulationBasedMetaheuristicVoid.init", false]], "init() (uo.algorithm.metaheuristic.single_solution_metaheuristic_void.singlesolutionmetaheuristicvoid method)": [[49, "uo.algorithm.metaheuristic.single_solution_metaheuristic_void.SingleSolutionMetaheuristicVoid.init", false]], "init() (uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.vnsoptimizer method)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizer.init", false]], "init_from() (uo.solution.solution.solution method)": [[54, "uo.solution.solution.Solution.init_from", false]], "init_random() (uo.solution.solution.solution method)": [[54, "uo.solution.solution.Solution.init_random", false]], "is_better() (uo.solution.solution.solution method)": [[54, "uo.solution.solution.Solution.is_better", false]], "is_feasible (uo.solution.quality_of_solution.qualityofsolution property)": [[54, "uo.solution.quality_of_solution.QualityOfSolution.is_feasible", false]], "is_feasible (uo.solution.solution.solution property)": [[54, "uo.solution.solution.Solution.is_feasible", false]], "is_minimization (uo.problem.problem.problem attribute)": [[53, "uo.problem.problem.Problem.is_minimization", false]], "is_minimization (uo.problem.problem.problem property)": [[53, "id4", false]], "is_minimization() (uo.problem.problem.problem method)": [[53, "id1", false]], "is_multi_objective (uo.problem.problem.problem attribute)": [[53, "uo.problem.problem.Problem.is_multi_objective", false]], "is_multi_objective (uo.problem.problem.problem property)": [[53, "id5", false]], "is_multi_objective() (uo.problem.problem.problem method)": [[53, "id2", false]], "k_max (uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.vnsoptimizer property)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizer.k_max", false]], "k_max (uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.vnsoptimizerconstructionparameters attribute)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizerConstructionParameters.k_max", false]], "k_min (uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.vnsoptimizer property)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizer.k_min", false]], "k_min (uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.vnsoptimizerconstructionparameters attribute)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizerConstructionParameters.k_min", false]], "main() (in module opt.single_objective.comb.ones_count_max_problem.solver)": [[15, "opt.single_objective.comb.ones_count_max_problem.solver.main", false]], "main() (in module opt.single_objective.glob.function_one_variable_max_problem.solver)": [[21, "opt.single_objective.glob.function_one_variable_max_problem.solver.main", false]], "main_loop() (uo.algorithm.metaheuristic.metaheuristic.metaheuristic method)": [[49, "uo.algorithm.metaheuristic.metaheuristic.Metaheuristic.main_loop", false]], "main_loop_iteration() (uo.algorithm.metaheuristic.metaheuristic.metaheuristic method)": [[49, "uo.algorithm.metaheuristic.metaheuristic.Metaheuristic.main_loop_iteration", false]], "main_loop_iteration() (uo.algorithm.metaheuristic.metaheuristic_void.metaheuristicvoid method)": [[49, "uo.algorithm.metaheuristic.metaheuristic_void.MetaheuristicVoid.main_loop_iteration", false]], "main_loop_iteration() (uo.algorithm.metaheuristic.population_based_metaheuristic_void.populationbasedmetaheuristicvoid method)": [[49, "uo.algorithm.metaheuristic.population_based_metaheuristic_void.PopulationBasedMetaheuristicVoid.main_loop_iteration", false]], "main_loop_iteration() (uo.algorithm.metaheuristic.single_solution_metaheuristic_void.singlesolutionmetaheuristicvoid method)": [[49, "uo.algorithm.metaheuristic.single_solution_metaheuristic_void.SingleSolutionMetaheuristicVoid.main_loop_iteration", false]], "main_loop_iteration() (uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.vnsoptimizer method)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizer.main_loop_iteration", false]], "max_cache_size (uo.solution.distance_calculation_cache_control_statistics.distancecalculationcachecontrolstatistics property)": [[54, "uo.solution.distance_calculation_cache_control_statistics.DistanceCalculationCacheControlStatistics.max_cache_size", false]], "max_cache_size (uo.solution.evaluation_cache_control_statistics.evaluationcachecontrolstatistics property)": [[54, "uo.solution.evaluation_cache_control_statistics.EvaluationCacheControlStatistics.max_cache_size", false]], "metaheuristic (class in uo.algorithm.metaheuristic.metaheuristic)": [[49, "uo.algorithm.metaheuristic.metaheuristic.Metaheuristic", false]], "metaheuristicvoid (class in uo.algorithm.metaheuristic.metaheuristic_void)": [[49, "uo.algorithm.metaheuristic.metaheuristic_void.MetaheuristicVoid", false]], "minimummulticutproblem (class in opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem)": [[14, "opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.MinimumMultiCutProblem", false]], "model (opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.onescountmaxproblemintegerlinearprogrammingsolver property)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.OnesCountMaxProblemIntegerLinearProgrammingSolver.model", false]], "module": [[13, "module-opt.single_objective.comb", false], [14, "module-opt.single_objective.comb.minimum_multi_cut_problem", false], [14, "module-opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem", false], [15, "module-opt.single_objective.comb.ones_count_max_problem", false], [15, "module-opt.single_objective.comb.ones_count_max_problem.command_line", false], [15, "module-opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem", false], [15, "module-opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy", false], [15, "module-opt.single_objective.comb.ones_count_max_problem.solver", false], [17, "module-opt.single_objective.comb.set_covering_problem", false], [17, "module-opt.single_objective.comb.set_covering_problem.set_covering_problem", false], [20, "module-opt.single_objective.glob", false], [21, "module-opt.single_objective.glob.function_one_variable_max_problem", false], [21, "module-opt.single_objective.glob.function_one_variable_max_problem.command_line", false], [21, "module-opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem", false], [21, "module-opt.single_objective.glob.function_one_variable_max_problem.solver", false], [26, "module-opt.tests.integration.opt.single_objective", false], [27, "module-opt.tests.integration.opt.single_objective.comb", false], [45, "module-uo", false], [47, "module-uo.algorithm.exact", false], [48, "module-uo.algorithm.exact.total_enumeration", false], [48, "module-uo.algorithm.exact.total_enumeration.te_optimizer", false], [49, "module-uo.algorithm.metaheuristic", false], [49, "module-uo.algorithm.metaheuristic.metaheuristic", false], [49, "module-uo.algorithm.metaheuristic.metaheuristic_void", false], [49, "module-uo.algorithm.metaheuristic.population_based_metaheuristic", false], [49, "module-uo.algorithm.metaheuristic.population_based_metaheuristic_void", false], [49, "module-uo.algorithm.metaheuristic.single_solution_metaheuristic", false], [49, "module-uo.algorithm.metaheuristic.single_solution_metaheuristic_void", false], [52, "module-uo.algorithm.metaheuristic.variable_neighborhood_search", false], [52, "module-uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer", false], [53, "module-uo.problem", false], [53, "module-uo.problem.problem", false], [54, "module-uo.solution", false], [54, "module-uo.solution.distance_calculation_cache_control_statistics", false], [54, "module-uo.solution.evaluation_cache_control_statistics", false], [54, "module-uo.solution.quality_of_solution", false], [54, "module-uo.solution.solution", false]], "name (uo.problem.problem.problem attribute)": [[53, "uo.problem.problem.Problem.name", false]], "name (uo.problem.problem.problem property)": [[53, "id6", false]], "name() (uo.problem.problem.problem method)": [[53, "id0", false]], "native_representation() (uo.solution.solution.solution method)": [[54, "uo.solution.solution.Solution.native_representation", false]], "number_of_intervals (opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.functiononevariablemaxproblemmax property)": [[21, "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.FunctionOneVariableMaxProblemMax.number_of_intervals", false]], "objective_value (uo.solution.quality_of_solution.qualityofsolution property)": [[54, "uo.solution.quality_of_solution.QualityOfSolution.objective_value", false]], "objective_value (uo.solution.solution.solution property)": [[54, "uo.solution.solution.Solution.objective_value", false]], "objective_values (uo.solution.quality_of_solution.qualityofsolution property)": [[54, "uo.solution.quality_of_solution.QualityOfSolution.objective_values", false]], "objective_values (uo.solution.solution.solution property)": [[54, "uo.solution.solution.Solution.objective_values", false]], "obtain_feasible_representation() (uo.solution.solution.solution method)": [[54, "uo.solution.solution.Solution.obtain_feasible_representation", false]], "onescountmaxproblem (class in opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.OnesCountMaxProblem", false]], "onescountmaxproblemintegerlinearprogrammingsolution (class in opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.OnesCountMaxProblemIntegerLinearProgrammingSolution", false]], "onescountmaxproblemintegerlinearprogrammingsolver (class in opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.OnesCountMaxProblemIntegerLinearProgrammingSolver", false]], "onescountmaxproblemintegerlinearprogrammingsolverconstructionparameters (class in opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.OnesCountMaxProblemIntegerLinearProgrammingSolverConstructionParameters", false]], "opt.single_objective.comb": [[13, "module-opt.single_objective.comb", false]], "opt.single_objective.comb.minimum_multi_cut_problem": [[14, "module-opt.single_objective.comb.minimum_multi_cut_problem", false]], "opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem": [[14, "module-opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem", false]], "opt.single_objective.comb.ones_count_max_problem": [[15, "module-opt.single_objective.comb.ones_count_max_problem", false]], "opt.single_objective.comb.ones_count_max_problem.command_line": [[15, "module-opt.single_objective.comb.ones_count_max_problem.command_line", false]], "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem": [[15, "module-opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem", false]], "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy": [[15, "module-opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy", false]], "opt.single_objective.comb.ones_count_max_problem.solver": [[15, "module-opt.single_objective.comb.ones_count_max_problem.solver", false]], "opt.single_objective.comb.set_covering_problem": [[17, "module-opt.single_objective.comb.set_covering_problem", false]], "opt.single_objective.comb.set_covering_problem.set_covering_problem": [[17, "module-opt.single_objective.comb.set_covering_problem.set_covering_problem", false]], "opt.single_objective.glob": [[20, "module-opt.single_objective.glob", false]], "opt.single_objective.glob.function_one_variable_max_problem": [[21, "module-opt.single_objective.glob.function_one_variable_max_problem", false]], "opt.single_objective.glob.function_one_variable_max_problem.command_line": [[21, "module-opt.single_objective.glob.function_one_variable_max_problem.command_line", false]], "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem": [[21, "module-opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem", false]], "opt.single_objective.glob.function_one_variable_max_problem.solver": [[21, "module-opt.single_objective.glob.function_one_variable_max_problem.solver", false]], "opt.tests.integration.opt.single_objective": [[26, "module-opt.tests.integration.opt.single_objective", false]], "opt.tests.integration.opt.single_objective.comb": [[27, "module-opt.tests.integration.opt.single_objective.comb", false]], "optimize() (opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.onescountmaxproblemintegerlinearprogrammingsolver method)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.OnesCountMaxProblemIntegerLinearProgrammingSolver.optimize", false]], "optimize() (uo.algorithm.exact.total_enumeration.te_optimizer.teoptimizer method)": [[48, "uo.algorithm.exact.total_enumeration.te_optimizer.TeOptimizer.optimize", false]], "optimize() (uo.algorithm.metaheuristic.metaheuristic.metaheuristic method)": [[49, "uo.algorithm.metaheuristic.metaheuristic.Metaheuristic.optimize", false]], "output_control (opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.onescountmaxproblemintegerlinearprogrammingsolverconstructionparameters property)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.OnesCountMaxProblemIntegerLinearProgrammingSolverConstructionParameters.output_control", false]], "output_control (uo.algorithm.exact.total_enumeration.te_optimizer.teoptimizerconstructionparameters attribute)": [[48, "uo.algorithm.exact.total_enumeration.te_optimizer.TeOptimizerConstructionParameters.output_control", false]], "output_control (uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.vnsoptimizerconstructionparameters attribute)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizerConstructionParameters.output_control", false]], "parse_arguments() (in module opt.single_objective.comb.ones_count_max_problem.command_line)": [[15, "opt.single_objective.comb.ones_count_max_problem.command_line.parse_arguments", false]], "parse_arguments() (in module opt.single_objective.glob.function_one_variable_max_problem.command_line)": [[21, "opt.single_objective.glob.function_one_variable_max_problem.command_line.parse_arguments", false]], "populationbasedmetaheuristic (class in uo.algorithm.metaheuristic.population_based_metaheuristic)": [[49, "uo.algorithm.metaheuristic.population_based_metaheuristic.PopulationBasedMetaheuristic", false]], "populationbasedmetaheuristicvoid (class in uo.algorithm.metaheuristic.population_based_metaheuristic_void)": [[49, "uo.algorithm.metaheuristic.population_based_metaheuristic_void.PopulationBasedMetaheuristicVoid", false]], "problem (class in uo.problem.problem)": [[53, "uo.problem.problem.Problem", false]], "problem (opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.onescountmaxproblemintegerlinearprogrammingsolverconstructionparameters property)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.OnesCountMaxProblemIntegerLinearProgrammingSolverConstructionParameters.problem", false]], "problem (uo.algorithm.exact.total_enumeration.te_optimizer.teoptimizerconstructionparameters attribute)": [[48, "uo.algorithm.exact.total_enumeration.te_optimizer.TeOptimizerConstructionParameters.problem", false]], "problem (uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.vnsoptimizerconstructionparameters attribute)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizerConstructionParameters.problem", false]], "quality (uo.solution.solution.solution property)": [[54, "uo.solution.solution.Solution.quality", false]], "qualityofsolution (class in uo.solution.quality_of_solution)": [[54, "uo.solution.quality_of_solution.QualityOfSolution", false]], "random() (in module opt.single_objective.glob.function_one_variable_max_problem.solver)": [[21, "opt.single_objective.glob.function_one_variable_max_problem.solver.random", false]], "random() (in module uo.algorithm.exact.total_enumeration.te_optimizer)": [[48, "uo.algorithm.exact.total_enumeration.te_optimizer.random", false]], "random() (in module uo.algorithm.metaheuristic.metaheuristic)": [[49, "uo.algorithm.metaheuristic.metaheuristic.random", false]], "random() (in module uo.algorithm.metaheuristic.metaheuristic_void)": [[49, "uo.algorithm.metaheuristic.metaheuristic_void.random", false]], "random() (in module uo.algorithm.metaheuristic.population_based_metaheuristic)": [[49, "uo.algorithm.metaheuristic.population_based_metaheuristic.random", false]], "random() (in module uo.algorithm.metaheuristic.population_based_metaheuristic_void)": [[49, "uo.algorithm.metaheuristic.population_based_metaheuristic_void.random", false]], "random() (in module uo.algorithm.metaheuristic.single_solution_metaheuristic)": [[49, "uo.algorithm.metaheuristic.single_solution_metaheuristic.random", false]], "random() (in module uo.algorithm.metaheuristic.single_solution_metaheuristic_void)": [[49, "uo.algorithm.metaheuristic.single_solution_metaheuristic_void.random", false]], "random() (in module uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.random", false]], "random() (in module uo.solution.solution)": [[54, "uo.solution.solution.random", false]], "random_seed (uo.algorithm.metaheuristic.metaheuristic.metaheuristic property)": [[49, "uo.algorithm.metaheuristic.metaheuristic.Metaheuristic.random_seed", false]], "random_seed (uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.vnsoptimizerconstructionparameters attribute)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizerConstructionParameters.random_seed", false]], "random_seed (uo.solution.solution.solution property)": [[54, "uo.solution.solution.Solution.random_seed", false]], "representation (uo.solution.solution.solution property)": [[54, "uo.solution.solution.Solution.representation", false]], "representation_distance() (uo.solution.solution.solution method)": [[54, "uo.solution.solution.Solution.representation_distance", false]], "representation_distance_cache_cs (uo.solution.solution.solution property)": [[54, "uo.solution.solution.Solution.representation_distance_cache_cs", false]], "representation_distance_directly() (uo.solution.solution.solution method)": [[54, "uo.solution.solution.Solution.representation_distance_directly", false]], "setcoveringproblem (class in opt.single_objective.comb.set_covering_problem.set_covering_problem)": [[17, "opt.single_objective.comb.set_covering_problem.set_covering_problem.SetCoveringProblem", false]], "should_finish() (uo.algorithm.metaheuristic.metaheuristic.metaheuristic method)": [[49, "uo.algorithm.metaheuristic.metaheuristic.Metaheuristic.should_finish", false]], "singlesolutionmetaheuristic (class in uo.algorithm.metaheuristic.single_solution_metaheuristic)": [[49, "uo.algorithm.metaheuristic.single_solution_metaheuristic.SingleSolutionMetaheuristic", false]], "singlesolutionmetaheuristicvoid (class in uo.algorithm.metaheuristic.single_solution_metaheuristic_void)": [[49, "uo.algorithm.metaheuristic.single_solution_metaheuristic_void.SingleSolutionMetaheuristicVoid", false]], "solution (class in uo.solution.solution)": [[54, "uo.solution.solution.Solution", false]], "solution_template (uo.algorithm.exact.total_enumeration.te_optimizer.teoptimizerconstructionparameters attribute)": [[48, "uo.algorithm.exact.total_enumeration.te_optimizer.TeOptimizerConstructionParameters.solution_template", false]], "solution_template (uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.vnsoptimizerconstructionparameters attribute)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizerConstructionParameters.solution_template", false]], "source_terminal_pairs (opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.minimummulticutproblem attribute)": [[14, "opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.MinimumMultiCutProblem.source_terminal_pairs", false]], "source_terminal_pairs (opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.minimummulticutproblem property)": [[14, "id4", false]], "source_terminal_pairs() (opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.minimummulticutproblem method)": [[14, "id1", false]], "string_rep() (opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.minimummulticutproblem method)": [[14, "opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.MinimumMultiCutProblem.string_rep", false]], "string_rep() (opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.onescountmaxproblem method)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.OnesCountMaxProblem.string_rep", false]], "string_rep() (opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.onescountmaxproblemintegerlinearprogrammingsolver method)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.OnesCountMaxProblemIntegerLinearProgrammingSolver.string_rep", false]], "string_rep() (opt.single_objective.comb.set_covering_problem.set_covering_problem.setcoveringproblem method)": [[17, "opt.single_objective.comb.set_covering_problem.set_covering_problem.SetCoveringProblem.string_rep", false]], "string_rep() (opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.functiononevariablemaxproblemmax method)": [[21, "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.FunctionOneVariableMaxProblemMax.string_rep", false]], "string_rep() (uo.algorithm.exact.total_enumeration.te_optimizer.teoptimizer method)": [[48, "uo.algorithm.exact.total_enumeration.te_optimizer.TeOptimizer.string_rep", false]], "string_rep() (uo.algorithm.metaheuristic.metaheuristic.metaheuristic method)": [[49, "uo.algorithm.metaheuristic.metaheuristic.Metaheuristic.string_rep", false]], "string_rep() (uo.algorithm.metaheuristic.population_based_metaheuristic.populationbasedmetaheuristic method)": [[49, "uo.algorithm.metaheuristic.population_based_metaheuristic.PopulationBasedMetaheuristic.string_rep", false]], "string_rep() (uo.algorithm.metaheuristic.single_solution_metaheuristic.singlesolutionmetaheuristic method)": [[49, "uo.algorithm.metaheuristic.single_solution_metaheuristic.SingleSolutionMetaheuristic.string_rep", false]], "string_rep() (uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.vnsoptimizer method)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizer.string_rep", false]], "string_rep() (uo.problem.problem.problem method)": [[53, "uo.problem.problem.Problem.string_rep", false]], "string_rep() (uo.solution.distance_calculation_cache_control_statistics.distancecalculationcachecontrolstatistics method)": [[54, "uo.solution.distance_calculation_cache_control_statistics.DistanceCalculationCacheControlStatistics.string_rep", false]], "string_rep() (uo.solution.evaluation_cache_control_statistics.evaluationcachecontrolstatistics method)": [[54, "uo.solution.evaluation_cache_control_statistics.EvaluationCacheControlStatistics.string_rep", false]], "string_rep() (uo.solution.solution.solution method)": [[54, "uo.solution.solution.Solution.string_rep", false]], "string_representation() (opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.onescountmaxproblemintegerlinearprogrammingsolution method)": [[15, "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.OnesCountMaxProblemIntegerLinearProgrammingSolution.string_representation", false]], "string_representation() (uo.solution.solution.solution method)": [[54, "uo.solution.solution.Solution.string_representation", false]], "subsets (opt.single_objective.comb.set_covering_problem.set_covering_problem.setcoveringproblem attribute)": [[17, "opt.single_objective.comb.set_covering_problem.set_covering_problem.SetCoveringProblem.subsets", false]], "subsets (opt.single_objective.comb.set_covering_problem.set_covering_problem.setcoveringproblem property)": [[17, "id4", false]], "subsets() (opt.single_objective.comb.set_covering_problem.set_covering_problem.setcoveringproblem method)": [[17, "id1", false]], "te_operations_support (uo.algorithm.exact.total_enumeration.te_optimizer.teoptimizerconstructionparameters attribute)": [[48, "uo.algorithm.exact.total_enumeration.te_optimizer.TeOptimizerConstructionParameters.te_operations_support", false]], "teoptimizer (class in uo.algorithm.exact.total_enumeration.te_optimizer)": [[48, "uo.algorithm.exact.total_enumeration.te_optimizer.TeOptimizer", false]], "teoptimizerconstructionparameters (class in uo.algorithm.exact.total_enumeration.te_optimizer)": [[48, "uo.algorithm.exact.total_enumeration.te_optimizer.TeOptimizerConstructionParameters", false]], "universe (opt.single_objective.comb.set_covering_problem.set_covering_problem.setcoveringproblem attribute)": [[17, "opt.single_objective.comb.set_covering_problem.set_covering_problem.SetCoveringProblem.universe", false]], "universe (opt.single_objective.comb.set_covering_problem.set_covering_problem.setcoveringproblem property)": [[17, "id5", false]], "universe() (opt.single_objective.comb.set_covering_problem.set_covering_problem.setcoveringproblem method)": [[17, "id0", false]], "uo": [[45, "module-uo", false]], "uo.algorithm.exact": [[47, "module-uo.algorithm.exact", false]], "uo.algorithm.exact.total_enumeration": [[48, "module-uo.algorithm.exact.total_enumeration", false]], "uo.algorithm.exact.total_enumeration.te_optimizer": [[48, "module-uo.algorithm.exact.total_enumeration.te_optimizer", false]], "uo.algorithm.metaheuristic": [[49, "module-uo.algorithm.metaheuristic", false]], "uo.algorithm.metaheuristic.metaheuristic": [[49, "module-uo.algorithm.metaheuristic.metaheuristic", false]], "uo.algorithm.metaheuristic.metaheuristic_void": [[49, "module-uo.algorithm.metaheuristic.metaheuristic_void", false]], "uo.algorithm.metaheuristic.population_based_metaheuristic": [[49, "module-uo.algorithm.metaheuristic.population_based_metaheuristic", false]], "uo.algorithm.metaheuristic.population_based_metaheuristic_void": [[49, "module-uo.algorithm.metaheuristic.population_based_metaheuristic_void", false]], "uo.algorithm.metaheuristic.single_solution_metaheuristic": [[49, "module-uo.algorithm.metaheuristic.single_solution_metaheuristic", false]], "uo.algorithm.metaheuristic.single_solution_metaheuristic_void": [[49, "module-uo.algorithm.metaheuristic.single_solution_metaheuristic_void", false]], "uo.algorithm.metaheuristic.variable_neighborhood_search": [[52, "module-uo.algorithm.metaheuristic.variable_neighborhood_search", false]], "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer": [[52, "module-uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer", false]], "uo.problem": [[53, "module-uo.problem", false]], "uo.problem.problem": [[53, "module-uo.problem.problem", false]], "uo.solution": [[54, "module-uo.solution", false]], "uo.solution.distance_calculation_cache_control_statistics": [[54, "module-uo.solution.distance_calculation_cache_control_statistics", false]], "uo.solution.evaluation_cache_control_statistics": [[54, "module-uo.solution.evaluation_cache_control_statistics", false]], "uo.solution.quality_of_solution": [[54, "module-uo.solution.quality_of_solution", false]], "uo.solution.solution": [[54, "module-uo.solution.solution", false]], "update_additional_statistics_if_required() (uo.algorithm.metaheuristic.metaheuristic.metaheuristic method)": [[49, "uo.algorithm.metaheuristic.metaheuristic.Metaheuristic.update_additional_statistics_if_required", false]], "vns_ls_support (uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.vnsoptimizerconstructionparameters attribute)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizerConstructionParameters.vns_ls_support", false]], "vns_shaking_support (uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.vnsoptimizerconstructionparameters attribute)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizerConstructionParameters.vns_shaking_support", false]], "vnsoptimizer (class in uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizer", false]], "vnsoptimizerconstructionparameters (class in uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer)": [[52, "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizerConstructionParameters", false]]}, "objects": {"": [[10, 0, 0, "-", "opt"], [45, 0, 0, "-", "uo"]], "opt": [[11, 0, 0, "-", "multi_objective"], [12, 0, 0, "-", "single_objective"], [23, 0, 0, "-", "tests"]], "opt.single_objective": [[13, 0, 0, "-", "comb"], [19, 0, 0, "-", "constraint"], [20, 0, 0, "-", "glob"]], "opt.single_objective.comb": [[14, 0, 0, "-", "minimum_multi_cut_problem"], [15, 0, 0, "-", "ones_count_max_problem"], [16, 0, 0, "-", "ones_count_min_problem"], [17, 0, 0, "-", "set_covering_problem"], [18, 0, 0, "-", "traveling_salesperson_problem"]], "opt.single_objective.comb.minimum_multi_cut_problem": [[14, 0, 0, "-", "minimum_multi_cut_problem"]], "opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem": [[14, 1, 1, "", "MinimumMultiCutProblem"]], "opt.single_objective.comb.minimum_multi_cut_problem.minimum_multi_cut_problem.MinimumMultiCutProblem": [[14, 2, 1, "", "__copy__"], [14, 2, 1, "", "__format__"], [14, 2, 1, "", "__repr__"], [14, 2, 1, "", "__str__"], [14, 2, 1, "id2", "copy"], [14, 2, 1, "", "from_graph_and_source_terminal_pairs"], [14, 2, 1, "", "from_input_files"], [14, 3, 1, "id3", "graph"], [14, 3, 1, "id4", "source_terminal_pairs"], [14, 2, 1, "", "string_rep"]], "opt.single_objective.comb.ones_count_max_problem": [[15, 0, 0, "-", "command_line"], [15, 0, 0, "-", "ones_count_max_problem"], [15, 0, 0, "-", "ones_count_max_problem_ilp_linopy"], [15, 0, 0, "-", "solver"]], "opt.single_objective.comb.ones_count_max_problem.command_line": [[15, 4, 1, "", "parse_arguments"]], "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem": [[15, 1, 1, "", "OnesCountMaxProblem"]], "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem.OnesCountMaxProblem": [[15, 2, 1, "", "__copy__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "__str__"], [15, 2, 1, "id1", "copy"], [15, 3, 1, "id2", "dimension"], [15, 2, 1, "", "from_dimension"], [15, 2, 1, "", "from_input_file"], [15, 2, 1, "", "string_rep"]], "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy": [[15, 1, 1, "", "OnesCountMaxProblemIntegerLinearProgrammingSolution"], [15, 1, 1, "", "OnesCountMaxProblemIntegerLinearProgrammingSolver"], [15, 1, 1, "", "OnesCountMaxProblemIntegerLinearProgrammingSolverConstructionParameters"]], "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.OnesCountMaxProblemIntegerLinearProgrammingSolution": [[15, 2, 1, "", "string_representation"]], "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.OnesCountMaxProblemIntegerLinearProgrammingSolver": [[15, 2, 1, "", "copy"], [15, 2, 1, "", "from_construction_tuple"], [15, 3, 1, "", "model"], [15, 2, 1, "", "optimize"], [15, 2, 1, "", "string_rep"]], "opt.single_objective.comb.ones_count_max_problem.ones_count_max_problem_ilp_linopy.OnesCountMaxProblemIntegerLinearProgrammingSolverConstructionParameters": [[15, 3, 1, "", "output_control"], [15, 3, 1, "", "problem"]], "opt.single_objective.comb.ones_count_max_problem.solver": [[15, 4, 1, "", "main"]], "opt.single_objective.comb.ones_count_min_problem": [[16, 0, 0, "-", "ones_count_min_problem"]], "opt.single_objective.comb.ones_count_min_problem.ones_count_min_problem": [[16, 1, 1, "", "OnesCountMinProblem"]], "opt.single_objective.comb.ones_count_min_problem.ones_count_min_problem.OnesCountMinProblem": [[16, 2, 1, "", "copy"], [16, 3, 1, "", "dimension"], [16, 2, 1, "", "from_dimension"], [16, 2, 1, "", "from_input_file"], [16, 2, 1, "", "string_rep"]], "opt.single_objective.comb.set_covering_problem": [[17, 0, 0, "-", "set_covering_problem"]], "opt.single_objective.comb.set_covering_problem.set_covering_problem": [[17, 1, 1, "", "SetCoveringProblem"]], "opt.single_objective.comb.set_covering_problem.set_covering_problem.SetCoveringProblem": [[17, 2, 1, "", "__copy__"], [17, 2, 1, "", "__format__"], [17, 2, 1, "", "__repr__"], [17, 2, 1, "", "__str__"], [17, 2, 1, "id2", "copy"], [17, 3, 1, "id3", "dimension"], [17, 2, 1, "", "from_input_files"], [17, 2, 1, "", "from_universe_and_subset_files"], [17, 2, 1, "", "string_rep"], [17, 3, 1, "id4", "subsets"], [17, 3, 1, "id5", "universe"]], "opt.single_objective.glob": [[21, 0, 0, "-", "function_one_variable_max_problem"], [22, 0, 0, "-", "function_one_variable_min_problem"]], "opt.single_objective.glob.function_one_variable_max_problem": [[21, 0, 0, "-", "command_line"], [21, 0, 0, "-", "function_one_variable_max_problem"], [21, 0, 0, "-", "solver"]], "opt.single_objective.glob.function_one_variable_max_problem.command_line": [[21, 4, 1, "", "parse_arguments"]], "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem": [[21, 1, 1, "", "FunctionOneVariableMaxProblemMax"], [21, 1, 1, "", "FunctionOneVariableMaxProblemMaxElements"]], "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.FunctionOneVariableMaxProblemMax": [[21, 2, 1, "", "copy"], [21, 3, 1, "", "domain_high"], [21, 3, 1, "", "domain_low"], [21, 3, 1, "", "expression"], [21, 2, 1, "", "from_input_file"], [21, 3, 1, "", "number_of_intervals"], [21, 2, 1, "", "string_rep"]], "opt.single_objective.glob.function_one_variable_max_problem.function_one_variable_max_problem.FunctionOneVariableMaxProblemMaxElements": [[21, 5, 1, "", "domain_high"], [21, 5, 1, "", "domain_low"], [21, 5, 1, "", "expression"]], "opt.single_objective.glob.function_one_variable_max_problem.solver": [[21, 4, 1, "", "main"], [21, 4, 1, "", "random"]], "opt.single_objective.glob.function_one_variable_min_problem": [[22, 0, 0, "-", "function_one_variable_min_problem"]], "opt.single_objective.glob.function_one_variable_min_problem.function_one_variable_min_problem": [[22, 1, 1, "", "FunctionOneVariableMinProblem"], [22, 1, 1, "", "FunctionOneVariableMinProblemElements"]], "opt.single_objective.glob.function_one_variable_min_problem.function_one_variable_min_problem.FunctionOneVariableMinProblem": [[22, 2, 1, "", "copy"], [22, 3, 1, "", "domain_high"], [22, 3, 1, "", "domain_low"], [22, 3, 1, "", "expression"], [22, 2, 1, "", "from_input_file"], [22, 3, 1, "", "number_of_intervals"], [22, 2, 1, "", "string_rep"]], "opt.single_objective.glob.function_one_variable_min_problem.function_one_variable_min_problem.FunctionOneVariableMinProblemElements": [[22, 5, 1, "", "domain_high"], [22, 5, 1, "", "domain_low"], [22, 5, 1, "", "expression"]], "opt.tests": [[24, 0, 0, "-", "integration"], [31, 0, 0, "-", "unit"]], "opt.tests.integration": [[25, 0, 0, "-", "opt"]], "opt.tests.integration.opt": [[26, 0, 0, "-", "single_objective"]], "opt.tests.integration.opt.single_objective": [[27, 0, 0, "-", "comb"], [29, 0, 0, "-", "glob"]], "opt.tests.integration.opt.single_objective.comb": [[28, 0, 0, "-", "ones_count_problem"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem": [[28, 0, 0, "-", "test_ones_count_max_problem_ga_bit_array_solution"], [28, 0, 0, "-", "test_ones_count_max_problem_ilp_linopy"], [28, 0, 0, "-", "test_ones_count_max_problem_te_bit_array_solution"], [28, 0, 0, "-", "test_ones_count_max_problem_vns_bit_array_solution_lsbi"], [28, 0, 0, "-", "test_ones_count_max_problem_vns_bit_array_solution_lsfi"], [28, 0, 0, "-", "test_ones_count_max_problem_vns_int_solution_lsbi"], [28, 0, 0, "-", "test_ones_count_max_problem_vns_int_solution_lsfi"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_ga_bit_array_solution": [[28, 1, 1, "", "TestOnesCountMaxProblemGaBitArraySolution"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_ga_bit_array_solution.TestOnesCountMaxProblemGaBitArraySolution": [[28, 2, 1, "", "setUp"], [28, 2, 1, "", "setUpClass"], [28, 2, 1, "", "tearDown"], [28, 2, 1, "", "tearDownClass"], [28, 2, 1, "", "test_best_solution_after_optimization_should_be_optimal"], [28, 2, 1, "", "test_best_solution_after_optimization_should_have_optimal_fitness"], [28, 2, 1, "", "test_best_solution_after_optimization_should_have_optimal_objective_value"], [28, 2, 1, "", "test_returned_best_solution_is_equal_to_optimizer_best_solution"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_ilp_linopy": [[28, 1, 1, "", "TestOnesCountMaxProblemIlpLinopy"], [28, 1, 1, "", "TestOptimize"], [28, 1, 1, "", "TestStringRep"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_ilp_linopy.TestOnesCountMaxProblemIlpLinopy": [[28, 2, 1, "", "setUp"], [28, 2, 1, "", "setUpClass"], [28, 2, 1, "", "tearDown"], [28, 2, 1, "", "tearDownClass"], [28, 2, 1, "", "test_best_solution_after_optimization_should_be_optimal"], [28, 2, 1, "", "test_default_parameters"], [28, 2, 1, "", "test_different_types"], [28, 2, 1, "", "test_invalid_output_control"], [28, 2, 1, "", "test_invalid_problem"], [28, 2, 1, "", "test_same_types_different_classes"], [28, 2, 1, "", "test_valid_parameters"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_ilp_linopy.TestOptimize": [[28, 2, 1, "", "test_invalid_instance_type_error"], [28, 2, 1, "", "test_model_instance_and_variables_added"], [28, 2, 1, "", "test_model_solved_and_best_solution_set"], [28, 2, 1, "", "test_objective_function_set"], [28, 2, 1, "", "test_valid_instance_no_errors"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_ilp_linopy.TestStringRep": [[28, 2, 1, "", "test_contains_class_name_and_properties"], [28, 2, 1, "", "test_properly_formatted_with_indentation_and_grouping_symbols"], [28, 2, 1, "", "test_returns_string_representation"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_te_bit_array_solution": [[28, 1, 1, "", "TestOnesCountMaxProblemTeBitArraySolution"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_te_bit_array_solution.TestOnesCountMaxProblemTeBitArraySolution": [[28, 2, 1, "", "setUp"], [28, 2, 1, "", "setUpClass"], [28, 2, 1, "", "tearDown"], [28, 2, 1, "", "tearDownClass"], [28, 2, 1, "", "test_best_solution_after_optimization_should_be_optimal"], [28, 2, 1, "", "test_best_solution_after_optimization_should_be_optimal2"], [28, 2, 1, "", "test_best_solution_after_optimization_should_be_optimal3"], [28, 2, 1, "", "test_best_solution_after_optimization_should_be_optimal4"], [28, 2, 1, "", "test_best_solution_after_optimization_should_have_optimal_fitness"], [28, 2, 1, "", "test_best_solution_after_optimization_should_have_optimal_fitness2"], [28, 2, 1, "", "test_best_solution_after_optimization_should_have_optimal_objective_value"], [28, 2, 1, "", "test_best_solution_after_optimization_should_have_optimal_objective_value2"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_vns_bit_array_solution_lsbi": [[28, 1, 1, "", "TestOnesCountMaxProblemVnsBitArraySolutionLsbi"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_vns_bit_array_solution_lsbi.TestOnesCountMaxProblemVnsBitArraySolutionLsbi": [[28, 2, 1, "", "setUp"], [28, 2, 1, "", "setUpClass"], [28, 2, 1, "", "tearDown"], [28, 2, 1, "", "tearDownClass"], [28, 2, 1, "", "test_best_solution_after_optimization_should_be_optimal"], [28, 2, 1, "", "test_best_solution_after_optimization_should_be_optimal_2"], [28, 2, 1, "", "test_best_solution_after_optimization_should_have_optimal_fitness"], [28, 2, 1, "", "test_best_solution_after_optimization_should_have_optimal_objective_value"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_vns_bit_array_solution_lsfi": [[28, 1, 1, "", "TestOnesCountMaxProblemVnsBitArraySolutionLsbi"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_vns_bit_array_solution_lsfi.TestOnesCountMaxProblemVnsBitArraySolutionLsbi": [[28, 2, 1, "", "setUp"], [28, 2, 1, "", "setUpClass"], [28, 2, 1, "", "tearDown"], [28, 2, 1, "", "tearDownClass"], [28, 2, 1, "", "test_best_solution_after_optimization_should_be_all_optimal"], [28, 2, 1, "", "test_best_solution_after_optimization_should_be_optimal_2"], [28, 2, 1, "", "test_best_solution_after_optimization_should_have_optimal_fitness"], [28, 2, 1, "", "test_best_solution_after_optimization_should_have_optimal_objective_value"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_vns_int_solution_lsbi": [[28, 1, 1, "", "TestOnesCountMaxProblemVnsIntSolutionLsbi"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_vns_int_solution_lsbi.TestOnesCountMaxProblemVnsIntSolutionLsbi": [[28, 2, 1, "", "setUp"], [28, 2, 1, "", "setUpClass"], [28, 2, 1, "", "tearDown"], [28, 2, 1, "", "tearDownClass"], [28, 2, 1, "", "test_best_solution_after_optimization_should_be_all_optimal"], [28, 2, 1, "", "test_best_solution_after_optimization_should_have_optimal_fitness"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_vns_int_solution_lsfi": [[28, 1, 1, "", "TestOnesCountMaxProblemVnsIntSolutionLsfi"]], "opt.tests.integration.opt.single_objective.comb.ones_count_problem.test_ones_count_max_problem_vns_int_solution_lsfi.TestOnesCountMaxProblemVnsIntSolutionLsfi": [[28, 2, 1, "", "setUp"], [28, 2, 1, "", "setUpClass"], [28, 2, 1, "", "tearDown"], [28, 2, 1, "", "tearDownClass"], [28, 2, 1, "", "test_best_solution_after_optimization_should_be_all_optimal"], [28, 2, 1, "", "test_best_solution_after_optimization_should_have_optimal_fitness"]], "opt.tests.integration.opt.single_objective.glob": [[30, 0, 0, "-", "function_one_variable_problem"]], "opt.tests.integration.opt.single_objective.glob.function_one_variable_problem": [[30, 0, 0, "-", "test_max_function_one_variable_problem_vns_binary_int_solution_lsfi"]], "opt.tests.integration.opt.single_objective.glob.function_one_variable_problem.test_max_function_one_variable_problem_vns_binary_int_solution_lsfi": [[30, 1, 1, "", "TestMaxFunctionOneVariableMaxProblemIntSolutionLsfi"]], "opt.tests.integration.opt.single_objective.glob.function_one_variable_problem.test_max_function_one_variable_problem_vns_binary_int_solution_lsfi.TestMaxFunctionOneVariableMaxProblemIntSolutionLsfi": [[30, 2, 1, "", "setUp"], [30, 2, 1, "", "setUpClass"], [30, 2, 1, "", "tearDown"], [30, 2, 1, "", "tearDownClass"], [30, 2, 1, "", "test_best_solution_after_optimization_should_be_all_optimal"], [30, 2, 1, "", "test_best_solution_after_optimization_should_have_optimal_fitness_value"], [30, 2, 1, "", "test_best_solution_after_optimization_should_have_optimal_objective_value"]], "opt.tests.unit": [[32, 0, 0, "-", "single_objective"]], "opt.tests.unit.single_objective": [[33, 0, 0, "-", "comb"], [37, 0, 0, "-", "glob"]], "opt.tests.unit.single_objective.comb": [[34, 0, 0, "-", "minimum_multi_cut_problem"], [35, 0, 0, "-", "ones_count_max_problem"], [36, 0, 0, "-", "set_covering_problem"]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem": [[34, 0, 0, "-", "test_minimum_multi_cut_problem"], [34, 0, 0, "-", "test_minimum_multi_cut_problem_binary_bit_array_solution"], [34, 0, 0, "-", "test_minimum_multi_cut_problem_binary_bit_array_solution_ga_support"], [34, 0, 0, "-", "test_minimum_multi_cut_problem_binary_bit_array_solution_vns_support"]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem": [[34, 1, 1, "", "TestMinimumMultiCutProblem"]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem.TestMinimumMultiCutProblem": [[34, 2, 1, "", "test_copy_creates_new_instance_with_same_properties"], [34, 2, 1, "", "test_from_graph_and_st_pairs_creates_new_instance_with_specified_parameteres"], [34, 2, 1, "", "test_instantiation_without_st_parameter"], [34, 2, 1, "", "test_new_instance_with_graph_and_st_pairs_sets_both_properties"], [34, 2, 1, "", "test_string_representation_includes_st_pairs"]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem_binary_bit_array_solution": [[34, 1, 1, "", "TestArgument"], [34, 1, 1, "", "TestInitFrom"], [34, 1, 1, "", "TestMinimumMultiCutProblemBitArraySolution"], [34, 1, 1, "", "TestNativeRepresentation"], [34, 1, 1, "", "TestRepresentationDistanceDirectly"], [34, 1, 1, "", "TestStringRep"]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem_binary_bit_array_solution.TestArgument": [[34, 2, 1, "", "test_returns_binary_string_representation"], [34, 2, 1, "", "test_returns_empty_string_for_empty_representation"], [34, 2, 1, "", "test_returns_string_representation"], [34, 2, 1, "", "test_returns_string_representation_with_leading_zeros_for_all_false_bits"]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem_binary_bit_array_solution.TestInitFrom": [[34, 2, 1, "", "test_raises_type_error_for_invalid_representation"], [34, 2, 1, "", "test_sets_internal_representation"]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem_binary_bit_array_solution.TestMinimumMultiCutProblemBitArraySolution": [[34, 2, 1, "", "test_argument_method_returns_correct_string_representation"], [34, 2, 1, "", "test_calculate_quality_directly_method_with_all_bits_True"], [34, 2, 1, "", "test_copy_method_returns_deep_copy"], [34, 2, 1, "", "test_init_from_method_with_bitarray_and_problem"], [34, 2, 1, "", "test_init_random_method_with_problem"], [34, 2, 1, "", "test_initialize_instance_with_default_parameters"], [34, 2, 1, "", "test_native_representation_method_with_string_representation"], [34, 2, 1, "", "test_representation_distance_directly_method_with_string_representations"], [34, 2, 1, "", "test_representation_distance_directly_raises_value_error"]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem_binary_bit_array_solution.TestNativeRepresentation": [[34, 2, 1, "", "test_invalid_characters_representation"], [34, 2, 1, "", "test_length_1_representation"], [34, 2, 1, "", "test_non_string_representation"], [34, 2, 1, "", "test_same_binary_representation"], [34, 2, 1, "", "test_valid_binary_string_representation"]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem_binary_bit_array_solution.TestRepresentationDistanceDirectly": [[34, 2, 1, "", "test_completely_different_solutions"], [34, 2, 1, "", "test_different_lengths"], [34, 2, 1, "", "test_different_types"], [34, 2, 1, "", "test_empty_solutions"], [34, 2, 1, "", "test_identical_solutions"], [34, 2, 1, "", "test_one_different_bit"]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem_binary_bit_array_solution.TestStringRep": [[34, 2, 1, "", "test_default_values"], [34, 2, 1, "", "test_delimiter_is_none"], [34, 2, 1, "", "test_group_start_is_none"], [34, 2, 1, "", "test_includes_string_representation"], [34, 2, 1, "", "test_includes_super_class_representation"], [34, 2, 1, "", "test_indentation_is_none"], [34, 2, 1, "", "test_optional_parameters"], [34, 2, 1, "", "test_returns_string_representation"]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem_binary_bit_array_solution_ga_support": [[34, 1, 1, "", "TestMinimumMultiCutProblemBitArraySolutionGaSupport"]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem_binary_bit_array_solution_ga_support.TestMinimumMultiCutProblemBitArraySolutionGaSupport": [[34, 2, 1, "", "test_mutation_returns_none"]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem_binary_bit_array_solution_vns_support": [[34, 1, 1, "", "TestMinimumMultiCutProblemBitArraySolutionVnsSupport"]], "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem.test_minimum_multi_cut_problem_binary_bit_array_solution_vns_support.TestMinimumMultiCutProblemBitArraySolutionVnsSupport": [[34, 2, 1, "", "test_local_search_best_improvement_returns_solution_with_lower_fitness_value11"], [34, 2, 1, "", "test_local_search_best_improvement_returns_solution_with_lower_fitness_value6"], [34, 2, 1, "", "test_shaking_modifies_solution_representation_when_number_of_ones_is_less_than_problem_dimension8"], [34, 2, 1, "", "test_shaking_returns_true_when_randomization_is_successful"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem": [[35, 0, 0, "-", "test_ones_count_problem"], [35, 0, 0, "-", "test_ones_count_problem_binary_bit_array_solution"], [35, 0, 0, "-", "test_ones_count_problem_binary_bit_array_solution_te_support"], [35, 0, 0, "-", "test_ones_count_problem_binary_bit_array_solution_vns_support"], [35, 0, 0, "-", "test_ones_count_problem_binary_int_solution"], [35, 0, 0, "-", "test_ones_count_problem_ilp_linopy"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem": [[35, 1, 1, "", "TestFromDimension"], [35, 1, 1, "", "TestOnesCountMaxProblem"], [35, 1, 1, "", "Test__LoadFromFile__"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem.TestFromDimension": [[35, 2, 1, "", "test_correct_dimension_value"], [35, 2, 1, "", "test_create_instance_with_dimension"], [35, 2, 1, "", "test_raises_type_error_if_dimension_not_integer"], [35, 2, 1, "", "test_raises_value_error_if_dimension_less_than_or_equal_to_zero"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem.TestOnesCountMaxProblem": [[35, 2, 1, "", "test_copy_creates_new_instance_with_same_properties"], [35, 2, 1, "", "test_copy_creates_new_instance_with_same_properties_but_not_same_object"], [35, 2, 1, "", "test_from_dimension_creates_new_instance_with_specified_dimension"], [35, 2, 1, "", "test_instantiation_from_input_file_with_missing_dimension_value_raises_value_error"], [35, 2, 1, "", "test_instantiation_from_input_file_with_specified_format"], [35, 2, 1, "", "test_instantiation_from_input_file_with_unsupported_format_raises_value_error"], [35, 2, 1, "", "test_instantiation_with_negative_dimension_raises_value_error"], [35, 2, 1, "", "test_instantiation_with_non_integer_dimension_raises_type_error"], [35, 2, 1, "", "test_instantiation_with_zero_dimension_raises_value_error"], [35, 2, 1, "", "test_instantiation_without_dimension_parameter"], [35, 2, 1, "", "test_new_instance_with_dimension_sets_dimension_property"], [35, 2, 1, "", "test_string_representation_includes_dimension_property"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem.Test__LoadFromFile__": [[35, 2, 1, "", "test_raise_value_error_if_data_format_not_txt"], [35, 2, 1, "", "test_raise_value_error_if_loading_from_file_produces_invalid_dimension"], [35, 2, 1, "", "test_read_dimension_from_txt_file"], [35, 2, 1, "", "test_return_dimension_as_integer"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution": [[35, 1, 1, "", "TestArgument"], [35, 1, 1, "", "TestCalculateQualityDirectly"], [35, 1, 1, "", "TestInitFrom"], [35, 1, 1, "", "TestInitRandom"], [35, 1, 1, "", "TestNativeRepresentation"], [35, 1, 1, "", "TestOnesCountMaxProblemBitArraySolution"], [35, 1, 1, "", "TestRepresentationDistanceDirectly"], [35, 1, 1, "", "TestStringRep"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution.TestArgument": [[35, 2, 1, "", "test_returns_binary_string_representation"], [35, 2, 1, "", "test_returns_empty_string_for_empty_representation"], [35, 2, 1, "", "test_returns_string_representation"], [35, 2, 1, "", "test_returns_string_representation_with_leading_zeros_for_all_false_bits"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution.TestCalculateQualityDirectly": [[35, 2, 1, "", "test_all_bits_set_to_0"], [35, 2, 1, "", "test_all_bits_set_to_1"], [35, 2, 1, "", "test_bitarray_length_0"], [35, 2, 1, "", "test_non_bitarray_representation"], [35, 2, 1, "", "test_none_representation"], [35, 2, 1, "", "test_random_bit_string"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution.TestInitFrom": [[35, 2, 1, "", "test_raises_type_error_for_invalid_representation"], [35, 2, 1, "", "test_sets_internal_representation"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution.TestInitRandom": [[35, 2, 1, "", "test_initializes_solution_with_correct_dimension"], [35, 2, 1, "", "test_initializes_solution_with_dimension_0"], [35, 2, 1, "", "test_initializes_solution_with_negative_dimension"], [35, 2, 1, "", "test_sets_elements_to_true_or_false_with_probability_50_percent"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution.TestNativeRepresentation": [[35, 2, 1, "", "test_invalid_characters_representation"], [35, 2, 1, "", "test_length_1_representation"], [35, 2, 1, "", "test_non_string_representation"], [35, 2, 1, "", "test_same_binary_representation"], [35, 2, 1, "", "test_valid_binary_string_representation"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution.TestOnesCountMaxProblemBitArraySolution": [[35, 2, 1, "", "test_argument_method_returns_correct_string_representation"], [35, 2, 1, "", "test_calculate_quality_directly_method_with_all_bits_false"], [35, 2, 1, "", "test_calculate_quality_directly_method_with_all_bits_true"], [35, 2, 1, "", "test_calculate_quality_directly_method_with_bitarray_and_problem"], [35, 2, 1, "", "test_copy_method_returns_deep_copy"], [35, 2, 1, "", "test_init_from_method_with_bitarray_and_problem"], [35, 2, 1, "", "test_init_random_method_with_problem"], [35, 2, 1, "", "test_initialize_instance_with_default_parameters"], [35, 2, 1, "", "test_native_representation_method_with_string_representation"], [35, 2, 1, "", "test_representation_distance_directly_method_with_string_representations"], [35, 2, 1, "", "test_representation_distance_directly_raises_value_error"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution.TestRepresentationDistanceDirectly": [[35, 2, 1, "", "test_completely_different_solutions"], [35, 2, 1, "", "test_different_lengths"], [35, 2, 1, "", "test_different_types"], [35, 2, 1, "", "test_empty_solutions"], [35, 2, 1, "", "test_identical_solutions"], [35, 2, 1, "", "test_one_different_bit"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution.TestStringRep": [[35, 2, 1, "", "test_default_values"], [35, 2, 1, "", "test_delimiter_is_none"], [35, 2, 1, "", "test_group_start_is_none"], [35, 2, 1, "", "test_includes_string_representation"], [35, 2, 1, "", "test_includes_super_class_representation"], [35, 2, 1, "", "test_indentation_is_none"], [35, 2, 1, "", "test_optional_parameters"], [35, 2, 1, "", "test_returns_string_representation"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution_te_support": [[35, 1, 1, "", "TestTeOperationsSupportBitArray"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution_te_support.TestTeOperationsSupportBitArray": [[35, 2, 1, "", "test_can_progress"], [35, 2, 1, "", "test_progress_internal_counter_and_state"], [35, 2, 1, "", "test_reset_internal_counter_and_state"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution_vns_support": [[35, 1, 1, "", "TestOnesCountMaxProblemBitArraySolutionVnsSupport"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_bit_array_solution_vns_support.TestOnesCountMaxProblemBitArraySolutionVnsSupport": [[35, 2, 1, "", "test_local_search_best_improvement_returns_solution_with_higher_fitness_value11"], [35, 2, 1, "", "test_local_search_best_improvement_returns_solution_with_higher_fitness_value6"], [35, 2, 1, "", "test_local_search_first_improvement_returns_solution_with_higher_fitness_value10"], [35, 2, 1, "", "test_local_search_first_improvement_returns_solution_with_higher_fitness_value4"], [35, 2, 1, "", "test_shaking_modifies_solution_representation_when_number_of_ones_is_less_than_problem_dimension8"], [35, 2, 1, "", "test_shaking_returns_true_when_randomization_is_successful"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_int_solution": [[35, 1, 1, "", "TestNativeRepresentation"], [35, 1, 1, "", "TestOnesCountMaxProblemIntSolution"], [35, 1, 1, "", "TestRepresentationDistanceDirectly"], [35, 1, 1, "", "TestStringRep"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_int_solution.TestNativeRepresentation": [[35, 2, 1, "", "test_obtain_int_representation"], [35, 2, 1, "", "test_string_representation_contains_binary_digits"], [35, 2, 1, "", "test_string_representation_is_double_zero"], [35, 2, 1, "", "test_string_representation_is_one"], [35, 2, 1, "", "test_string_representation_is_zero"], [35, 2, 1, "", "test_string_representation_not_empty"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_int_solution.TestOnesCountMaxProblemIntSolution": [[35, 2, 1, "", "test_calculate_quality_directly"], [35, 2, 1, "", "test_create_new_instance_with_custom_parameters"], [35, 2, 1, "", "test_create_new_instance_with_default_parameters"], [35, 2, 1, "", "test_create_new_instance_with_large_dimension"], [35, 2, 1, "", "test_create_new_instance_with_negative_random_seed"], [35, 2, 1, "", "test_create_new_instance_with_zero_dimension"], [35, 2, 1, "", "test_initialize_solution_from_representation"], [35, 2, 1, "", "test_initialize_solution_randomly"], [35, 2, 1, "", "test_initialize_solution_randomly_with_none_dimension"], [35, 2, 1, "", "test_obtain_native_representation_from_string_representation"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_int_solution.TestRepresentationDistanceDirectly": [[35, 2, 1, "", "test_different_lengths"], [35, 2, 1, "", "test_different_solutions"], [35, 2, 1, "", "test_identical_solutions"], [35, 2, 1, "", "test_non_binary_characters"], [35, 2, 1, "", "test_one_bit_difference"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_binary_int_solution.TestStringRep": [[35, 2, 1, "", "test_includes_native_representation"], [35, 2, 1, "", "test_includes_superclass_representation"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_ilp_linopy": [[35, 1, 1, "", "TestOnesCountMaxProblemIntegerLinearProgrammingSolverConstructionParameters"]], "opt.tests.unit.single_objective.comb.ones_count_max_problem.test_ones_count_problem_ilp_linopy.TestOnesCountMaxProblemIntegerLinearProgrammingSolverConstructionParameters": [[35, 2, 1, "", "test_default_parameters_no_exceptions"], [35, 2, 1, "", "test_invalid_output_control_type"], [35, 2, 1, "", "test_invalid_problem_type"], [35, 2, 1, "", "test_valid_parameters_no_exceptions"]], "opt.tests.unit.single_objective.comb.set_covering_problem": [[36, 0, 0, "-", "test_set_covering_problem"]], "opt.tests.unit.single_objective.comb.set_covering_problem.test_set_covering_problem": [[36, 1, 1, "", "TestSetCoveringProblem"]], "opt.tests.unit.single_objective.comb.set_covering_problem.test_set_covering_problem.TestSetCoveringProblem": [[36, 2, 1, "", "test_copy_creates_new_instance_with_same_properties"], [36, 2, 1, "", "test_copy_creates_new_instance_with_same_properties_but_not_same_object"], [36, 2, 1, "", "test_instantiation_from_input_file"], [36, 2, 1, "", "test_new_instance_with_universe_and_subsets_set_both_properties"], [36, 2, 1, "", "test_string_representation_includes_universe_and_subset_property"]], "opt.tests.unit.single_objective.glob": [[38, 0, 0, "-", "function_one_variable_max_problem"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem": [[38, 0, 0, "-", "test_funcion_one_variable_problem"], [38, 0, 0, "-", "test_function_one_variable_problem_binary_int_solution"], [38, 0, 0, "-", "test_function_one_variable_problem_binary_int_solution_vns_support"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_funcion_one_variable_problem": [[38, 1, 1, "", "TestExpression"], [38, 1, 1, "", "TestFunctionOneVariableMaxProblem"], [38, 1, 1, "", "TestStringRep"], [38, 1, 1, "", "Test__Copy__"], [38, 1, 1, "", "Test__FromInputFile__"], [38, 1, 1, "", "Test__LoadFromFile__"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_funcion_one_variable_problem.TestExpression": [[38, 2, 1, "", "test_raises_value_error_when_domain_low_is_not_a_number"], [38, 2, 1, "", "test_raises_value_error_when_expression_is_none"], [38, 2, 1, "", "test_returns_expression_string"], [38, 2, 1, "", "test_returns_non_empty_string"], [38, 2, 1, "", "test_returns_string_with_valid_characters"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_funcion_one_variable_problem.TestFunctionOneVariableMaxProblem": [[38, 2, 1, "", "test_expression_is_empty_string"], [38, 2, 1, "", "test_expression_is_none"], [38, 2, 1, "", "test_invalid_domain_high_parameter"], [38, 2, 1, "", "test_invalid_domain_low_parameter"], [38, 2, 1, "", "test_invalid_expression_parameter"], [38, 2, 1, "", "test_minimum_values"], [38, 2, 1, "", "test_valid_expression_domain_low_domain_high"], [38, 2, 1, "", "test_valid_expression_domain_low_equal_domain_high"], [38, 2, 1, "", "test_valid_instance_creation"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_funcion_one_variable_problem.TestStringRep": [[38, 2, 1, "", "test_properly_indents_and_groups_string_representation"], [38, 2, 1, "", "test_repr_representation"], [38, 2, 1, "", "test_returns_empty_string_if_delimiter_is_none"], [38, 2, 1, "", "test_returns_empty_string_if_indentation_is_negative"], [38, 2, 1, "", "test_returns_empty_string_if_indentation_symbol_is_none"], [38, 2, 1, "", "test_returns_string_representation_with_specified_parameters"], [38, 2, 1, "", "test_str_representation"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_funcion_one_variable_problem.Test__Copy__": [[38, 2, 1, "", "test_deep_copy"], [38, 2, 1, "", "test_return_new_instance"], [38, 2, 1, "", "test_same_attribute_values"], [38, 2, 1, "", "test_subclass_instance"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_funcion_one_variable_problem.Test__FromInputFile__": [[38, 2, 1, "", "test_empty_input_file"], [38, 2, 1, "", "test_handle_comments_in_input_file"], [38, 2, 1, "", "test_invalid_input_file_path"], [38, 2, 1, "", "test_invalid_input_format"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_funcion_one_variable_problem.Test__LoadFromFile__": [[38, 2, 1, "", "test_empty_file"], [38, 2, 1, "", "test_invalid_data_format"], [38, 2, 1, "", "test_invalid_file_path"], [38, 2, 1, "", "test_load_from_valid_txt_file"], [38, 2, 1, "", "test_skip_comments"], [38, 2, 1, "", "test_valid_txt_file"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_function_one_variable_problem_binary_int_solution": [[38, 1, 1, "", "TestCalculateQualityDirectly"], [38, 1, 1, "", "TestFunctionOneVariableMaxProblemIntSolution"], [38, 1, 1, "", "TestInitRandom"], [38, 1, 1, "", "TestNativeRepresentation"], [38, 1, 1, "", "TestRepresentationDistanceDirectly"], [38, 1, 1, "", "TestStringRep"], [38, 1, 1, "", "Test__Init__"], [38, 1, 1, "", "Test__ObtainFeasibleHelper__"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_function_one_variable_problem_binary_int_solution.TestCalculateQualityDirectly": [[38, 2, 1, "", "test_maximum_valid_representation_and_problem"], [38, 2, 1, "", "test_minimum_valid_representation_and_problem"], [38, 2, 1, "", "test_valid_representation_and_problem"], [38, 2, 1, "", "test_valid_representation_and_problem_is_feasible"], [38, 2, 1, "", "test_valid_representation_and_problem_objective_value"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_function_one_variable_problem_binary_int_solution.TestFunctionOneVariableMaxProblemIntSolution": [[38, 2, 1, "", "test_argument_method"], [38, 2, 1, "", "test_copy_method"], [38, 2, 1, "", "test_domain_from_equal_to_domain_to"], [38, 2, 1, "", "test_domain_from_getter"], [38, 2, 1, "", "test_domain_to_getter"], [38, 2, 1, "", "test_native_representation_non_binary_characters"], [38, 2, 1, "", "test_number_of_intervals_equal_to_zero"], [38, 2, 1, "", "test_number_of_intervals_getter"], [38, 2, 1, "", "test_obtain_feasible_representation_greater_than_number_of_intervals"], [38, 2, 1, "", "test_obtain_feasible_representation_less_than_zero"], [38, 2, 1, "", "test_valid_arguments_initialization"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_function_one_variable_problem_binary_int_solution.TestInitRandom": [[38, 2, 1, "", "test_overwrite_representation_with_random_integer"], [38, 2, 1, "", "test_set_representation_to_random_integer"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_function_one_variable_problem_binary_int_solution.TestNativeRepresentation": [[38, 2, 1, "", "test_all_ones"], [38, 2, 1, "", "test_all_zeros"], [38, 2, 1, "", "test_correct_conversion"], [38, 2, 1, "", "test_empty_string"], [38, 2, 1, "", "test_non_binary_characters"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_function_one_variable_problem_binary_int_solution.TestRepresentationDistanceDirectly": [[38, 2, 1, "", "test_distance_binary_and_non_binary_representations"], [38, 2, 1, "", "test_distance_different_lengths"], [38, 2, 1, "", "test_distance_different_lengths_and_values"], [38, 2, 1, "", "test_distance_different_representations"], [38, 2, 1, "", "test_distance_identical_representations"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_function_one_variable_problem_binary_int_solution.TestStringRep": [[38, 2, 1, "", "test_empty_parameters"], [38, 2, 1, "", "test_includes_string_representation"], [38, 2, 1, "", "test_no_string_representation"], [38, 2, 1, "", "test_properly_indented_and_formatted"], [38, 2, 1, "", "test_returns_string_representation"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_function_one_variable_problem_binary_int_solution.Test__Init__": [[38, 2, 1, "", "test_float_domain"], [38, 2, 1, "", "test_integer_domain"], [38, 2, 1, "", "test_maximum_values"], [38, 2, 1, "", "test_minimum_values"], [38, 2, 1, "", "test_non_integer_number_of_intervals"], [38, 2, 1, "", "test_valid_input_parameters"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_function_one_variable_problem_binary_int_solution.Test__ObtainFeasibleHelper__": [[38, 2, 1, "", "test_representation_equal_to_number_of_intervals"], [38, 2, 1, "", "test_representation_negative"], [38, 2, 1, "", "test_representation_within_range"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_function_one_variable_problem_binary_int_solution_vns_support": [[38, 1, 1, "", "TestFunctionOneVariableMaxProblemIntSolutionVnsSupport"], [38, 1, 1, "", "Test__Copy__"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_function_one_variable_problem_binary_int_solution_vns_support.TestFunctionOneVariableMaxProblemIntSolutionVnsSupport": [[38, 2, 1, "", "test_local_search_best_improvement_returns_new_solution_with_better_fitness_value"], [38, 2, 1, "", "test_local_search_best_improvement_returns_same_solution_when_k_is_less_than_1_or_greater_than_representation_length"], [38, 2, 1, "", "test_local_search_first_improvement_returns_new_solution_with_better_fitness_value"], [38, 2, 1, "", "test_local_search_first_improvement_returns_same_solution_when_k_is_less_than_1_or_greater_than_representation_length"], [38, 2, 1, "", "test_shaking_returns_false_when_k_is_less_than_or_equal_to_0"], [38, 2, 1, "", "test_shaking_returns_true_when_k_is_greater_than_0_and_solution_is_valid"], [38, 2, 1, "", "test_string_rep_class_name"], [38, 2, 1, "", "test_string_rep_delimiter"], [38, 2, 1, "", "test_string_rep_empty_arguments"], [38, 2, 1, "", "test_string_rep_indentation"], [38, 2, 1, "", "test_string_rep_indentation_symbol"]], "opt.tests.unit.single_objective.glob.function_one_variable_max_problem.test_function_one_variable_problem_binary_int_solution_vns_support.Test__Copy__": [[38, 2, 1, "", "test_copy_all_attributes"], [38, 2, 1, "", "test_not_modify_original_object"], [38, 2, 1, "", "test_return_deep_copy"], [38, 2, 1, "", "test_return_new_object_empty"], [38, 2, 1, "", "test_return_new_object_no_immutable_attributes"], [38, 2, 1, "", "test_return_new_object_no_mutable_attributes"]], "uo": [[46, 0, 0, "-", "algorithm"], [53, 0, 0, "-", "problem"], [54, 0, 0, "-", "solution"], [57, 0, 0, "-", "tests"], [68, 0, 0, "-", "utils"]], "uo.algorithm": [[46, 0, 0, "-", "algorithm"], [47, 0, 0, "-", "exact"], [49, 0, 0, "-", "metaheuristic"], [46, 0, 0, "-", "output_control"]], "uo.algorithm.algorithm": [[46, 1, 1, "", "Algorithm"]], "uo.algorithm.algorithm.Algorithm": [[46, 2, 1, "", "__copy__"], [46, 2, 1, "", "__repr__"], [46, 2, 1, "", "__str__"], [46, 3, 1, "", "best_solution"], [46, 2, 1, "id0", "copy"], [46, 2, 1, "", "determine_fields_val"], [46, 3, 1, "", "evaluation"], [46, 3, 1, "", "evaluation_best_found"], [46, 2, 1, "", "init"], [46, 3, 1, "", "iteration"], [46, 3, 1, "", "iteration_best_found"], [46, 5, 1, "", "name"], [46, 5, 1, "", "output_control"], [46, 5, 1, "", "problem"], [46, 3, 1, "id1", "solution_template"], [46, 2, 1, "", "string_rep"]], "uo.algorithm.exact": [[48, 0, 0, "-", "total_enumeration"]], "uo.algorithm.exact.total_enumeration": [[48, 0, 0, "-", "te_optimizer"]], "uo.algorithm.exact.total_enumeration.te_optimizer": [[48, 1, 1, "", "TeOptimizer"], [48, 1, 1, "", "TeOptimizerConstructionParameters"], [48, 4, 1, "", "random"]], "uo.algorithm.exact.total_enumeration.te_optimizer.TeOptimizer": [[48, 2, 1, "", "copy"], [48, 3, 1, "", "current_solution"], [48, 2, 1, "", "from_construction_tuple"], [48, 2, 1, "", "init"], [48, 2, 1, "", "optimize"], [48, 2, 1, "", "string_rep"]], "uo.algorithm.exact.total_enumeration.te_optimizer.TeOptimizerConstructionParameters": [[48, 5, 1, "", "output_control"], [48, 5, 1, "", "problem"], [48, 5, 1, "", "solution_template"], [48, 5, 1, "", "te_operations_support"]], "uo.algorithm.metaheuristic": [[50, 0, 0, "-", "electro_magnetism_like_metaheuristic"], [51, 0, 0, "-", "genetic_algorithm"], [49, 0, 0, "-", "metaheuristic"], [49, 0, 0, "-", "metaheuristic_void"], [49, 0, 0, "-", "population_based_metaheuristic"], [49, 0, 0, "-", "population_based_metaheuristic_void"], [49, 0, 0, "-", "single_solution_metaheuristic"], [49, 0, 0, "-", "single_solution_metaheuristic_void"], [52, 0, 0, "-", "variable_neighborhood_search"]], "uo.algorithm.metaheuristic.metaheuristic": [[49, 1, 1, "", "Metaheuristic"], [49, 4, 1, "", "random"]], "uo.algorithm.metaheuristic.metaheuristic.Metaheuristic": [[49, 3, 1, "", "additional_statistics_control"], [49, 2, 1, "", "copy"], [49, 2, 1, "", "determine_fields_val"], [49, 2, 1, "", "elapsed_seconds"], [49, 3, 1, "", "finish_control"], [49, 2, 1, "", "main_loop"], [49, 2, 1, "", "main_loop_iteration"], [49, 2, 1, "", "optimize"], [49, 3, 1, "", "random_seed"], [49, 2, 1, "", "should_finish"], [49, 2, 1, "", "string_rep"], [49, 2, 1, "", "update_additional_statistics_if_required"]], "uo.algorithm.metaheuristic.metaheuristic_void": [[49, 1, 1, "", "MetaheuristicVoid"], [49, 4, 1, "", "random"]], "uo.algorithm.metaheuristic.metaheuristic_void.MetaheuristicVoid": [[49, 2, 1, "", "copy"], [49, 2, 1, "", "init"], [49, 2, 1, "", "main_loop_iteration"]], "uo.algorithm.metaheuristic.population_based_metaheuristic": [[49, 1, 1, "", "PopulationBasedMetaheuristic"], [49, 4, 1, "", "random"]], "uo.algorithm.metaheuristic.population_based_metaheuristic.PopulationBasedMetaheuristic": [[49, 2, 1, "", "copy"], [49, 3, 1, "", "current_population"], [49, 2, 1, "", "string_rep"]], "uo.algorithm.metaheuristic.population_based_metaheuristic_void": [[49, 1, 1, "", "PopulationBasedMetaheuristicVoid"], [49, 4, 1, "", "random"]], "uo.algorithm.metaheuristic.population_based_metaheuristic_void.PopulationBasedMetaheuristicVoid": [[49, 2, 1, "", "copy"], [49, 2, 1, "", "init"], [49, 2, 1, "", "main_loop_iteration"]], "uo.algorithm.metaheuristic.single_solution_metaheuristic": [[49, 1, 1, "", "SingleSolutionMetaheuristic"], [49, 4, 1, "", "random"]], "uo.algorithm.metaheuristic.single_solution_metaheuristic.SingleSolutionMetaheuristic": [[49, 2, 1, "", "copy"], [49, 3, 1, "", "current_solution"], [49, 2, 1, "", "string_rep"]], "uo.algorithm.metaheuristic.single_solution_metaheuristic_void": [[49, 1, 1, "", "SingleSolutionMetaheuristicVoid"], [49, 4, 1, "", "random"]], "uo.algorithm.metaheuristic.single_solution_metaheuristic_void.SingleSolutionMetaheuristicVoid": [[49, 2, 1, "", "copy"], [49, 2, 1, "", "init"], [49, 2, 1, "", "main_loop_iteration"]], "uo.algorithm.metaheuristic.variable_neighborhood_search": [[52, 0, 0, "-", "vns_optimizer"]], "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer": [[52, 1, 1, "", "VnsOptimizer"], [52, 1, 1, "", "VnsOptimizerConstructionParameters"], [52, 4, 1, "", "random"]], "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizer": [[52, 2, 1, "", "copy"], [52, 2, 1, "", "from_construction_tuple"], [52, 2, 1, "", "init"], [52, 3, 1, "", "k_max"], [52, 3, 1, "", "k_min"], [52, 2, 1, "", "main_loop_iteration"], [52, 2, 1, "", "string_rep"]], "uo.algorithm.metaheuristic.variable_neighborhood_search.vns_optimizer.VnsOptimizerConstructionParameters": [[52, 5, 1, "", "additional_statistics_control"], [52, 5, 1, "", "finish_control"], [52, 5, 1, "", "k_max"], [52, 5, 1, "", "k_min"], [52, 5, 1, "", "output_control"], [52, 5, 1, "", "problem"], [52, 5, 1, "", "random_seed"], [52, 5, 1, "", "solution_template"], [52, 5, 1, "", "vns_ls_support"], [52, 5, 1, "", "vns_shaking_support"]], "uo.algorithm.output_control": [[46, 1, 1, "", "OutputControl"]], "uo.algorithm.output_control.OutputControl": [[46, 2, 1, "", "copy"], [46, 3, 1, "", "fields"], [46, 3, 1, "", "fields_definitions"], [46, 3, 1, "", "fields_headings"], [46, 3, 1, "", "moments"], [46, 3, 1, "", "output_file"], [46, 2, 1, "", "string_rep"], [46, 3, 1, "", "write_after_algorithm"], [46, 3, 1, "", "write_after_evaluation"], [46, 3, 1, "", "write_after_iteration"], [46, 3, 1, "", "write_after_step_in_iteration"], [46, 3, 1, "", "write_before_algorithm"], [46, 3, 1, "", "write_before_evaluation"], [46, 3, 1, "", "write_before_iteration"], [46, 3, 1, "", "write_before_step_in_iteration"]], "uo.problem": [[53, 0, 0, "-", "problem"]], "uo.problem.problem": [[53, 1, 1, "", "Problem"]], "uo.problem.problem.Problem": [[53, 2, 1, "", "__copy__"], [53, 2, 1, "", "__repr__"], [53, 2, 1, "", "__str__"], [53, 2, 1, "id3", "copy"], [53, 3, 1, "id4", "is_minimization"], [53, 3, 1, "id5", "is_multi_objective"], [53, 3, 1, "id6", "name"], [53, 2, 1, "", "string_rep"]], "uo.solution": [[54, 0, 0, "-", "distance_calculation_cache_control_statistics"], [54, 0, 0, "-", "evaluation_cache_control_statistics"], [54, 0, 0, "-", "quality_of_solution"], [54, 0, 0, "-", "solution"]], "uo.solution.distance_calculation_cache_control_statistics": [[54, 1, 1, "", "DistanceCalculationCacheControlStatistics"]], "uo.solution.distance_calculation_cache_control_statistics.DistanceCalculationCacheControlStatistics": [[54, 3, 1, "", "cache"], [54, 3, 1, "", "cache_hit_count"], [54, 3, 1, "", "cache_request_count"], [54, 2, 1, "", "increment_cache_hit_count"], [54, 2, 1, "", "increment_cache_request_count"], [54, 3, 1, "", "max_cache_size"], [54, 2, 1, "", "string_rep"]], "uo.solution.evaluation_cache_control_statistics": [[54, 1, 1, "", "EvaluationCacheControlStatistics"]], "uo.solution.evaluation_cache_control_statistics.EvaluationCacheControlStatistics": [[54, 3, 1, "", "cache"], [54, 3, 1, "", "cache_hit_count"], [54, 3, 1, "", "cache_request_count"], [54, 2, 1, "", "increment_cache_hit_count"], [54, 2, 1, "", "increment_cache_request_count"], [54, 3, 1, "", "max_cache_size"], [54, 2, 1, "", "string_rep"]], "uo.solution.quality_of_solution": [[54, 1, 1, "", "QualityOfSolution"]], "uo.solution.quality_of_solution.QualityOfSolution": [[54, 3, 1, "", "fitness_value"], [54, 3, 1, "", "fitness_values"], [54, 3, 1, "", "is_feasible"], [54, 3, 1, "", "objective_value"], [54, 3, 1, "", "objective_values"]], "uo.solution.solution": [[54, 1, 1, "", "Solution"], [54, 4, 1, "", "random"]], "uo.solution.solution.Solution": [[54, 2, 1, "", "argument"], [54, 2, 1, "", "calculate_quality"], [54, 2, 1, "", "calculate_quality_directly"], [54, 2, 1, "", "copy"], [54, 2, 1, "", "copy_from"], [54, 2, 1, "", "evaluate"], [54, 3, 1, "", "evaluation_cache_cs"], [54, 3, 1, "", "fitness_value"], [54, 3, 1, "", "fitness_values"], [54, 2, 1, "", "init_from"], [54, 2, 1, "", "init_random"], [54, 2, 1, "", "is_better"], [54, 3, 1, "", "is_feasible"], [54, 2, 1, "", "native_representation"], [54, 3, 1, "", "objective_value"], [54, 3, 1, "", "objective_values"], [54, 2, 1, "", "obtain_feasible_representation"], [54, 3, 1, "", "quality"], [54, 3, 1, "", "random_seed"], [54, 3, 1, "", "representation"], [54, 2, 1, "", "representation_distance"], [54, 3, 1, "", "representation_distance_cache_cs"], [54, 2, 1, "", "representation_distance_directly"], [54, 2, 1, "", "string_rep"], [54, 2, 1, "", "string_representation"]], "uo.tests": [[58, 0, 0, "-", "unit"]], "uo.tests.unit": [[59, 0, 0, "-", "algorithm"], [65, 0, 0, "-", "problem"], [66, 0, 0, "-", "solution"], [58, 0, 0, "-", "test_dummy"], [67, 0, 0, "-", "utils"]], "uo.tests.unit.algorithm": [[60, 0, 0, "-", "exact"], [62, 0, 0, "-", "metaheuristic"], [59, 0, 0, "-", "test_algorithm"], [59, 0, 0, "-", "test_optimizer"], [59, 0, 0, "-", "test_output_control"]], "uo.tests.unit.algorithm.exact": [[61, 0, 0, "-", "total_enumeration"]], "uo.tests.unit.algorithm.exact.total_enumeration": [[61, 0, 0, "-", "test_te_optimizer"]], "uo.tests.unit.algorithm.exact.total_enumeration.test_te_optimizer": [[61, 1, 1, "", "TestFromConstructionTuple"], [61, 1, 1, "", "TestOptimize"], [61, 1, 1, "", "TestStringRep"], [61, 1, 1, "", "TestTeOptimizerMethodInit"], [61, 1, 1, "", "TestTeOptimizerProperties"]], "uo.tests.unit.algorithm.exact.total_enumeration.test_te_optimizer.TestFromConstructionTuple": [[61, 2, 1, "", "test_create_new_instance_with_given_parameters"], [61, 2, 1, "", "test_raise_TypeError_if_output_control_not_instance_of_OutputControl"], [61, 2, 1, "", "test_raise_TypeError_if_problem_not_instance_of_Problem"], [61, 2, 1, "", "test_return_created_instance"]], "uo.tests.unit.algorithm.exact.total_enumeration.test_te_optimizer.TestOptimize": [[61, 2, 1, "", "test_initializes_execution_started_property"], [61, 2, 1, "", "test_logs_overall_number_of_evaluations"], [61, 2, 1, "", "test_output_control_parameter_not_instance_of_OutputControl"], [61, 2, 1, "", "test_problem_parameter_not_instance_of_Problem"], [61, 2, 1, "", "test_problem_solution_te_support_parameter_not_instance_of_TeOperationsSupport"], [61, 2, 1, "", "test_solution_template_parameter_not_instance_of_Solution"], [61, 2, 1, "", "test_writes_output_headers_if_needed"]], "uo.tests.unit.algorithm.exact.total_enumeration.test_te_optimizer.TestStringRep": [[61, 2, 1, "", "test_returns_string_representation_with_current_solution"], [61, 2, 1, "", "test_returns_string_representation_with_default_parameters"], [61, 2, 1, "", "test_returns_string_representation_with_default_parameters_when_only_delimiter_is_specified"], [61, 2, 1, "", "test_uses_specified_parameters"]], "uo.tests.unit.algorithm.exact.total_enumeration.test_te_optimizer.TestTeOptimizerMethodInit": [[61, 2, 1, "", "setUp"], [61, 2, 1, "", "setUpClass"], [61, 2, 1, "", "tearDown"], [61, 2, 1, "", "tearDownClass"], [61, 2, 1, "", "test_init_method_should_call_support_method_reset_once"], [61, 2, 1, "", "test_init_method_should_evaluate_solution_template_once"], [61, 2, 1, "", "test_init_method_should_evaluate_solution_template_once_with_supplied_problem"]], "uo.tests.unit.algorithm.exact.total_enumeration.test_te_optimizer.TestTeOptimizerProperties": [[61, 2, 1, "", "setUp"], [61, 2, 1, "", "setUpClass"], [61, 2, 1, "", "tearDown"], [61, 2, 1, "", "tearDownClass"], [61, 2, 1, "", "test_fitness_value_should_be_equal_as_value_set_by_property_setter"], [61, 2, 1, "", "test_fitness_value_should_be_equal_as_value_set_by_property_setter_2"], [61, 2, 1, "", "test_is_feasible_should_be_equal_as_in_constructor"], [61, 2, 1, "", "test_is_feasible_should_be_equal_as_value_set_by_property_setter"], [61, 2, 1, "", "test_is_feasible_should_be_equal_as_value_set_by_property_setter_2"], [61, 2, 1, "", "test_objective_value_should_be_equal_as_value_set_by_property_setter"], [61, 2, 1, "", "test_representation_should_be_equal_as_value_set_by_property_setter"], [61, 2, 1, "", "test_representation_should_be_equal_as_value_set_by_property_setter_2"]], "uo.tests.unit.algorithm.metaheuristic": [[63, 0, 0, "-", "genetic_algorithm"], [62, 0, 0, "-", "test_additional_statistics_control"], [62, 0, 0, "-", "test_additional_statistics_control_2"], [62, 0, 0, "-", "test_finish_control"], [62, 0, 0, "-", "test_metaheuristic"], [62, 0, 0, "-", "test_single_solution_metaheuristic"], [64, 0, 0, "-", "variable_neighborhood_search"]], "uo.tests.unit.algorithm.metaheuristic.genetic_algorithm": [[63, 0, 0, "-", "test_ga_optimizer"], [63, 0, 0, "-", "test_ga_optimizer_properties"]], "uo.tests.unit.algorithm.metaheuristic.genetic_algorithm.test_ga_optimizer": [[63, 1, 1, "", "TestGaOptimizerGenerational"]], "uo.tests.unit.algorithm.metaheuristic.genetic_algorithm.test_ga_optimizer.TestGaOptimizerGenerational": [[63, 2, 1, "", "test_additional_statistics_control_type_error"], [63, 2, 1, "", "test_copy"], [63, 2, 1, "", "test_finish_control_type_error"], [63, 2, 1, "", "test_ga_crossover_support_parameter_type_error"], [63, 2, 1, "", "test_ga_optimizer_init"], [63, 2, 1, "", "test_ga_optimizer_initialized_with_none_random_seed"], [63, 2, 1, "", "test_ga_optimizer_initialized_with_none_solution_template_2"], [63, 2, 1, "", "test_ga_optimizer_initialized_with_valid_parameters"], [63, 2, 1, "", "test_ga_optimizer_initialized_without_ga_crossover_support"], [63, 2, 1, "", "test_population_size_parameter_type_error"], [63, 2, 1, "", "test_random_seed_type_error"], [63, 2, 1, "", "test_solution_template_parameter_type_error"]], "uo.tests.unit.algorithm.metaheuristic.genetic_algorithm.test_ga_optimizer_properties": [[63, 1, 1, "", "TestGaOptimizerGenerationalProperties"]], "uo.tests.unit.algorithm.metaheuristic.genetic_algorithm.test_ga_optimizer_properties.TestGaOptimizerGenerationalProperties": [[63, 2, 1, "", "setUp"], [63, 2, 1, "", "setUpClass"], [63, 2, 1, "", "tearDown"], [63, 2, 1, "", "tearDownClass"], [63, 2, 1, "", "test_create_with_invalid_selection_type_should_raise_value_exception_with_proper_message"], [63, 2, 1, "", "test_elite_count_should_be_equal_as_in_constructor"], [63, 2, 1, "", "test_evaluations_max_should_be_equal_as_in_constructor"], [63, 2, 1, "", "test_iterations_max_should_be_equal_as_in_constructor"], [63, 2, 1, "", "test_name_should_be_ga"], [63, 2, 1, "", "test_problem_dimension_should_be_equal_as_in_constructor"], [63, 2, 1, "", "test_problem_file_path_should_be_equal_as_in_constructor"], [63, 2, 1, "", "test_problem_is_minimization_should_be_equal_as_in_constructor"], [63, 2, 1, "", "test_problem_name_should_be_equal_as_in_constructor"], [63, 2, 1, "", "test_random_seed_should_be_equal_as_in_constructor"], [63, 2, 1, "", "test_seconds_max_should_be_equal_as_in_constructor"]], "uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control": [[62, 1, 1, "", "TestAddToAllSolutionCodesIfRequired"], [62, 1, 1, "", "TestAddToMoreLocalOptimaIfRequired"], [62, 1, 1, "", "TestAdditionalStatisticsControl"], [62, 1, 1, "", "TestMaxLocalOptima"], [62, 1, 1, "", "Test__DetermineKeepHelper__"]], "uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control.TestAddToAllSolutionCodesIfRequired": [[62, 2, 1, "", "test_all_solution_codes_empty2"], [62, 2, 1, "", "test_all_solution_codes_not_set"], [62, 2, 1, "", "test_keep_all_solution_codes_false"], [62, 2, 1, "", "test_keep_all_solution_codes_true"], [62, 2, 1, "", "test_representation_already_in_all_solution_codes"], [62, 2, 1, "", "test_representation_not_string"]], "uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control.TestAddToMoreLocalOptimaIfRequired": [[62, 2, 1, "", "test_add_to_more_local_optima_empty_structure"], [62, 2, 1, "", "test_add_to_more_local_optima_full_structure_new_solution_better"], [62, 2, 1, "", "test_add_to_more_local_optima_keep_more_local_optima_false"], [62, 2, 1, "", "test_add_to_more_local_optima_keep_more_local_optima_false2"], [62, 2, 1, "", "test_add_to_more_local_optima_not_full_structure"], [62, 2, 1, "", "test_add_to_more_local_optima_solution_to_add_rep_not_string"]], "uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control.TestAdditionalStatisticsControl": [[62, 2, 1, "", "test_add_to_all_solution_codes_if_required"], [62, 2, 1, "", "test_add_to_more_local_optima_existing_solution"], [62, 2, 1, "", "test_add_to_more_local_optima_new_solution"], [62, 2, 1, "", "test_invalid_keep_parameter_type"], [62, 2, 1, "", "test_invalid_keep_property_value"], [62, 2, 1, "", "test_invalid_max_local_optima_parameter_type"], [62, 2, 1, "", "test_valid_keep_property_update"], [62, 2, 1, "", "test_valid_parameters_initialization"]], "uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control.TestMaxLocalOptima": [[62, 2, 1, "", "test_max_local_optima_can_be_zero"], [62, 2, 1, "", "test_max_local_optima_can_not_be_negative"], [62, 2, 1, "", "test_raises_type_error_if_max_local_optima_not_integer"], [62, 2, 1, "", "test_returns_integer_value"], [62, 2, 1, "", "test_returns_max_local_optima_value2"], [62, 2, 1, "", "test_returns_maximum_number_of_local_optima"]], "uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control.Test__DetermineKeepHelper__": [[62, 2, 1, "", "test_determine_keep_helper_criteria_checked"], [62, 2, 1, "", "test_determine_keep_helper_flags_default"], [62, 2, 1, "", "test_determine_keep_helper_invalid_value"], [62, 2, 1, "", "test_determine_keep_helper_keep_not_string"], [62, 2, 1, "", "test_determine_keep_helper_max_local_optima_not_integer"], [62, 2, 1, "", "test_determine_keep_helper_parse_keep_parameter3"]], "uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control_2": [[62, 1, 1, "", "TestAddToAllSolutionCodesIfRequired"], [62, 1, 1, "", "TestAddToMoreLocalOptimaIfRequired"], [62, 1, 1, "", "TestAllSolutionCodes"], [62, 1, 1, "", "TestKeepAllSolutionCodes"], [62, 1, 1, "", "TestKeepMoreLocalOptima"], [62, 1, 1, "", "TestMaxLocalOptima"], [62, 1, 1, "", "TestMoreLocalOptima"], [62, 1, 1, "", "Test__Init_22"], [62, 1, 1, "", "Test__Str__P1"]], "uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control_2.TestAddToAllSolutionCodesIfRequired": [[62, 2, 1, "", "test_all_solution_codes_not_set"], [62, 2, 1, "", "test_keep_all_solution_codes_false"], [62, 2, 1, "", "test_keep_all_solution_codes_not_boolean"], [62, 2, 1, "", "test_keep_all_solution_codes_true"], [62, 2, 1, "", "test_representation_already_in_all_solution_codes"], [62, 2, 1, "", "test_representation_empty_string"], [62, 2, 1, "", "test_representation_non_empty_string"], [62, 2, 1, "", "test_representation_not_string"]], "uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control_2.TestAddToMoreLocalOptimaIfRequired": [[62, 2, 1, "", "test_add_new_solution_to_local_optima_structure"], [62, 2, 1, "", "test_raise_type_error_if_best_solution_rep_not_string"], [62, 2, 1, "", "test_raise_type_error_if_solution_to_add_fitness_not_int_float_list"], [62, 2, 1, "", "test_raise_type_error_if_solution_to_add_rep_not_string"], [62, 2, 1, "", "test_remove_random_local_optima_when_max_reached"], [62, 2, 1, "", "test_return_true_when_new_solution_added"]], "uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control_2.TestAllSolutionCodes": [[62, 2, 1, "", "test_set_all_solution_codes_with_non_set_value"], [62, 2, 1, "", "test_set_all_solution_codes_with_none_value"], [62, 2, 1, "", "test_set_duplicate_solution_codes"], [62, 2, 1, "", "test_set_empty_solution_codes"], [62, 2, 1, "", "test_set_non_empty_solution_codes"]], "uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control_2.TestKeepAllSolutionCodes": [[62, 2, 1, "", "test_raises_attribute_error_if_keep_all_solution_codes_property_is_not_boolean"], [62, 2, 1, "", "test_raises_type_error_if_representation_parameter_is_not_string"], [62, 2, 1, "", "test_returns_boolean_indicating_if_all_solution_codes_should_be_kept"], [62, 2, 1, "", "test_returns_true_if_all_solution_codes_should_be_kept"]], "uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control_2.TestKeepMoreLocalOptima": [[62, 2, 1, "", "test_raises_type_error_if_best_solution_rep_is_not_a_string"], [62, 2, 1, "", "test_raises_type_error_if_solution_to_add_fitness_is_not_a_float_or_float_list"], [62, 2, 1, "", "test_raises_type_error_if_solution_to_add_rep_is_not_a_string"], [62, 2, 1, "", "test_returns_false_if_keep_more_local_optima_is_false"], [62, 2, 1, "", "test_returns_false_if_solution_to_add_rep_is_already_in_more_local_optima"]], "uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control_2.TestMaxLocalOptima": [[62, 2, 1, "", "test_raises_type_error_when_max_local_optima_not_integer"], [62, 2, 1, "", "test_returns_integer_value"], [62, 2, 1, "", "test_returns_max_local_optima_value"]], "uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control_2.TestMoreLocalOptima": [[62, 2, 1, "", "test_max_local_optima_elements_removes_oldest_element"], [62, 2, 1, "", "test_none_input_updates_attribute"], [62, 2, 1, "", "test_valid_input_updates_attribute"]], "uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control_2.Test__Init_22": [[62, 2, 1, "", "test_default_values"], [62, 2, 1, "", "test_empty_string_keep"], [62, 2, 1, "", "test_invalid_keep"], [62, 2, 1, "", "test_keep_all_solution_code_and_more_local_optima"], [62, 2, 1, "", "test_keep_more_local_optima"], [62, 2, 1, "", "test_keep_not_string"], [62, 2, 1, "", "test_large_value_for_max_local_optima"], [62, 2, 1, "", "test_max_local_optima_less_than_zero"], [62, 2, 1, "", "test_max_local_optima_not_integer"], [62, 2, 1, "", "test_max_local_optima_zero"], [62, 2, 1, "", "test_maximum_max_local_optima_count"], [62, 2, 1, "", "test_minimum_max_local_optima_count"], [62, 2, 1, "", "test_multiple_valid_keep"], [62, 2, 1, "", "test_small_value_for_max_local_optima"], [62, 2, 1, "", "test_valid_and_invalid_values_for_keep"], [62, 2, 1, "", "test_valid_input_values"], [62, 2, 1, "", "test_valid_string_keep"], [62, 2, 1, "", "test_whitespace_keep"]], "uo.tests.unit.algorithm.metaheuristic.test_additional_statistics_control_2.Test__Str__P1": [[62, 2, 1, "", "test_contain_relevant_keep_property_when_keep_is_blank"], [62, 2, 1, "", "test_contains_keep_and_use_cache_properties"], [62, 2, 1, "", "test_returns_string_representation"]], "uo.tests.unit.algorithm.metaheuristic.test_finish_control": [[62, 1, 1, "", "TestFinishControl"]], "uo.tests.unit.algorithm.metaheuristic.test_finish_control.TestFinishControl": [[62, 2, 1, "", "test_change_criteria"], [62, 2, 1, "", "test_copy"], [62, 2, 1, "", "test_copy_instance"], [62, 2, 1, "", "test_duplicate_criteria"], [62, 2, 1, "", "test_invalid_criteria"], [62, 2, 1, "", "test_invalid_parameters"], [62, 2, 1, "", "test_is_finished_outside_criteria"], [62, 2, 1, "", "test_is_finished_within_criteria"], [62, 2, 1, "", "test_no_criteria_specified"], [62, 2, 1, "", "test_single_criteria"], [62, 2, 1, "", "test_string_representation"], [62, 2, 1, "", "test_valid_parameters"]], "uo.tests.unit.algorithm.metaheuristic.test_metaheuristic": [[62, 1, 1, "", "TestAdditionalStatisticsControl"], [62, 1, 1, "", "TestFinishControl"], [62, 1, 1, "", "TestMainLoopIteration"], [62, 1, 1, "", "TestMetaheuristic2"], [62, 1, 1, "", "TestMetaheuristicProperties"], [62, 1, 1, "", "TestRandomSeed"], [62, 1, 1, "", "TestStringRep"]], "uo.tests.unit.algorithm.metaheuristic.test_metaheuristic.TestAdditionalStatisticsControl": [[62, 2, 1, "", "test_returns_additional_statistics_control"], [62, 2, 1, "", "test_returns_instance_of_additional_statistics_control"], [62, 2, 1, "", "test_returns_same_instance_as_passed_in_constructor"], [62, 2, 1, "", "test_returns_unmodified_instance2"]], "uo.tests.unit.algorithm.metaheuristic.test_metaheuristic.TestFinishControl": [[62, 2, 1, "", "test_raises_type_error_if_finish_control_not_of_type_finish_control"], [62, 2, 1, "", "test_returns_finish_control_structure"], [62, 2, 1, "", "test_returns_identical_finish_control"], [62, 2, 1, "", "test_returns_same_instance_of_finish_control"]], "uo.tests.unit.algorithm.metaheuristic.test_metaheuristic.TestMainLoopIteration": [[62, 2, 1, "", "test_executes_one_iteration"], [62, 2, 1, "", "test_finish_control_indicates_algorithm_finished"]], "uo.tests.unit.algorithm.metaheuristic.test_metaheuristic.TestMetaheuristic2": [[62, 2, 1, "", "test_copy_method"], [62, 2, 1, "", "test_elapsed_seconds_method"], [62, 2, 1, "", "test_invalid_additional_statistics_control"], [62, 2, 1, "", "test_invalid_finish_control_parameter"], [62, 2, 1, "", "test_invalid_name_parameter"], [62, 2, 1, "", "test_invalid_output_control"], [62, 2, 1, "", "test_invalid_problem_parameter"], [62, 2, 1, "", "test_invalid_random_seed"], [62, 2, 1, "", "test_main_loop_finished"], [62, 2, 1, "", "test_main_loop_method"], [62, 2, 1, "", "test_optimize_method"], [62, 2, 1, "", "test_optimize_random_seed"], [62, 2, 1, "", "test_string_rep_method"]], "uo.tests.unit.algorithm.metaheuristic.test_metaheuristic.TestMetaheuristicProperties": [[62, 2, 1, "", "setUp"], [62, 2, 1, "", "setUpClass"], [62, 2, 1, "", "tearDown"], [62, 2, 1, "", "tearDownClass"], [62, 2, 1, "", "test_evaluations_max_should_be_equal_as_in_constructor"], [62, 2, 1, "", "test_iterations_max_should_be_equal_as_in_constructor"], [62, 2, 1, "", "test_name_should_be_equal_as_in_constructor"], [62, 2, 1, "", "test_problem_is_minimization_should_be_equal_as_in_constructor"], [62, 2, 1, "", "test_problem_name_should_be_equal_as_in_constructor"], [62, 2, 1, "", "test_random_seed_should_be_equal_as_in_constructor"], [62, 2, 1, "", "test_seconds_max_should_be_equal_as_in_constructor"]], "uo.tests.unit.algorithm.metaheuristic.test_metaheuristic.TestRandomSeed": [[62, 2, 1, "", "test_raises_no_errors_when_random_seed_is_zero"], [62, 2, 1, "", "test_raises_type_error_when_random_seed_not_integer_or_none"], [62, 2, 1, "", "test_returns_correct_random_seed_value"], [62, 2, 1, "", "test_returns_random_seed"]], "uo.tests.unit.algorithm.metaheuristic.test_metaheuristic.TestStringRep": [[62, 2, 1, "", "test_empty_delimiter"], [62, 2, 1, "", "test_returns_string_representation"], [62, 2, 1, "", "test_uses_formatting_parameters"]], "uo.tests.unit.algorithm.metaheuristic.test_single_solution_metaheuristic": [[62, 1, 1, "", "TestCurrentSolution"], [62, 1, 1, "", "TestSingleSolutionMetaheuristic"], [62, 1, 1, "", "Test__Str__2"]], "uo.tests.unit.algorithm.metaheuristic.test_single_solution_metaheuristic.TestCurrentSolution": [[62, 2, 1, "", "test_create_with_invalid_current_solution_raises_type_error"], [62, 2, 1, "", "test_create_with_invalid_current_solution_raises_type_error2"], [62, 2, 1, "", "test_get_current_solution_returns_value"], [62, 2, 1, "", "test_set_solution_template_to_not_Target_solution"]], "uo.tests.unit.algorithm.metaheuristic.test_single_solution_metaheuristic.TestSingleSolutionMetaheuristic": [[62, 2, 1, "", "test_copy"], [62, 2, 1, "", "test_different_solution_types"], [62, 2, 1, "", "test_formatted_representation"], [62, 2, 1, "", "test_invalid_parameters_initialization"], [62, 2, 1, "", "test_set_invalid_current_solution"], [62, 2, 1, "", "test_solution_template_not_solution"], [62, 2, 1, "", "test_string_representation"], [62, 2, 1, "", "test_valid_parameters_initialization"]], "uo.tests.unit.algorithm.metaheuristic.test_single_solution_metaheuristic.Test__Str__2": [[62, 2, 1, "", "test_include_current_solution_representation"], [62, 2, 1, "", "test_include_metaheuristic_representation"], [62, 2, 1, "", "test_raise_typeerror_if_solution_template_is_not_solution"], [62, 2, 1, "", "test_return_string_representation"]], "uo.tests.unit.algorithm.metaheuristic.variable_neighborhood_search": [[64, 0, 0, "-", "test_vns_optimizer"], [64, 0, 0, "-", "test_vns_optmizer_properties"]], "uo.tests.unit.algorithm.metaheuristic.variable_neighborhood_search.test_vns_optimizer": [[64, 1, 1, "", "TestVnsOptimizer"]], "uo.tests.unit.algorithm.metaheuristic.variable_neighborhood_search.test_vns_optimizer.TestVnsOptimizer": [[64, 2, 1, "", "test_additional_statistics_control_type_error"], [64, 2, 1, "", "test_copy"], [64, 2, 1, "", "test_finish_control_type_error"], [64, 2, 1, "", "test_k_min_parameter_type_error"], [64, 2, 1, "", "test_random_seed_type_error"], [64, 2, 1, "", "test_repr_method"], [64, 2, 1, "", "test_solution_template_parameter_type_error"], [64, 2, 1, "", "test_str"], [64, 2, 1, "", "test_string_rep"], [64, 2, 1, "", "test_vns_ls_support_parameter_type_error"], [64, 2, 1, "", "test_vns_optimizer_init"], [64, 2, 1, "", "test_vns_optimizer_initialized_with_none_random_seed"], [64, 2, 1, "", "test_vns_optimizer_initialized_with_none_solution_template_2"], [64, 2, 1, "", "test_vns_optimizer_initialized_with_valid_parameters"], [64, 2, 1, "", "test_vns_optimizer_initialized_without_vns_ls_support"], [64, 2, 1, "", "test_vns_optimizer_initialized_without_vns_shaking_support"], [64, 2, 1, "", "test_vns_shaking_support_parameter_type_error"]], "uo.tests.unit.algorithm.metaheuristic.variable_neighborhood_search.test_vns_optmizer_properties": [[64, 1, 1, "", "TestVnsOptimizerProperties"]], "uo.tests.unit.algorithm.metaheuristic.variable_neighborhood_search.test_vns_optmizer_properties.TestVnsOptimizerProperties": [[64, 2, 1, "", "setUp"], [64, 2, 1, "", "setUpClass"], [64, 2, 1, "", "tearDown"], [64, 2, 1, "", "tearDownClass"], [64, 2, 1, "", "test_create_with_invalid_problem_type_should_raise_value_exception_with_proper_message"], [64, 2, 1, "", "test_evaluations_max_should_be_equal_as_in_constructor"], [64, 2, 1, "", "test_iterations_max_should_be_equal_as_in_constructor"], [64, 2, 1, "", "test_k_max_should_be_equal_as_in_constructor"], [64, 2, 1, "", "test_k_min_should_be_equal_as_in_constructor"], [64, 2, 1, "", "test_name_should_be_vns"], [64, 2, 1, "", "test_problem_dimension_should_be_equal_as_in_constructor"], [64, 2, 1, "", "test_problem_file_path_should_be_equal_as_in_constructor"], [64, 2, 1, "", "test_problem_is_minimization_should_be_equal_as_in_constructor"], [64, 2, 1, "", "test_problem_name_should_be_equal_as_in_constructor"], [64, 2, 1, "", "test_random_seed_should_be_equal_as_in_constructor"], [64, 2, 1, "", "test_seconds_max_should_be_equal_as_in_constructor"]], "uo.tests.unit.algorithm.test_algorithm": [[59, 1, 1, "", "TestAlgorithm"], [59, 1, 1, "", "TestAlgorithmProperties"], [59, 1, 1, "", "TestEvaluation"]], "uo.tests.unit.algorithm.test_algorithm.TestAlgorithm": [[59, 2, 1, "", "test_algorithm_copy"], [59, 2, 1, "", "test_algorithm_initialization"], [59, 2, 1, "", "test_algorithm_properties"], [59, 2, 1, "", "test_algorithm_string_representation"], [59, 2, 1, "", "test_problem_not_defined"]], "uo.tests.unit.algorithm.test_algorithm.TestAlgorithmProperties": [[59, 2, 1, "", "setUp"], [59, 2, 1, "", "setUpClass"], [59, 2, 1, "", "tearDown"], [59, 2, 1, "", "tearDownClass"], [59, 2, 1, "", "test_name_should_be_as_it_is_in_constructor"], [59, 2, 1, "", "test_problem_dimension_should_be_same_that_it_is_in_constructor"], [59, 2, 1, "", "test_problem_file_path_should_be_same_that_it_is_in_constructor"], [59, 2, 1, "", "test_problem_is_minimization_should_be_same_that_it_is_in_constructor"], [59, 2, 1, "", "test_problem_name_should_be_same_that_it_is_in_constructor"]], "uo.tests.unit.algorithm.test_algorithm.TestEvaluation": [[59, 2, 1, "", "test_set_evaluation_float_value"], [59, 2, 1, "", "test_set_evaluation_none"], [59, 2, 1, "", "test_set_evaluation_positive_integer"], [59, 2, 1, "", "test_set_evaluation_zero"]], "uo.tests.unit.algorithm.test_optimizer": [[59, 1, 1, "", "Test__Optimizer__"]], "uo.tests.unit.algorithm.test_optimizer.Test__Optimizer__": [[59, 2, 1, "", "test_best_solution_set_to_none"], [59, 2, 1, "", "test_copy_method"], [59, 2, 1, "", "test_empty_name_parameter"], [59, 2, 1, "", "test_execution_variables_set_to_none"], [59, 2, 1, "", "test_name_parameter_not_string"], [59, 2, 1, "", "test_none_output_control_parameter"], [59, 2, 1, "", "test_none_problem_parameter"], [59, 2, 1, "", "test_other_instance_variables_none_or_default"], [59, 2, 1, "", "test_output_control_parameter_not_instance_of_OutputControl"], [59, 2, 1, "", "test_problem_parameter_not_instance_of_Problem"], [59, 2, 1, "", "test_string_rep_method"], [59, 2, 1, "", "test_valid_instance_variables9"], [59, 2, 1, "", "test_valid_parameters"], [59, 2, 1, "", "test_valid_parameters2"]], "uo.tests.unit.algorithm.test_output_control": [[59, 1, 1, "", "TestOutputControl"], [59, 1, 1, "", "TestOutputControlProperties"]], "uo.tests.unit.algorithm.test_output_control.TestOutputControl": [[59, 2, 1, "", "test_fields_type_error"], [59, 2, 1, "", "test_initialized_with_custom_parameters"], [59, 2, 1, "", "test_initialized_with_default_parameters"], [59, 2, 1, "", "test_invalid_moment_value_error"], [59, 2, 1, "", "test_moments_type_error"], [59, 2, 1, "", "test_update_fields_attribute"], [59, 2, 1, "", "test_update_output_file_attribute"]], "uo.tests.unit.algorithm.test_output_control.TestOutputControlProperties": [[59, 2, 1, "", "setUp"], [59, 2, 1, "", "setUpClass"], [59, 2, 1, "", "tearDown"], [59, 2, 1, "", "tearDownClass"], [59, 2, 1, "", "test_is_output_file_should_be_same_that_it_is_set"], [59, 2, 1, "", "test_output_file_should_be_as_it_is_in_constructor"]], "uo.tests.unit.problem": [[65, 0, 0, "-", "test_problem__copy__"], [65, 0, 0, "-", "test_problem_properties"]], "uo.tests.unit.problem.test_problem__copy__": [[65, 1, 1, "", "Test__Copy__"]], "uo.tests.unit.problem.test_problem__copy__.Test__Copy__": [[65, 2, 1, "", "test_new_instance_is_deep_copy"], [65, 2, 1, "", "test_new_instance_is_not_same_object"], [65, 2, 1, "", "test_raises_type_error_on_class"], [65, 2, 1, "", "test_raises_type_error_with_arguments"], [65, 2, 1, "", "test_returns_new_instance_with_same_properties"]], "uo.tests.unit.problem.test_problem_properties": [[65, 1, 1, "", "TestProblemProperties"]], "uo.tests.unit.problem.test_problem_properties.TestProblemProperties": [[65, 2, 1, "", "setUp"], [65, 2, 1, "", "setUpClass"], [65, 2, 1, "", "tearDown"], [65, 2, 1, "", "tearDownClass"], [65, 2, 1, "", "test_empty_name_problem_initialization"], [65, 2, 1, "", "test_invalid_name_problem_initialization"], [65, 2, 1, "", "test_is_minimization_should_be_equal_as_in_constructor"], [65, 2, 1, "", "test_problem_name_should_be_equal_as_in_constructor"]], "uo.tests.unit.solution": [[66, 0, 0, "-", "test_distance_calculation_cache_control_statistics"], [66, 0, 0, "-", "test_evaluation_cache_control_statistics_operations"], [66, 0, 0, "-", "test_evaluation_cache_control_statistics_properties"], [66, 0, 0, "-", "test_solution"], [66, 0, 0, "-", "test_solution1"], [66, 0, 0, "-", "test_solution2"], [66, 0, 0, "-", "test_solution_void_object_str"]], "uo.tests.unit.solution.test_distance_calculation_cache_control_statistics": [[66, 1, 1, "", "TestDistanceCalculationCacheControlStatistics"]], "uo.tests.unit.solution.test_distance_calculation_cache_control_statistics.TestDistanceCalculationCacheControlStatistics": [[66, 2, 1, "", "test_cache_property_returns_empty_dictionary_when_no_cache_set"], [66, 2, 1, "", "test_cache_property_returns_set_dictionary"], [66, 2, 1, "", "test_format_returns_formatted_string_representation_with_specified_format_specification2"], [66, 2, 1, "", "test_increment_cache_hit_count_increments_cache_hit_count_property"], [66, 2, 1, "", "test_increment_cache_request_count_increments_cache_request_count_property"], [66, 2, 1, "", "test_invalid_parameters_raises_type_error"], [66, 2, 1, "", "test_setting_invalid_cache_raises_type_error"], [66, 2, 1, "", "test_valid_parameters_set_properties_correctly"]], "uo.tests.unit.solution.test_evaluation_cache_control_statistics_operations": [[66, 1, 1, "", "TestEvaluationCacheControlStatisticsOperations"]], "uo.tests.unit.solution.test_evaluation_cache_control_statistics_operations.TestEvaluationCacheControlStatisticsOperations": [[66, 2, 1, "", "setUp"], [66, 2, 1, "", "setUpClass"], [66, 2, 1, "", "tearDown"], [66, 2, 1, "", "tearDownClass"], [66, 2, 1, "", "test_add_to_cache_should_work_1"], [66, 2, 1, "", "test_add_to_cache_should_work_1a"], [66, 2, 1, "", "test_add_to_cache_should_work_2"], [66, 2, 1, "", "test_add_to_cache_should_work_2a"], [66, 2, 1, "", "test_cache_hit_count_should_be_one_after_increment"], [66, 2, 1, "", "test_cache_request_count_should_be_one_after_increment"], [66, 2, 1, "", "test_clear_cache_should_work_0"], [66, 2, 1, "", "test_clear_cache_should_work_0a"]], "uo.tests.unit.solution.test_evaluation_cache_control_statistics_properties": [[66, 1, 1, "", "TestEvaluationCacheControlStatisticsProperties"]], "uo.tests.unit.solution.test_evaluation_cache_control_statistics_properties.TestEvaluationCacheControlStatisticsProperties": [[66, 2, 1, "", "setUp"], [66, 2, 1, "", "setUpClass"], [66, 2, 1, "", "tearDown"], [66, 2, 1, "", "tearDownClass"], [66, 2, 1, "", "test_cache_hit_count_should_be_zero_after_construction"], [66, 2, 1, "", "test_cache_request_count_should_be_zero_after_construction"]], "uo.tests.unit.solution.test_solution": [[66, 1, 1, "", "TestSolutionProperties"]], "uo.tests.unit.solution.test_solution.TestSolutionProperties": [[66, 2, 1, "", "setUp"], [66, 2, 1, "", "setUpClass"], [66, 2, 1, "", "tearDown"], [66, 2, 1, "", "tearDownClass"], [66, 2, 1, "", "test_distance_calculation_cache_cs__request_count_should_be_zero_after_constructor"], [66, 2, 1, "", "test_distance_calculation_cache_hit_count_should_be_zero_after_constructor"], [66, 2, 1, "", "test_evaluation_cache_cs__request_count_should_be_zero_after_constructor"], [66, 2, 1, "", "test_evaluation_cache_cs_hit_count_should_be_zero_after_constructor"], [66, 2, 1, "", "test_fitness_value_should_be_equal_as_in_constructor"], [66, 2, 1, "", "test_fitness_value_should_be_equal_as_value_set_by_property_setter"], [66, 2, 1, "", "test_fitness_value_should_be_equal_as_value_set_by_property_setter_2"], [66, 2, 1, "", "test_is_feasible_should_be_equal_as_in_constructor"], [66, 2, 1, "", "test_is_feasible_should_be_equal_as_value_set_by_property_setter"], [66, 2, 1, "", "test_is_feasible_should_be_equal_as_value_set_by_property_setter_2"], [66, 2, 1, "", "test_objective_value_should_be_equal_as_in_constructor"], [66, 2, 1, "", "test_objective_value_should_be_equal_as_value_set_by_property_setter"], [66, 2, 1, "", "test_representation_should_be_equal_as_value_set_by_property_setter"], [66, 2, 1, "", "test_representation_should_be_equal_as_value_set_by_property_setter_2"]], "uo.tests.unit.solution.test_solution1": [[66, 1, 1, "", "TestSolution"]], "uo.tests.unit.solution.test_solution1.TestSolution": [[66, 2, 1, "", "test_attribute_access_and_modification"], [66, 2, 1, "", "test_calculate_quality_with_caching"], [66, 2, 1, "", "test_deep_copy"], [66, 2, 1, "", "test_default_representation_value"], [66, 2, 1, "", "test_default_values_for_caches"], [66, 2, 1, "", "test_default_values_for_fitness_and_objective"], [66, 2, 1, "", "test_evaluate_with_problem"], [66, 2, 1, "", "test_format_to_string"], [66, 2, 1, "", "test_initialization_with_valid_representation_and_problem"], [66, 2, 1, "", "test_instantiation_with_valid_parameters"], [66, 2, 1, "", "test_method_calls_and_results"], [66, 2, 1, "", "test_raises_TypeError_if_problem_not_of_type_Problem"], [66, 2, 1, "", "test_raises_TypeError_if_representation_not_of_type_R_co"], [66, 2, 1, "", "test_random_seed_set_to_random_integer"], [66, 2, 1, "", "test_representation_distance_with_caching"], [66, 2, 1, "", "test_sets_representation_to_given_representation2"], [66, 2, 1, "", "test_string_conversion"], [66, 2, 1, "", "test_string_representation"], [66, 2, 1, "", "test_type_error_raised"]], "uo.tests.unit.solution.test_solution2": [[66, 1, 1, "", "TestSolution2"]], "uo.tests.unit.solution.test_solution2.TestSolution2": [[66, 2, 1, "", "test_copy_from_method"], [66, 2, 1, "", "test_copy_method"], [66, 2, 1, "", "test_create_instance_with_invalid_parameters"], [66, 2, 1, "", "test_set_and_get_is_feasible"], [66, 2, 1, "", "test_set_fitness_value_with_invalid_type"], [66, 2, 1, "", "test_set_fitness_values_with_invalid_type"], [66, 2, 1, "", "test_set_get_fitness_value_attribute"], [66, 2, 1, "", "test_set_get_fitness_values_attribute"], [66, 2, 1, "", "test_set_get_objective_value_attribute"], [66, 2, 1, "", "test_set_get_objective_values_attribute"], [66, 2, 1, "", "test_set_is_feasible_with_invalid_type"], [66, 2, 1, "", "test_set_objective_value_with_invalid_type"], [66, 2, 1, "", "test_set_objective_values_with_invalid_type"], [66, 2, 1, "", "test_string_rep"], [66, 2, 1, "", "test_string_representation"]], "uo.tests.unit.solution.test_solution_void_object_str": [[66, 1, 1, "", "TestSolutionVoidIntObject"]], "uo.tests.unit.solution.test_solution_void_object_str.TestSolutionVoidIntObject": [[66, 2, 1, "", "test_attribute_access_and_modification"], [66, 2, 1, "", "test_deep_copy"], [66, 2, 1, "", "test_default_representation_value"], [66, 2, 1, "", "test_default_values_for_caches"], [66, 2, 1, "", "test_default_values_for_fitness_and_objective"], [66, 2, 1, "", "test_evaluate_with_problem"], [66, 2, 1, "", "test_format_to_string"], [66, 2, 1, "", "test_initialization_with_valid_representation_and_problem"], [66, 2, 1, "", "test_instantiation_with_valid_parameters"], [66, 2, 1, "", "test_method_calls_and_results"], [66, 2, 1, "", "test_raises_TypeError_if_problem_not_of_type_Problem"], [66, 2, 1, "", "test_random_seed_set_to_random_integer"], [66, 2, 1, "", "test_sets_representation_to_given_representation2"], [66, 2, 1, "", "test_string_conversion"], [66, 2, 1, "", "test_string_representation"], [66, 2, 1, "", "test_type_error_raised"]], "uo.tests.unit.test_dummy": [[58, 1, 1, "", "TestDummy"]], "uo.tests.unit.test_dummy.TestDummy": [[58, 2, 1, "", "setUp"], [58, 2, 1, "", "setUpClass"], [58, 2, 1, "", "tearDown"], [58, 2, 1, "", "tearDownClass"], [58, 2, 1, "", "test_dummy_obj_dimension_should_be_42"], [58, 2, 1, "", "test_dummy_obj_dimension_should_be_dummy_val"], [58, 2, 1, "", "test_dummy_obj_name_should_be_some_problem"]], "uo.tests.unit.utils": [[67, 0, 0, "-", "test_complex_counter_bit_array_full"], [67, 0, 0, "-", "test_test_complex_counter_uniform_ascending"]], "uo.tests.unit.utils.test_complex_counter_bit_array_full": [[67, 1, 1, "", "TestComplexCounterBitArrayFull"], [67, 1, 1, "", "TestComplexCounterBitArrayFull2"]], "uo.tests.unit.utils.test_complex_counter_bit_array_full.TestComplexCounterBitArrayFull": [[67, 2, 1, "", "test_can_progress_complex_counter"], [67, 2, 1, "", "test_can_progress_x_2_complex_counter_with_two_counters"], [67, 2, 1, "", "test_can_progress_x_4_complex_counter_with_two_counters"], [67, 2, 1, "", "test_create_instance_with_given_number_of_counters"], [67, 2, 1, "", "test_create_instance_with_zero_counters"], [67, 2, 1, "", "test_get_current_state"], [67, 2, 1, "", "test_progress_complex_counter"], [67, 2, 1, "", "test_progress_complex_counter_with_one_counter"], [67, 2, 1, "", "test_raises_type_error_if_number_of_counters_not_integer"], [67, 2, 1, "", "test_reset_complex_counter"]], "uo.tests.unit.utils.test_complex_counter_bit_array_full.TestComplexCounterBitArrayFull2": [[67, 2, 1, "", "test_can_progress_complex_counter"], [67, 2, 1, "", "test_copy_complex_counter"], [67, 2, 1, "", "test_create_instance_with_counter_size_2"], [67, 2, 1, "", "test_create_instance_with_counter_size_3"], [67, 2, 1, "", "test_create_instance_with_given_number_of_counters"], [67, 2, 1, "", "test_create_instance_with_large_number_of_counters"], [67, 2, 1, "", "test_create_instance_with_single_counter"], [67, 2, 1, "", "test_get_current_state"], [67, 2, 1, "", "test_progress_complex_counter"], [67, 2, 1, "", "test_raises_type_error_if_number_of_counters_not_integer"], [67, 2, 1, "", "test_reset_complex_counter"], [67, 2, 1, "", "test_returns_false_when_progress_called_on_counter_with_max_value"], [67, 2, 1, "", "test_returns_false_when_reset_called_on_counter_with_no_counters"]], "uo.tests.unit.utils.test_test_complex_counter_uniform_ascending": [[67, 1, 1, "", "TestComplexCounterUniformAscending"]], "uo.tests.unit.utils.test_test_complex_counter_uniform_ascending.TestComplexCounterUniformAscending": [[67, 2, 1, "", "test_copy_complex_counter"], [67, 2, 1, "", "test_create_instance_with_negative_counter_size"], [67, 2, 1, "", "test_create_instance_with_negative_number_of_counters"], [67, 2, 1, "", "test_create_instance_with_one_number_of_counters"], [67, 2, 1, "", "test_create_instance_with_valid_parameters"], [67, 2, 1, "", "test_create_instance_with_valid_parameters_1"], [67, 2, 1, "", "test_create_instance_with_valid_parameters_2"], [67, 2, 1, "", "test_create_instance_with_valid_parameters_3"], [67, 2, 1, "", "test_create_instance_with_zero_counter_size"], [67, 2, 1, "", "test_create_instance_with_zero_number_of_counters"], [67, 2, 1, "", "test_get_current_state"], [67, 2, 1, "", "test_make_progress"], [67, 2, 1, "", "test_make_progressX2"], [67, 2, 1, "", "test_make_progressX3"], [67, 2, 1, "", "test_make_progressX4"], [67, 2, 1, "", "test_progress_when_max_state_reached"], [67, 2, 1, "", "test_reset_complex_counter"]], "uo.utils": [[68, 0, 0, "-", "files"], [68, 0, 0, "-", "logger"]], "uo.utils.files": [[68, 4, 1, "", "ensure_dir"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "terms": {"": [2, 17, 41, 43, 54, 56], "0": [0, 14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "00031": 7, "01": 0, "04": 0, "0548": 7, "06": 0, "07": 0, "1": [0, 1, 7, 21, 22, 48, 49, 52, 54, 56], "10": 7, "1007": 7, "1016": 7, "1097": 7, "11": 7, "1100": 7, "1797": 7, "1997": 7, "2": [0, 1, 7, 21, 22], "2003": 7, "2005": 7, "2010": 7, "2023": 0, "24": 7, "26": 0, "3": 1, "4": [0, 1], "4614": 7, "6939": 7, "6940": 7, "7": 7, "80": 1, "800": 7, "97": 7, "978": 7, "A": [7, 41], "At": 1, "For": [1, 7], "If": 7, "In": 7, "It": [1, 7, 53, 55], "One": [1, 8, 39, 49, 52], "Ones": [1, 8, 15, 21, 39, 41, 44], "That": 1, "The": [7, 14, 15, 17, 21, 43, 46, 48, 49, 52, 53, 54, 55, 56, 68], "There": 7, "_": 1, "__copy__": [13, 14, 15, 17, 45, 46, 53, 55], "__format__": [13, 14, 15, 17, 46, 53, 55], "__init__": [14, 15, 17, 46, 53, 55], "__load_from_file__": 15, "__load_from_files__": [14, 17], "__repr__": [13, 14, 15, 17, 45, 46, 53, 55], "__str__": [13, 14, 15, 17, 45, 46, 53, 55], "_exec": 1, "a_co": [54, 56], "about": 1, "abstract": [1, 46, 49, 53, 54, 55, 56], "ac": 1, "academ": 7, "access": 1, "accord": 7, "activ": 2, "ad": 0, "addit": [14, 15, 16, 17, 21, 22, 48, 49, 52], "additional_statistics_control": [46, 49, 52], "additionalstatisticscontrol": [49, 52], "adequ": 1, "after": [28, 30, 46, 58, 59, 61, 62, 63, 64, 65, 66], "after_algorithm": 46, "aim": 1, "ala": 1, "algorithm": [0, 1, 9, 15, 21, 45, 57, 58], "algorithm_genetic_algorithm": 1, "alia": [21, 22], "all": [1, 2, 7, 28, 30, 48, 52, 54, 56, 58, 59, 61, 62, 63, 64, 65, 66], "alreadi": 2, "also": 7, "an": [7, 43, 53, 55], "analysi": [2, 7], "anoth": 7, "apidoc": 2, "app": 44, "appli": 7, "applic": [1, 2, 7, 44], "approach": 1, "ar": [1, 7, 14, 15, 16, 17, 21, 22, 54, 56], "arg": [54, 56], "argument": [45, 54, 56], "arrai": 1, "artifici": 7, "autor": 7, "b": 1, "base": [1, 14, 15, 16, 17, 21, 22, 28, 30, 34, 35, 36, 38, 46, 48, 49, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67], "basic": [3, 5, 8], "batch": 1, "befor": [28, 30, 58, 59, 61, 62, 63, 64, 65, 66], "best": [7, 46], "best_solut": [45, 46], "better": [54, 56], "between": [14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "bg": 1, "binari": [1, 44], "biologi": 7, "bit": 1, "bitarrai": [1, 41, 42], "bitstr": 1, "book": 7, "bool": [46, 49, 53, 54, 55, 56], "both": [7, 44, 54, 56], "build": [1, 2], "builder": 2, "built": 7, "burk": 7, "burken2005": 7, "c": 1, "cach": [45, 54, 56], "cache_hit_count": [45, 54, 56], "cache_request_count": [45, 54, 56], "calcul": [49, 54, 56], "calculate_qu": [45, 54, 56], "calculate_quality_directli": [45, 54, 56], "call": 43, "cd": 2, "chang": [2, 7], "check": [2, 49, 54, 56], "choos": 7, "citeseerx": 7, "class": [1, 7, 14, 15, 16, 17, 21, 22, 28, 30, 34, 35, 36, 38, 40, 41, 42, 43, 44, 46, 48, 49, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67], "classmethod": [14, 15, 16, 17, 21, 22, 28, 30, 48, 52, 58, 59, 61, 62, 63, 64, 65, 66], "clean": 2, "close": 7, "cluster": 7, "code": [1, 2, 15, 21, 44, 54, 56], "com": 1, "comb": [1, 10, 12, 21, 25, 26, 31, 32], "combinator": 43, "combinatori": [1, 7, 12, 13], "comma": 46, "command": [1, 2, 15, 21, 44], "command_lin": [12, 13, 20], "comment": 1, "common": [53, 55], "compar": 7, "comparison": 1, "complex": 1, "complexcounterbitarrayful": 1, "complexcounteruniformascend": 1, "complexcounteruniformful": 1, "comput": 7, "consid": 7, "consider": 1, "constraint": 1, "construct": [1, 15], "construction_param": 15, "construction_tupl": [48, 52], "constructor": [14, 15, 16, 17, 21, 22, 48, 52], "consult": [54, 56], "contain": [1, 7, 8, 15, 17, 21, 52, 68], "content": [8, 9], "context": [54, 56], "contributor": 8, "control": [14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "copi": [2, 13, 14, 15, 16, 17, 20, 21, 22, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56], "copy_from": [45, 54, 56], "correspond": [7, 41], "count": [1, 8, 15, 16, 39], "counter": 1, "cover": [1, 8, 17, 39], "coverag": [1, 2], "cp": 2, "creat": [2, 14, 15, 16, 17, 21, 22, 46, 48, 52, 53, 55], "criteria": 49, "crossov": 1, "current": [2, 7, 15, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "current_popul": [46, 49], "current_solut": [46, 47, 48, 49], "cut": [1, 8, 14, 39, 43], "data": [1, 14, 15, 16, 17, 21, 22, 54, 56], "data_format": 15, "date": 0, "deactiv": 2, "deal": 68, "decis": 7, "deconstruct": [28, 30, 58, 59, 61, 62, 63, 64, 65, 66], "deep": [53, 55], "default": [14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "defin": [14, 15, 17, 41, 53, 55], "definit": [41, 43, 46, 49], "delimit": [14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "denot": 7, "depend": [2, 15, 21], "depth": 7, "deriv": 1, "descent": 7, "describ": [1, 46, 48, 49, 53, 54, 55, 56], "descript": 0, "design": [1, 7], "determin": [46, 49, 54, 56], "determine_fields_v": [45, 46, 49], "develop": [1, 2, 8, 44], "dict": [54, 56], "dim": [15, 16], "dimens": [13, 15, 16, 17], "direct": 7, "directli": [54, 56], "directori": [1, 2, 68], "disconnect": 41, "discov": 7, "distanc": [54, 56], "distance_calculation_cache_control_statist": [9, 45], "distance_calculation_cache_is_us": [54, 56], "distance_calculation_cache_max_s": [54, 56], "distancecalculationcachecontrolstatist": [45, 54, 56], "distant": 7, "divid": 1, "doc": [1, 2], "document": [0, 1, 2, 7, 8], "doi": 7, "domain": 8, "domain_high": [20, 21, 22], "domain_low": [20, 21, 22], "done": 0, "dure": [46, 48, 49, 54, 56], "e": [1, 41, 54, 56], "e_co": 54, "each": [1, 7, 17, 41], "ed": 7, "edmund": 7, "effort": 1, "either": 1, "ek": 7, "elaps": 49, "elapsed_second": [46, 49], "electro_magnetism_like_metaheurist": [46, 49], "element": 17, "encapsul": 52, "encourag": 1, "end": [14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "engin": 7, "enhanc": 44, "ensur": 68, "ensure_dir": [45, 68], "entir": 43, "entri": 1, "enumer": [1, 3, 4, 8, 48], "environ": 2, "equal": [1, 54, 56], "escap": 7, "etc": [1, 7], "evalu": [45, 46, 54, 56], "evaluation_best_found": [45, 46], "evaluation_cache_c": [45, 49, 54, 56], "evaluation_cache_control_statist": [9, 45], "evaluation_cache_is_us": [54, 56], "evaluation_cache_max_s": [54, 56], "evaluationcachecontrolstatist": [45, 54, 56], "everi": [1, 41], "exact": [1, 3, 8, 45, 46, 58, 59], "exampl": [1, 44], "example_vns_maxones_int_vns_exec": 44, "example_vns_maxones_int_vns_exec_build": 44, "execut": [1, 2, 15, 21, 44, 46, 48, 49, 54, 56], "exercis": [28, 30, 58, 59, 61, 62, 63, 64, 65, 66], "exist": 68, "experi": 1, "experiment": 1, "explain": 1, "explor": 7, "express": [20, 21, 22], "extract": 7, "f": 7, "fals": [49, 54, 56], "far": 46, "feasibl": [7, 54, 56], "field": [7, 14, 15, 16, 17, 21, 22, 45, 46, 48, 49, 52, 53, 54, 55, 56], "fields_def": [46, 49], "fields_definit": [45, 46], "fields_head": [45, 46], "fields_val": [46, 49], "file": [1, 2, 9, 14, 15, 16, 17, 21, 22, 45, 46], "file_path": 15, "filipovi\u0107": 1, "final": 7, "find": [7, 41, 43], "finish": 49, "finish_control": [46, 49, 52], "finishcontrol": [49, 52], "first": [54, 56], "firstli": 7, "fit": [54, 56], "fitness_valu": [45, 46, 49, 54, 56], "fixtur": [28, 30, 58, 59, 61, 62, 63, 64, 65, 66], "flag": [53, 55], "float": [21, 22, 49, 54, 56], "folder": 2, "follow": [1, 7], "form": 17, "format": [14, 15, 16, 17, 21, 22, 46, 53, 55], "found": [43, 46], "four": 1, "framework": 1, "from": [1, 2, 7, 14, 15, 17, 41, 43, 44, 54, 56], "from_construction_tupl": [13, 15, 47, 48, 49, 52], "from_dimens": [13, 15, 16], "from_graph_and_source_terminal_pair": 14, "from_input_fil": [13, 14, 15, 16, 17, 20, 21, 22], "from_universe_and_subset_fil": [13, 17], "fulli": 1, "function": [1, 8, 14, 15, 17, 21, 39, 41, 68], "function_one_variable_max_problem": [1, 12, 20, 32, 37], "function_one_variable_max_problem_binary_int_solut": [12, 20], "function_one_variable_max_problem_binary_int_solution_vns_support": [12, 20], "function_one_variable_max_problem_solv": [12, 20], "function_one_variable_min_problem": [12, 20], "function_one_variable_problem": [26, 29], "functiononevariablemaxproblem": 40, "functiononevariablemaxproblemmax": [20, 21, 22], "functiononevariablemaxproblemmaxel": [20, 21], "functiononevariableminproblem": [20, 22], "functiononevariableminproblemel": [20, 22], "g": [7, 41, 54, 56], "ga": 1, "gacrossoversupportonepointbitarrai": 1, "gamutationsupportonepointbitarrai": 1, "gaoptim": 1, "gaoptimizergener": 1, "gaoptimizersteadyst": 1, "gaselectionidl": 1, "gaselectionroulett": 1, "gendreau": 7, "gener": [1, 2, 8, 46, 54, 56], "genet": 1, "genetic_algorithm": [1, 46, 49, 59, 62], "genpot2010": 7, "geometri": 7, "get": 7, "getter": [14, 15, 16, 17, 46, 48, 49, 52, 53, 54, 55, 56], "github": 1, "given": [7, 41, 42], "glob": [1, 10, 12, 25, 26, 31, 32], "global": [1, 7], "glokoc2003": 7, "glover": 7, "goal": 43, "govern": 1, "graham": 7, "graph": [1, 14, 41], "graph_file_path": 14, "group": [14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "group_end": [14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "group_start": [14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "ha": 1, "handbook": 7, "hansen": 7, "hard": [41, 43], "have": 1, "head": 46, "help": 1, "here": 1, "heurist": 7, "highest": 7, "hint": 1, "hit": [54, 56], "hook": [28, 30, 58, 59, 61, 62, 63, 64, 65, 66], "hotmail": 1, "html": 2, "http": 1, "i": [0, 1, 2, 7, 8, 14, 15, 16, 17, 21, 40, 41, 42, 43, 46, 53, 54, 55, 56], "illustr": 44, "ilp": 15, "implement": [1, 8, 41, 42, 52], "import": 7, "improv": 7, "increas": 7, "increment": [54, 56], "increment_cache_hit_count": [45, 54, 56], "increment_cache_request_count": [45, 54, 56], "incumb": 7, "indent": [14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "indentation_symbol": [14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "index": 8, "indic": [53, 55], "inf": 49, "info": [53, 55], "inform": [3, 5], "inherit": [14, 15, 17], "init": [45, 46, 47, 48, 49, 52], "init_from": [45, 54, 56], "init_random": [45, 54, 56], "initi": [0, 1, 2, 7, 14, 15, 17, 43, 46, 48, 52, 53, 54, 55, 56], "input": [14, 15, 16, 17, 21, 22], "input_file_path": [14, 15, 16, 21, 22], "input_format": [15, 16, 21, 22], "instal": 2, "instanc": [14, 15, 16, 17, 21, 22, 41, 43, 46, 48, 49, 52, 53, 54, 55, 56], "int": [1, 14, 15, 16, 17, 21, 22, 42, 44, 46, 48, 49, 52, 53, 54, 55, 56], "integ": 1, "integr": 23, "intellig": 7, "interfac": [53, 55], "intern": [14, 15, 17, 46, 54, 56], "interv": [21, 48, 49, 52, 54, 56], "introductori": 7, "invok": 1, "involv": 7, "is_bett": [45, 54, 56], "is_feas": [45, 46, 49, 54, 56], "is_minim": [45, 53, 55], "is_multi_object": [45, 53, 55], "isbn": 7, "iter": [7, 45, 46, 49, 52], "iteration_best_found": [45, 46], "its": [1, 7, 41, 54, 56], "j": 7, "k": 7, "k_max": [49, 52], "k_min": [49, 52], "keep": 49, "kendal": 7, "kluwer": 7, "kochenberg": 7, "kwarg": [54, 56], "languag": [1, 8], "least": 1, "less": 1, "level": [14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "librari": [0, 1, 2, 44], "like": 7, "line": [1, 15, 21, 44], "linear": 1, "link": 1, "linopi": 1, "list": [8, 14, 17, 46, 49, 54, 56], "local": [1, 7], "locat": 7, "log": 68, "logger": [9, 45], "loop": [1, 49, 52], "lot": 7, "m": [2, 7], "made": 7, "mail": 1, "main": [1, 7, 13, 15, 20, 21, 43, 49, 52], "main_loop": [46, 49], "main_loop_iter": [46, 49, 52], "make": [1, 2], "manag": [1, 8], "mani": 7, "manipul": [53, 55], "markic01": 1, "marko": 1, "markoradosavljev": 1, "matf": 1, "max": [1, 8, 15, 21, 39, 41, 44], "max_cache_s": [45, 54, 56], "maximum": [54, 56], "maxon": 0, "maxoneproblem": [15, 16], "measur": [41, 43], "metaheurist": [0, 1, 3, 7, 8, 45, 46, 54, 56, 58, 59], "metaheuristic_void": 49, "metaheuristicvoid": [46, 49], "method": [1, 7, 8, 28, 30, 48, 58, 59, 61, 62, 63, 64, 65, 66], "methodnam": [28, 30, 34, 35, 36, 38, 58, 59, 61, 62, 63, 64, 65, 66, 67], "methodologi": 7, "mi20079": 1, "min": 16, "minim": [41, 43, 53, 55], "minima": 7, "minimum": [1, 7, 8, 14, 17, 39, 43], "minimum_multi_cut_problem": [32, 33], "minimummulticutproblem": [1, 14, 17], "minimummulticutproblembitarraysolut": 1, "minimummulticutproblemproblem": 41, "minimummulticutproblemproblembitarraysolut": 41, "mirror": 1, "mladenovi\u0107": 7, "mlahan1997": 7, "model": [13, 15], "modul": [8, 9], "moment": [45, 46], "move": 7, "multi": [1, 8, 14, 39, 43, 53, 55], "multi_object": [1, 8, 9, 10], "mutat": 1, "n": [7, 41], "name": [1, 17, 45, 46, 49, 53, 55], "nativ": [54, 56], "native_represent": [45, 54, 56], "necessarili": 7, "neighborhood": [1, 3, 5, 8, 52], "network": 7, "new": [7, 14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "next": 7, "ng": 1, "node": 14, "non": 1, "none": [15, 46, 48, 49, 52, 53, 54, 55, 56, 68], "nonerepresentation_distance_cache_c": 49, "note": [3, 5, 8], "novel": 1, "np": [41, 43], "number": [7, 15, 21, 22, 43, 46, 54, 56], "number_of_interv": [20, 21, 22], "nx": 14, "o": 2, "object": [1, 15, 46, 48, 52, 53, 54, 55, 56], "objective_valu": [45, 46, 49, 54, 56], "obtain": [1, 2, 7, 15, 21, 46, 54, 56], "obtain_feasible_represent": [45, 54, 56], "often": 43, "old": [46, 49], "one": [1, 7], "ones": [15, 16, 21], "ones_count_max_problem": [1, 12, 13, 21, 32, 33], "ones_count_max_problem_binary_bit_array_solut": [12, 13], "ones_count_max_problem_binary_bit_array_solution_te_support": [12, 13], "ones_count_max_problem_binary_bit_array_solution_vns_support": [12, 13], "ones_count_max_problem_binary_int_solut": [12, 13], "ones_count_max_problem_binary_int_solution_vns_support": [12, 13], "ones_count_max_problem_ilp_linopi": [12, 13], "ones_count_max_problem_solv": [12, 13], "ones_count_min_problem": [12, 13], "ones_count_problem": [26, 27], "onescountmaxproblem": [1, 13, 15, 42], "onescountmaxproblembinarybitarraysolut": 42, "onescountmaxproblembinaryintsolut": 42, "onescountmaxproblembitarraysolut": 1, "onescountmaxproblemintegerlinearprogrammingsolut": [13, 15], "onescountmaxproblemintegerlinearprogrammingsolv": [13, 15], "onescountmaxproblemintegerlinearprogrammingsolverconstructionparamet": [13, 15], "onescountmaxproblemintsolut": 1, "onescountminproblem": [13, 16], "onli": [1, 7, 44], "oper": 7, "opt": [1, 2, 8, 9], "optim": [1, 7, 13, 15, 21, 43, 46, 47, 48, 49, 52, 53, 54, 55, 56], "optima": 7, "optimum": 7, "option": [1, 14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "order": 15, "organ": 1, "origin": [54, 56], "other": [7, 54, 56], "otherwis": 7, "out": 7, "output": [14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "output_control": [9, 13, 15, 45, 47, 48, 49, 52], "output_fil": [45, 46], "outputcontrol": [15, 45, 46, 48, 49, 52], "overal": [1, 54, 56], "own": 1, "p": 7, "packag": [1, 8, 9], "packet": 2, "page": [1, 8], "pair": [14, 41], "param": 68, "paramet": [1, 14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "pars": [15, 21], "parse_argu": [13, 15, 20, 21], "path": [14, 15, 16, 17, 21, 22, 68], "path_to_dir": 68, "percept": 7, "perform": 7, "pertain": 7, "perturb": 7, "phase": 7, "phylogeni": 7, "pip": 2, "place": [1, 53, 55], "poetri": [1, 2, 8], "point": 1, "pool": 7, "pop_metaheuristic_void": 49, "popul": 49, "population_based_metaheurist": [1, 49], "population_based_metaheuristic_void": 49, "populationbasedmetaheurist": [1, 46, 49], "populationbasedmetaheuristicvoid": [46, 49], "possibl": 7, "potvin": 7, "predefin": 1, "previous": [1, 2, 54], "prior": 46, "problem": [0, 1, 7, 8, 9, 13, 14, 15, 16, 17, 21, 22, 44, 45, 46, 47, 48, 49, 52, 54, 55, 56, 57, 58], "problem_solution_te_support": [46, 47], "problem_solution_vns_support": [46, 49], "problem_void": [9, 45], "procedur": 7, "proceed": 7, "program": [1, 15, 21], "project": [1, 2, 8], "properli": 1, "properti": [14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "propos": 7, "provid": [2, 53, 55], "publish": 7, "put": 1, "py": 1, "python": [1, 2, 8, 44], "qualiti": [45, 54, 56], "quality_of_solut": [9, 45], "qualityofsolut": [45, 54, 56], "r": 1, "r_co": [15, 54, 56], "radosavljevi\u0107": 1, "random": [7, 20, 21, 45, 46, 47, 48, 49, 52, 54, 56], "random_se": [45, 46, 49, 52, 54, 56], "rapidli": 7, "rate": 1, "read": [14, 15, 17], "refer": [3, 5, 8], "rel": 7, "relat": 7, "reliabl": 7, "remov": 41, "repeatedli": 7, "report": 2, "repres": [14, 15, 17, 40, 41, 42, 43, 48, 49, 52, 53, 54, 55, 56], "represent": [1, 14, 15, 16, 17, 21, 22, 41, 42, 44, 45, 46, 48, 49, 52, 53, 54, 55, 56], "representation_1": [54, 56], "representation_2": [54, 56], "representation_dist": [45, 54, 56], "representation_distance_cache_c": [45, 54, 56], "representation_distance_directli": [45, 54, 56], "representation_str": [54, 56], "requir": [1, 49], "research": 7, "respect": [1, 7, 54, 56], "restructuredtext": 1, "return": [7, 14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "root": 1, "rout": 7, "run": [2, 28, 30, 58, 59, 61, 62, 63, 64, 65, 66], "runtest": [28, 30, 34, 35, 36, 38, 58, 59, 61, 62, 63, 64, 65, 66, 67], "s0305": 7, "s1": 43, "s2": 43, "same": [1, 2, 7, 14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "schedul": 7, "search": [1, 3, 5, 8, 52], "second": [49, 54, 56], "seed": [49, 54, 56], "select": 1, "separ": [1, 46], "set": [0, 1, 7, 8, 17, 28, 30, 39, 41, 54, 56, 58, 59, 61, 62, 63, 64, 65, 66], "set_covering_problem": [12, 13, 32, 33], "set_covering_problem_ilp_linopy_solut": [12, 13], "setcoveringproblem": [13, 17], "setcoveringproblemproblem": 43, "setup": [0, 27, 28, 29, 30, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "setupclass": [27, 28, 29, 30, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "sever": 7, "shake": [1, 7], "shell": 2, "should": [1, 2, 17, 46, 49, 68], "should_finish": [46, 49], "singl": [1, 49, 54, 56], "single_object": [1, 8, 9, 10, 23, 24, 25, 31], "single_solution_metaheurist": [1, 49], "single_solution_metaheuristic_void": 49, "singlesolutionmetaheurist": [1, 46, 49, 52], "singlesolutionmetaheuristicvoid": [46, 49], "size": [7, 54, 56], "sn": 43, "so": 46, "sol": 15, "solut": [1, 7, 8, 9, 15, 41, 42, 43, 45, 46, 48, 49, 52, 56, 57, 58], "solution_templ": [45, 46, 47, 48, 49, 52], "solution_void": [9, 45], "solution_void_object_str": [9, 45], "solutionvoidintobject": 15, "solv": [1, 7, 8, 14, 15, 17, 46, 54, 56], "solver": [1, 12, 13, 20], "some": 17, "sourc": [2, 14, 41, 44], "source_terminal_pair": 14, "source_terminal_pairs_file_path": 14, "spec": [15, 46, 53, 55], "specif": [1, 68], "specifi": [1, 14, 15, 16, 17, 21, 22, 53, 55], "sphinx": [1, 2, 8], "springer": 7, "ss_metaheuristic_void": 49, "start": [14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "static": [14, 15, 17], "statist": [49, 54, 56], "ste": [54, 56], "step": [7, 46], "step_nam": 46, "stop": 7, "str": [14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56, 68], "string": [14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "string_rep": [13, 14, 15, 16, 17, 20, 21, 22, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56], "string_represent": [13, 15, 45, 46, 54, 56], "strip": 44, "structur": [0, 1, 3, 5, 8, 14, 15, 17, 46, 49], "sub": 1, "submodul": [9, 12, 13, 20, 26, 27, 29, 32, 33, 37, 45, 47, 57, 60], "subpackag": [8, 9], "subset": [13, 17, 43], "subsets_file_path": 17, "subtyp": [48, 49], "successfulli": 2, "suffici": 1, "sum": 41, "support": [0, 7], "symbol": [14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "system": [1, 68], "systemat": 7, "t": 41, "take": [53, 55], "target": [14, 15, 16, 17, 21, 22, 46, 53, 54, 55, 56], "targetproblem": 17, "te": 1, "te_operations_support": [47, 48], "te_optim": [46, 47], "teardown": [27, 28, 29, 30, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "teardownclass": [27, 28, 29, 30, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "techniqu": [7, 15, 21], "telecommun": 7, "templat": 46, "teoperationssupport": 48, "teoptim": [47, 48], "teoptimizerconstructionparamet": [47, 48], "termin": [14, 41], "test": [1, 2, 8], "test__copy__": [37, 38, 58, 65], "test__determinekeephelper__": [59, 62], "test__frominputfile__": [37, 38], "test__init_22": [59, 62], "test__init__": [37, 38], "test__loadfromfile__": [33, 35, 37, 38], "test__obtainfeasiblehelper__": [37, 38], "test__optimizer__": [58, 59], "test__str__2": [59, 62], "test__str__p1": [59, 62], "test_add_new_solution_to_local_optima_structur": [59, 62], "test_add_to_all_solution_codes_if_requir": [59, 62], "test_add_to_cache_should_work_1": [58, 66], "test_add_to_cache_should_work_1a": [58, 66], "test_add_to_cache_should_work_2": [58, 66], "test_add_to_cache_should_work_2a": [58, 66], "test_add_to_more_local_optima_empty_structur": [59, 62], "test_add_to_more_local_optima_existing_solut": [59, 62], "test_add_to_more_local_optima_full_structure_new_solution_bett": [59, 62], "test_add_to_more_local_optima_keep_more_local_optima_fals": [59, 62], "test_add_to_more_local_optima_keep_more_local_optima_false2": [59, 62], "test_add_to_more_local_optima_new_solut": [59, 62], "test_add_to_more_local_optima_not_full_structur": [59, 62], "test_add_to_more_local_optima_solution_to_add_rep_not_str": [59, 62], "test_additional_statistics_control": [58, 59], "test_additional_statistics_control_2": [58, 59], "test_additional_statistics_control_type_error": [62, 63, 64], "test_algorithm": [57, 58], "test_algorithm_copi": [58, 59], "test_algorithm_initi": [58, 59], "test_algorithm_properti": [58, 59], "test_algorithm_string_represent": [58, 59], "test_all_bits_set_to_0": [33, 35], "test_all_bits_set_to_1": [33, 35], "test_all_on": [37, 38], "test_all_solution_codes_empty2": [59, 62], "test_all_solution_codes_not_set": [59, 62], "test_all_zero": [37, 38], "test_argument_method": [37, 38], "test_argument_method_returns_correct_string_represent": [33, 34, 35], "test_attribute_access_and_modif": [58, 66], "test_best_solution_after_optimization_should_be_all_optim": [27, 28, 29, 30], "test_best_solution_after_optimization_should_be_optim": [27, 28], "test_best_solution_after_optimization_should_be_optimal2": [27, 28], "test_best_solution_after_optimization_should_be_optimal3": [27, 28], "test_best_solution_after_optimization_should_be_optimal4": [27, 28], "test_best_solution_after_optimization_should_be_optimal_2": [27, 28], "test_best_solution_after_optimization_should_have_optimal_fit": [27, 28], "test_best_solution_after_optimization_should_have_optimal_fitness2": [27, 28], "test_best_solution_after_optimization_should_have_optimal_fitness_valu": [29, 30], "test_best_solution_after_optimization_should_have_optimal_objective_valu": [27, 28, 29, 30], "test_best_solution_after_optimization_should_have_optimal_objective_value2": [27, 28], "test_best_solution_set_to_non": [58, 59], "test_bitarray_length_0": [33, 35], "test_cache_hit_count_should_be_one_after_incr": [58, 66], "test_cache_hit_count_should_be_zero_after_construct": [58, 66], "test_cache_property_returns_empty_dictionary_when_no_cache_set": [58, 66], "test_cache_property_returns_set_dictionari": [58, 66], "test_cache_request_count_should_be_one_after_incr": [58, 66], "test_cache_request_count_should_be_zero_after_construct": [58, 66], "test_calculate_quality_directli": [33, 35], "test_calculate_quality_directly_method_with_all_bits_fals": [33, 35], "test_calculate_quality_directly_method_with_all_bits_tru": [33, 34, 35], "test_calculate_quality_directly_method_with_bitarray_and_problem": [33, 35], "test_calculate_quality_with_cach": [58, 66], "test_can_progress": [33, 35], "test_can_progress_complex_count": [58, 67], "test_can_progress_x_2_complex_counter_with_two_count": [58, 67], "test_can_progress_x_4_complex_counter_with_two_count": [58, 67], "test_change_criteria": [59, 62], "test_clear_cache_should_work_0": [58, 66], "test_clear_cache_should_work_0a": [58, 66], "test_completely_different_solut": [33, 34, 35], "test_complex_counter_bit_array_ful": [57, 58], "test_contain_relevant_keep_property_when_keep_is_blank": [59, 62], "test_contains_class_name_and_properti": [27, 28], "test_contains_keep_and_use_cache_properti": [59, 62], "test_copi": [59, 62, 63, 64], "test_copy_all_attribut": [37, 38], "test_copy_complex_count": [58, 67], "test_copy_creates_new_instance_with_same_properti": [33, 34, 35, 36], "test_copy_creates_new_instance_with_same_properties_but_not_same_object": [33, 35, 36], "test_copy_from_method": [58, 66], "test_copy_inst": [59, 62], "test_copy_method": [37, 38, 58, 59, 62, 66], "test_copy_method_returns_deep_copi": [33, 34, 35], "test_correct_convers": [37, 38], "test_correct_dimension_valu": [33, 35], "test_create_instance_with_counter_size_2": [58, 67], "test_create_instance_with_counter_size_3": [58, 67], "test_create_instance_with_dimens": [33, 35], "test_create_instance_with_given_number_of_count": [58, 67], "test_create_instance_with_invalid_paramet": [58, 66], "test_create_instance_with_large_number_of_count": [58, 67], "test_create_instance_with_negative_counter_s": [58, 67], "test_create_instance_with_negative_number_of_count": [58, 67], "test_create_instance_with_one_number_of_count": [58, 67], "test_create_instance_with_single_count": [58, 67], "test_create_instance_with_valid_paramet": [58, 67], "test_create_instance_with_valid_parameters_1": [58, 67], "test_create_instance_with_valid_parameters_2": [58, 67], "test_create_instance_with_valid_parameters_3": [58, 67], "test_create_instance_with_zero_count": [58, 67], "test_create_instance_with_zero_counter_s": [58, 67], "test_create_instance_with_zero_number_of_count": [58, 67], "test_create_new_instance_with_custom_paramet": [33, 35], "test_create_new_instance_with_default_paramet": [33, 35], "test_create_new_instance_with_given_paramet": [60, 61], "test_create_new_instance_with_large_dimens": [33, 35], "test_create_new_instance_with_negative_random_se": [33, 35], "test_create_new_instance_with_zero_dimens": [33, 35], "test_create_with_invalid_current_solution_raises_type_error": [59, 62], "test_create_with_invalid_current_solution_raises_type_error2": [59, 62], "test_create_with_invalid_problem_type_should_raise_value_exception_with_proper_messag": [62, 64], "test_create_with_invalid_selection_type_should_raise_value_exception_with_proper_messag": [62, 63], "test_deep_copi": [37, 38, 58, 66], "test_default_paramet": [27, 28], "test_default_parameters_no_except": [33, 35], "test_default_representation_valu": [58, 66], "test_default_valu": [33, 34, 35, 59, 62], "test_default_values_for_cach": [58, 66], "test_default_values_for_fitness_and_object": [58, 66], "test_delimiter_is_non": [33, 34, 35], "test_determine_keep_helper_criteria_check": [59, 62], "test_determine_keep_helper_flags_default": [59, 62], "test_determine_keep_helper_invalid_valu": [59, 62], "test_determine_keep_helper_keep_not_str": [59, 62], "test_determine_keep_helper_max_local_optima_not_integ": [59, 62], "test_determine_keep_helper_parse_keep_parameter3": [59, 62], "test_different_length": [33, 34, 35], "test_different_solut": [33, 35], "test_different_solution_typ": [59, 62], "test_different_typ": [27, 28, 33, 34, 35], "test_distance_binary_and_non_binary_represent": [37, 38], "test_distance_calculation_cache_control_statist": [57, 58], "test_distance_calculation_cache_cs__request_count_should_be_zero_after_constructor": [58, 66], "test_distance_calculation_cache_hit_count_should_be_zero_after_constructor": [58, 66], "test_distance_different_length": [37, 38], "test_distance_different_lengths_and_valu": [37, 38], "test_distance_different_represent": [37, 38], "test_distance_identical_represent": [37, 38], "test_domain_from_equal_to_domain_to": [37, 38], "test_domain_from_gett": [37, 38], "test_domain_to_gett": [37, 38], "test_dummi": 57, "test_dummy_obj_dimension_should_be_42": [57, 58], "test_dummy_obj_dimension_should_be_dummy_v": [57, 58], "test_dummy_obj_name_should_be_some_problem": [57, 58], "test_duplicate_criteria": [59, 62], "test_elapsed_seconds_method": [59, 62], "test_elite_count_should_be_equal_as_in_constructor": [62, 63], "test_empty_delimit": [59, 62], "test_empty_fil": [37, 38], "test_empty_input_fil": [37, 38], "test_empty_name_paramet": [58, 59], "test_empty_name_problem_initi": [58, 65], "test_empty_paramet": [37, 38], "test_empty_solut": [33, 34, 35], "test_empty_str": [37, 38], "test_empty_string_keep": [59, 62], "test_evaluate_with_problem": [58, 66], "test_evaluation_cache_control_statistics_oper": [57, 58], "test_evaluation_cache_control_statistics_properti": [57, 58], "test_evaluation_cache_cs__request_count_should_be_zero_after_constructor": [58, 66], "test_evaluation_cache_cs_hit_count_should_be_zero_after_constructor": [58, 66], "test_evaluations_max_should_be_equal_as_in_constructor": [59, 62, 63, 64], "test_executes_one_iter": [59, 62], "test_execution_variables_set_to_non": [58, 59], "test_expression_is_empty_str": [37, 38], "test_expression_is_non": [37, 38], "test_fields_type_error": [58, 59], "test_finish_control": [58, 59], "test_finish_control_indicates_algorithm_finish": [59, 62], "test_finish_control_type_error": [62, 63, 64], "test_fitness_value_should_be_equal_as_in_constructor": [58, 66], "test_fitness_value_should_be_equal_as_value_set_by_property_sett": [58, 60, 61, 66], "test_fitness_value_should_be_equal_as_value_set_by_property_setter_2": [58, 60, 61, 66], "test_float_domain": [37, 38], "test_format_returns_formatted_string_representation_with_specified_format_specification2": [58, 66], "test_format_to_str": [58, 66], "test_formatted_represent": [59, 62], "test_from_dimension_creates_new_instance_with_specified_dimens": [33, 35], "test_from_graph_and_st_pairs_creates_new_instance_with_specified_parameter": [33, 34], "test_funcion_one_variable_problem": [32, 37], "test_function_one_variable_problem_binary_int_solut": [32, 37], "test_function_one_variable_problem_binary_int_solution_vns_support": [32, 37], "test_ga_crossover_support_parameter_type_error": [62, 63], "test_ga_optim": [59, 62], "test_ga_optimizer_init": [62, 63], "test_ga_optimizer_initialized_with_none_random_se": [62, 63], "test_ga_optimizer_initialized_with_none_solution_template_2": [62, 63], "test_ga_optimizer_initialized_with_valid_paramet": [62, 63], "test_ga_optimizer_initialized_without_ga_crossover_support": [62, 63], "test_ga_optimizer_properti": [59, 62], "test_get_current_solution_returns_valu": [59, 62], "test_get_current_st": [58, 67], "test_group_start_is_non": [33, 34, 35], "test_handle_comments_in_input_fil": [37, 38], "test_identical_solut": [33, 34, 35], "test_include_current_solution_represent": [59, 62], "test_include_metaheuristic_represent": [59, 62], "test_includes_native_represent": [33, 35], "test_includes_string_represent": [33, 34, 35, 37, 38], "test_includes_super_class_represent": [33, 34, 35], "test_includes_superclass_represent": [33, 35], "test_increment_cache_hit_count_increments_cache_hit_count_properti": [58, 66], "test_increment_cache_request_count_increments_cache_request_count_properti": [58, 66], "test_indentation_is_non": [33, 34, 35], "test_init_from_method_with_bitarray_and_problem": [33, 34, 35], "test_init_method_should_call_support_method_reset_onc": [60, 61], "test_init_method_should_evaluate_solution_template_onc": [60, 61], "test_init_method_should_evaluate_solution_template_once_with_supplied_problem": [60, 61], "test_init_random_method_with_problem": [33, 34, 35], "test_initialization_with_valid_representation_and_problem": [58, 66], "test_initialize_instance_with_default_paramet": [33, 34, 35], "test_initialize_solution_from_represent": [33, 35], "test_initialize_solution_randomli": [33, 35], "test_initialize_solution_randomly_with_none_dimens": [33, 35], "test_initialized_with_custom_paramet": [58, 59], "test_initialized_with_default_paramet": [58, 59], "test_initializes_execution_started_properti": [60, 61], "test_initializes_solution_with_correct_dimens": [33, 35], "test_initializes_solution_with_dimension_0": [33, 35], "test_initializes_solution_with_negative_dimens": [33, 35], "test_instantiation_from_input_fil": [33, 36], "test_instantiation_from_input_file_with_missing_dimension_value_raises_value_error": [33, 35], "test_instantiation_from_input_file_with_specified_format": [33, 35], "test_instantiation_from_input_file_with_unsupported_format_raises_value_error": [33, 35], "test_instantiation_with_negative_dimension_raises_value_error": [33, 35], "test_instantiation_with_non_integer_dimension_raises_type_error": [33, 35], "test_instantiation_with_valid_paramet": [58, 66], "test_instantiation_with_zero_dimension_raises_value_error": [33, 35], "test_instantiation_without_dimension_paramet": [33, 35], "test_instantiation_without_st_paramet": [33, 34], "test_integer_domain": [37, 38], "test_invalid_additional_statistics_control": [59, 62], "test_invalid_characters_represent": [33, 34, 35], "test_invalid_criteria": [59, 62], "test_invalid_data_format": [37, 38], "test_invalid_domain_high_paramet": [37, 38], "test_invalid_domain_low_paramet": [37, 38], "test_invalid_expression_paramet": [37, 38], "test_invalid_file_path": [37, 38], "test_invalid_finish_control_paramet": [59, 62], "test_invalid_input_file_path": [37, 38], "test_invalid_input_format": [37, 38], "test_invalid_instance_type_error": [27, 28], "test_invalid_keep": [59, 62], "test_invalid_keep_parameter_typ": [59, 62], "test_invalid_keep_property_valu": [59, 62], "test_invalid_max_local_optima_parameter_typ": [59, 62], "test_invalid_moment_value_error": [58, 59], "test_invalid_name_paramet": [59, 62], "test_invalid_name_problem_initi": [58, 65], "test_invalid_output_control": [27, 28, 59, 62], "test_invalid_output_control_typ": [33, 35], "test_invalid_paramet": [59, 62], "test_invalid_parameters_initi": [59, 62], "test_invalid_parameters_raises_type_error": [58, 66], "test_invalid_problem": [27, 28], "test_invalid_problem_paramet": [59, 62], "test_invalid_problem_typ": [33, 35], "test_invalid_random_se": [59, 62], "test_is_feasible_should_be_equal_as_in_constructor": [58, 60, 61, 66], "test_is_feasible_should_be_equal_as_value_set_by_property_sett": [58, 60, 61, 66], "test_is_feasible_should_be_equal_as_value_set_by_property_setter_2": [58, 60, 61, 66], "test_is_finished_outside_criteria": [59, 62], "test_is_finished_within_criteria": [59, 62], "test_is_minimization_should_be_equal_as_in_constructor": [58, 65], "test_is_output_file_should_be_same_that_it_is_set": [58, 59], "test_iterations_max_should_be_equal_as_in_constructor": [59, 62, 63, 64], "test_k_max_should_be_equal_as_in_constructor": [62, 64], "test_k_min_parameter_type_error": [62, 64], "test_k_min_should_be_equal_as_in_constructor": [62, 64], "test_keep_all_solution_code_and_more_local_optima": [59, 62], "test_keep_all_solution_codes_fals": [59, 62], "test_keep_all_solution_codes_not_boolean": [59, 62], "test_keep_all_solution_codes_tru": [59, 62], "test_keep_more_local_optima": [59, 62], "test_keep_not_str": [59, 62], "test_large_value_for_max_local_optima": [59, 62], "test_length_1_represent": [33, 34, 35], "test_load_from_valid_txt_fil": [37, 38], "test_local_search_best_improvement_returns_new_solution_with_better_fitness_valu": [37, 38], "test_local_search_best_improvement_returns_same_solution_when_k_is_less_than_1_or_greater_than_representation_length": [37, 38], "test_local_search_best_improvement_returns_solution_with_higher_fitness_value11": [33, 35], "test_local_search_best_improvement_returns_solution_with_higher_fitness_value6": [33, 35], "test_local_search_best_improvement_returns_solution_with_lower_fitness_value11": [33, 34], "test_local_search_best_improvement_returns_solution_with_lower_fitness_value6": [33, 34], "test_local_search_first_improvement_returns_new_solution_with_better_fitness_valu": [37, 38], "test_local_search_first_improvement_returns_same_solution_when_k_is_less_than_1_or_greater_than_representation_length": [37, 38], "test_local_search_first_improvement_returns_solution_with_higher_fitness_value10": [33, 35], "test_local_search_first_improvement_returns_solution_with_higher_fitness_value4": [33, 35], "test_logs_overall_number_of_evalu": [60, 61], "test_main_loop_finish": [59, 62], "test_main_loop_method": [59, 62], "test_make_progress": [58, 67], "test_make_progressx2": [58, 67], "test_make_progressx3": [58, 67], "test_make_progressx4": [58, 67], "test_max_function_one_variable_problem_vns_binary_int_solution_lsfi": [26, 29], "test_max_local_optima_can_be_zero": [59, 62], "test_max_local_optima_can_not_be_neg": [59, 62], "test_max_local_optima_elements_removes_oldest_el": [59, 62], "test_max_local_optima_less_than_zero": [59, 62], "test_max_local_optima_not_integ": [59, 62], "test_max_local_optima_zero": [59, 62], "test_maximum_max_local_optima_count": [59, 62], "test_maximum_valid_representation_and_problem": [37, 38], "test_maximum_valu": [37, 38], "test_metaheurist": [58, 59], "test_method_calls_and_result": [58, 66], "test_minimum_max_local_optima_count": [59, 62], "test_minimum_multi_cut_problem": [32, 33], "test_minimum_multi_cut_problem_binary_bit_array_solut": [32, 33], "test_minimum_multi_cut_problem_binary_bit_array_solution_ga_support": [32, 33], "test_minimum_multi_cut_problem_binary_bit_array_solution_vns_support": [32, 33], "test_minimum_valid_representation_and_problem": [37, 38], "test_minimum_valu": [37, 38], "test_model_instance_and_variables_ad": [27, 28], "test_model_solved_and_best_solution_set": [27, 28], "test_moments_type_error": [58, 59], "test_multiple_valid_keep": [59, 62], "test_mutation_returns_non": [33, 34], "test_name_parameter_not_str": [58, 59], "test_name_should_be_as_it_is_in_constructor": [58, 59], "test_name_should_be_equal_as_in_constructor": [59, 62], "test_name_should_be_ga": [62, 63], "test_name_should_be_vn": [62, 64], "test_native_representation_method_with_string_represent": [33, 34, 35], "test_native_representation_non_binary_charact": [37, 38], "test_new_instance_is_deep_copi": [58, 65], "test_new_instance_is_not_same_object": [58, 65], "test_new_instance_with_dimension_sets_dimension_properti": [33, 35], "test_new_instance_with_graph_and_st_pairs_sets_both_properti": [33, 34], "test_new_instance_with_universe_and_subsets_set_both_properti": [33, 36], "test_no_criteria_specifi": [59, 62], "test_no_string_represent": [37, 38], "test_non_binary_charact": [33, 35, 37, 38], "test_non_bitarray_represent": [33, 35], "test_non_integer_number_of_interv": [37, 38], "test_non_string_represent": [33, 34, 35], "test_none_input_updates_attribut": [59, 62], "test_none_output_control_paramet": [58, 59], "test_none_problem_paramet": [58, 59], "test_none_represent": [33, 35], "test_not_modify_original_object": [37, 38], "test_number_of_intervals_equal_to_zero": [37, 38], "test_number_of_intervals_gett": [37, 38], "test_objective_function_set": [27, 28], "test_objective_value_should_be_equal_as_in_constructor": [58, 66], "test_objective_value_should_be_equal_as_value_set_by_property_sett": [58, 60, 61, 66], "test_obtain_feasible_representation_greater_than_number_of_interv": [37, 38], "test_obtain_feasible_representation_less_than_zero": [37, 38], "test_obtain_int_represent": [33, 35], "test_obtain_native_representation_from_string_represent": [33, 35], "test_one_bit_differ": [33, 35], "test_one_different_bit": [33, 34, 35], "test_ones_count_max_problem_ga_bit_array_solut": [26, 27], "test_ones_count_max_problem_ilp_linopi": [26, 27], "test_ones_count_max_problem_te_bit_array_solut": [26, 27], "test_ones_count_max_problem_vns_bit_array_solution_lsbi": [26, 27], "test_ones_count_max_problem_vns_bit_array_solution_lsfi": [26, 27], "test_ones_count_max_problem_vns_int_solution_lsbi": [26, 27], "test_ones_count_max_problem_vns_int_solution_lsfi": [26, 27], "test_ones_count_problem": [32, 33], "test_ones_count_problem_binary_bit_array_solut": [32, 33], "test_ones_count_problem_binary_bit_array_solution_te_support": [32, 33], "test_ones_count_problem_binary_bit_array_solution_vns_support": [32, 33], "test_ones_count_problem_binary_int_solut": [32, 33], "test_ones_count_problem_ilp_linopi": [32, 33], "test_optim": [57, 58], "test_optimize_method": [59, 62], "test_optimize_random_se": [59, 62], "test_optional_paramet": [33, 34, 35], "test_other_instance_variables_none_or_default": [58, 59], "test_output_control": [57, 58], "test_output_control_parameter_not_instance_of_outputcontrol": [58, 59, 60, 61], "test_output_file_should_be_as_it_is_in_constructor": [58, 59], "test_overwrite_representation_with_random_integ": [37, 38], "test_population_size_parameter_type_error": [62, 63], "test_problem__copy__": [57, 58], "test_problem_dimension_should_be_equal_as_in_constructor": [62, 63, 64], "test_problem_dimension_should_be_same_that_it_is_in_constructor": [58, 59], "test_problem_file_path_should_be_equal_as_in_constructor": [62, 63, 64], "test_problem_file_path_should_be_same_that_it_is_in_constructor": [58, 59], "test_problem_is_minimization_should_be_equal_as_in_constructor": [59, 62, 63, 64], "test_problem_is_minimization_should_be_same_that_it_is_in_constructor": [58, 59], "test_problem_name_should_be_equal_as_in_constructor": [58, 59, 62, 63, 64, 65], "test_problem_name_should_be_same_that_it_is_in_constructor": [58, 59], "test_problem_not_defin": [58, 59], "test_problem_parameter_not_instance_of_problem": [58, 59, 60, 61], "test_problem_properti": [57, 58], "test_problem_solution_te_support_parameter_not_instance_of_teoperationssupport": [60, 61], "test_progress_complex_count": [58, 67], "test_progress_complex_counter_with_one_count": [58, 67], "test_progress_internal_counter_and_st": [33, 35], "test_progress_when_max_state_reach": [58, 67], "test_properly_formatted_with_indentation_and_grouping_symbol": [27, 28], "test_properly_indented_and_format": [37, 38], "test_properly_indents_and_groups_string_represent": [37, 38], "test_raise_type_error_if_best_solution_rep_not_str": [59, 62], "test_raise_type_error_if_solution_to_add_fitness_not_int_float_list": [59, 62], "test_raise_type_error_if_solution_to_add_rep_not_str": [59, 62], "test_raise_typeerror_if_output_control_not_instance_of_outputcontrol": [60, 61], "test_raise_typeerror_if_problem_not_instance_of_problem": [60, 61], "test_raise_typeerror_if_solution_template_is_not_solut": [59, 62], "test_raise_value_error_if_data_format_not_txt": [33, 35], "test_raise_value_error_if_loading_from_file_produces_invalid_dimens": [33, 35], "test_raises_attribute_error_if_keep_all_solution_codes_property_is_not_boolean": [59, 62], "test_raises_no_errors_when_random_seed_is_zero": [59, 62], "test_raises_type_error_for_invalid_represent": [33, 34, 35], "test_raises_type_error_if_best_solution_rep_is_not_a_str": [59, 62], "test_raises_type_error_if_dimension_not_integ": [33, 35], "test_raises_type_error_if_finish_control_not_of_type_finish_control": [59, 62], "test_raises_type_error_if_max_local_optima_not_integ": [59, 62], "test_raises_type_error_if_number_of_counters_not_integ": [58, 67], "test_raises_type_error_if_representation_parameter_is_not_str": [59, 62], "test_raises_type_error_if_solution_to_add_fitness_is_not_a_float_or_float_list": [59, 62], "test_raises_type_error_if_solution_to_add_rep_is_not_a_str": [59, 62], "test_raises_type_error_on_class": [58, 65], "test_raises_type_error_when_max_local_optima_not_integ": [59, 62], "test_raises_type_error_when_random_seed_not_integer_or_non": [59, 62], "test_raises_type_error_with_argu": [58, 65], "test_raises_typeerror_if_problem_not_of_type_problem": [58, 66], "test_raises_typeerror_if_representation_not_of_type_r_co": [58, 66], "test_raises_value_error_if_dimension_less_than_or_equal_to_zero": [33, 35], "test_raises_value_error_when_domain_low_is_not_a_numb": [37, 38], "test_raises_value_error_when_expression_is_non": [37, 38], "test_random_bit_str": [33, 35], "test_random_seed_set_to_random_integ": [58, 66], "test_random_seed_should_be_equal_as_in_constructor": [59, 62, 63, 64], "test_random_seed_type_error": [62, 63, 64], "test_read_dimension_from_txt_fil": [33, 35], "test_remove_random_local_optima_when_max_reach": [59, 62], "test_repr_method": [62, 64], "test_repr_represent": [37, 38], "test_representation_already_in_all_solution_cod": [59, 62], "test_representation_distance_directly_method_with_string_represent": [33, 34, 35], "test_representation_distance_directly_raises_value_error": [33, 34, 35], "test_representation_distance_with_cach": [58, 66], "test_representation_empty_str": [59, 62], "test_representation_equal_to_number_of_interv": [37, 38], "test_representation_neg": [37, 38], "test_representation_non_empty_str": [59, 62], "test_representation_not_str": [59, 62], "test_representation_should_be_equal_as_value_set_by_property_sett": [58, 60, 61, 66], "test_representation_should_be_equal_as_value_set_by_property_setter_2": [58, 60, 61, 66], "test_representation_within_rang": [37, 38], "test_reset_complex_count": [58, 67], "test_reset_internal_counter_and_st": [33, 35], "test_return_created_inst": [60, 61], "test_return_deep_copi": [37, 38], "test_return_dimension_as_integ": [33, 35], "test_return_new_inst": [37, 38], "test_return_new_object_empti": [37, 38], "test_return_new_object_no_immutable_attribut": [37, 38], "test_return_new_object_no_mutable_attribut": [37, 38], "test_return_string_represent": [59, 62], "test_return_true_when_new_solution_ad": [59, 62], "test_returned_best_solution_is_equal_to_optimizer_best_solut": [27, 28], "test_returns_additional_statistics_control": [59, 62], "test_returns_binary_string_represent": [33, 34, 35], "test_returns_boolean_indicating_if_all_solution_codes_should_be_kept": [59, 62], "test_returns_correct_random_seed_valu": [59, 62], "test_returns_empty_string_for_empty_represent": [33, 34, 35], "test_returns_empty_string_if_delimiter_is_non": [37, 38], "test_returns_empty_string_if_indentation_is_neg": [37, 38], "test_returns_empty_string_if_indentation_symbol_is_non": [37, 38], "test_returns_expression_str": [37, 38], "test_returns_false_if_keep_more_local_optima_is_fals": [59, 62], "test_returns_false_if_solution_to_add_rep_is_already_in_more_local_optima": [59, 62], "test_returns_false_when_progress_called_on_counter_with_max_valu": [58, 67], "test_returns_false_when_reset_called_on_counter_with_no_count": [58, 67], "test_returns_finish_control_structur": [59, 62], "test_returns_identical_finish_control": [59, 62], "test_returns_instance_of_additional_statistics_control": [59, 62], "test_returns_integer_valu": [59, 62], "test_returns_max_local_optima_valu": [59, 62], "test_returns_max_local_optima_value2": [59, 62], "test_returns_maximum_number_of_local_optima": [59, 62], "test_returns_new_instance_with_same_properti": [58, 65], "test_returns_non_empty_str": [37, 38], "test_returns_random_se": [59, 62], "test_returns_same_instance_as_passed_in_constructor": [59, 62], "test_returns_same_instance_of_finish_control": [59, 62], "test_returns_string_represent": [27, 28, 33, 34, 35, 37, 38, 59, 62], "test_returns_string_representation_with_current_solut": [60, 61], "test_returns_string_representation_with_default_paramet": [60, 61], "test_returns_string_representation_with_default_parameters_when_only_delimiter_is_specifi": [60, 61], "test_returns_string_representation_with_leading_zeros_for_all_false_bit": [33, 34, 35], "test_returns_string_representation_with_specified_paramet": [37, 38], "test_returns_string_with_valid_charact": [37, 38], "test_returns_true_if_all_solution_codes_should_be_kept": [59, 62], "test_returns_unmodified_instance2": [59, 62], "test_same_attribute_valu": [37, 38], "test_same_binary_represent": [33, 34, 35], "test_same_types_different_class": [27, 28], "test_seconds_max_should_be_equal_as_in_constructor": [59, 62, 63, 64], "test_set_all_solution_codes_with_non_set_valu": [59, 62], "test_set_all_solution_codes_with_none_valu": [59, 62], "test_set_and_get_is_feas": [58, 66], "test_set_covering_problem": [32, 33], "test_set_duplicate_solution_cod": [59, 62], "test_set_empty_solution_cod": [59, 62], "test_set_evaluation_float_valu": [58, 59], "test_set_evaluation_non": [58, 59], "test_set_evaluation_positive_integ": [58, 59], "test_set_evaluation_zero": [58, 59], "test_set_fitness_value_with_invalid_typ": [58, 66], "test_set_fitness_values_with_invalid_typ": [58, 66], "test_set_get_fitness_value_attribut": [58, 66], "test_set_get_fitness_values_attribut": [58, 66], "test_set_get_objective_value_attribut": [58, 66], "test_set_get_objective_values_attribut": [58, 66], "test_set_invalid_current_solut": [59, 62], "test_set_is_feasible_with_invalid_typ": [58, 66], "test_set_non_empty_solution_cod": [59, 62], "test_set_objective_value_with_invalid_typ": [58, 66], "test_set_objective_values_with_invalid_typ": [58, 66], "test_set_representation_to_random_integ": [37, 38], "test_set_solution_template_to_not_target_solut": [59, 62], "test_sets_elements_to_true_or_false_with_probability_50_perc": [33, 35], "test_sets_internal_represent": [33, 34, 35], "test_sets_representation_to_given_representation2": [58, 66], "test_setting_invalid_cache_raises_type_error": [58, 66], "test_shaking_modifies_solution_representation_when_number_of_ones_is_less_than_problem_dimension8": [33, 34, 35], "test_shaking_returns_false_when_k_is_less_than_or_equal_to_0": [37, 38], "test_shaking_returns_true_when_k_is_greater_than_0_and_solution_is_valid": [37, 38], "test_shaking_returns_true_when_randomization_is_success": [33, 34, 35], "test_single_criteria": [59, 62], "test_single_solution_metaheurist": [58, 59], "test_skip_com": [37, 38], "test_small_value_for_max_local_optima": [59, 62], "test_solut": [57, 58], "test_solution1": [57, 58], "test_solution2": [57, 58], "test_solution_template_not_solut": [59, 62], "test_solution_template_parameter_not_instance_of_solut": [60, 61], "test_solution_template_parameter_type_error": [62, 63, 64], "test_solution_void_object_str": [57, 58], "test_str": [62, 64], "test_str_represent": [37, 38], "test_string_convers": [58, 66], "test_string_rep": [58, 62, 64, 66], "test_string_rep_class_nam": [37, 38], "test_string_rep_delimit": [37, 38], "test_string_rep_empty_argu": [37, 38], "test_string_rep_indent": [37, 38], "test_string_rep_indentation_symbol": [37, 38], "test_string_rep_method": [58, 59, 62], "test_string_represent": [58, 59, 62, 66], "test_string_representation_contains_binary_digit": [33, 35], "test_string_representation_includes_dimension_properti": [33, 35], "test_string_representation_includes_st_pair": [33, 34], "test_string_representation_includes_universe_and_subset_properti": [33, 36], "test_string_representation_is_double_zero": [33, 35], "test_string_representation_is_on": [33, 35], "test_string_representation_is_zero": [33, 35], "test_string_representation_not_empti": [33, 35], "test_subclass_inst": [37, 38], "test_te_optim": [59, 60], "test_test_complex_counter_uniform_ascend": [57, 58], "test_type_error_rais": [58, 66], "test_update_fields_attribut": [58, 59], "test_update_output_file_attribut": [58, 59], "test_uses_formatting_paramet": [59, 62], "test_uses_specified_paramet": [60, 61], "test_valid_and_invalid_values_for_keep": [59, 62], "test_valid_arguments_initi": [37, 38], "test_valid_binary_string_represent": [33, 34, 35], "test_valid_expression_domain_low_domain_high": [37, 38], "test_valid_expression_domain_low_equal_domain_high": [37, 38], "test_valid_input_paramet": [37, 38], "test_valid_input_updates_attribut": [59, 62], "test_valid_input_valu": [59, 62], "test_valid_instance_cr": [37, 38], "test_valid_instance_no_error": [27, 28], "test_valid_instance_variables9": [58, 59], "test_valid_keep_property_upd": [59, 62], "test_valid_paramet": [27, 28, 58, 59, 62], "test_valid_parameters2": [58, 59], "test_valid_parameters_initi": [59, 62], "test_valid_parameters_no_except": [33, 35], "test_valid_parameters_set_properties_correctli": [58, 66], "test_valid_representation_and_problem": [37, 38], "test_valid_representation_and_problem_is_feas": [37, 38], "test_valid_representation_and_problem_objective_valu": [37, 38], "test_valid_string_keep": [59, 62], "test_valid_txt_fil": [37, 38], "test_vns_ls_support_parameter_type_error": [62, 64], "test_vns_optim": [59, 62], "test_vns_optimizer_init": [62, 64], "test_vns_optimizer_initialized_with_none_random_se": [62, 64], "test_vns_optimizer_initialized_with_none_solution_template_2": [62, 64], "test_vns_optimizer_initialized_with_valid_paramet": [62, 64], "test_vns_optimizer_initialized_without_vns_ls_support": [62, 64], "test_vns_optimizer_initialized_without_vns_shaking_support": [62, 64], "test_vns_optmizer_properti": [59, 62], "test_vns_shaking_support_parameter_type_error": [62, 64], "test_whitespace_keep": [59, 62], "test_writes_output_headers_if_need": [60, 61], "testadditionalstatisticscontrol": [59, 62], "testaddtoallsolutioncodesifrequir": [59, 62], "testaddtomorelocaloptimaifrequir": [59, 62], "testalgorithm": [58, 59], "testalgorithmproperti": [58, 59], "testallsolutioncod": [59, 62], "testargu": [33, 34, 35], "testcalculatequalitydirectli": [33, 35, 37, 38], "testcas": [28, 30, 34, 35, 36, 38, 58, 59, 61, 62, 63, 64, 65, 66, 67], "testcomplexcounterbitarrayful": [58, 67], "testcomplexcounterbitarrayfull2": [58, 67], "testcomplexcounteruniformascend": [58, 67], "testcurrentsolut": [59, 62], "testdistancecalculationcachecontrolstatist": [58, 66], "testdummi": [57, 58], "testevalu": [58, 59], "testevaluationcachecontrolstatisticsoper": [58, 66], "testevaluationcachecontrolstatisticsproperti": [58, 66], "testexpress": [37, 38], "testfinishcontrol": [59, 62], "testfromconstructiontupl": [60, 61], "testfromdimens": [33, 35], "testfunctiononevariablemaxproblem": [37, 38], "testfunctiononevariablemaxproblemintsolut": [37, 38], "testfunctiononevariablemaxproblemintsolutionvnssupport": [37, 38], "testgaoptimizergener": [62, 63], "testgaoptimizergenerationalproperti": [62, 63], "testinitfrom": [33, 34, 35], "testinitrandom": [33, 35, 37, 38], "testkeepallsolutioncod": [59, 62], "testkeepmorelocaloptima": [59, 62], "testmainloopiter": [59, 62], "testmaxfunctiononevariablemaxproblemintsolutionlsfi": [29, 30], "testmaxlocaloptima": [59, 62], "testmetaheuristic2": [59, 62], "testmetaheuristicproperti": [59, 62], "testminimummulticutproblem": [33, 34], "testminimummulticutproblembitarraysolut": [33, 34], "testminimummulticutproblembitarraysolutiongasupport": [33, 34], "testminimummulticutproblembitarraysolutionvnssupport": [33, 34], "testmorelocaloptima": [59, 62], "testnativerepresent": [33, 34, 35, 37, 38], "testonescountmaxproblem": [33, 35], "testonescountmaxproblembitarraysolut": [33, 35], "testonescountmaxproblembitarraysolutionvnssupport": [33, 35], "testonescountmaxproblemgabitarraysolut": [27, 28], "testonescountmaxproblemilplinopi": [27, 28], "testonescountmaxproblemintegerlinearprogrammingsolverconstructionparamet": [33, 35], "testonescountmaxproblemintsolut": [33, 35], "testonescountmaxproblemtebitarraysolut": [27, 28], "testonescountmaxproblemvnsbitarraysolutionlsbi": [27, 28], "testonescountmaxproblemvnsintsolutionlsbi": [27, 28], "testonescountmaxproblemvnsintsolutionlsfi": [27, 28], "testoptim": [27, 28, 60, 61], "testoutputcontrol": [58, 59], "testoutputcontrolproperti": [58, 59], "testproblemproperti": [58, 65], "testrandomse": [59, 62], "testrepresentationdistancedirectli": [33, 34, 35, 37, 38], "testsetcoveringproblem": [33, 36], "testsinglesolutionmetaheurist": [59, 62], "testsolut": [58, 66], "testsolution2": [58, 66], "testsolutionproperti": [58, 66], "testsolutionvoidintobject": [58, 66], "teststringrep": [27, 28, 33, 34, 35, 37, 38, 59, 60, 61, 62], "testteoperationssupportbitarrai": [33, 35], "testteoptimizermethodinit": [60, 61], "testteoptimizerproperti": [60, 61], "testvnsoptim": [62, 64], "testvnsoptimizerproperti": [62, 64], "textiowrapp": 46, "than": [1, 54, 56], "them": 7, "theori": 7, "thi": [1, 14, 15, 17, 21, 46, 48, 49, 54, 56], "those": 1, "through": [1, 7], "time": 49, "tool": [1, 8], "total": [1, 3, 4, 8, 48], "total_enumer": [46, 47, 59, 60], "totalenumer": 48, "totalenumerationconstructorparamet": 48, "toward": 1, "traveling_salesperson_problem": [12, 13], "true": [54, 56], "tupl": [14, 17, 21, 22, 48, 52, 54, 56], "tutori": 7, "two": [7, 54, 56], "type": [1, 14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "typic": 7, "u": [17, 43], "under": 1, "understand": 7, "unit": [1, 2, 8, 23, 57], "unittest": [1, 2, 8], "univers": [13, 17, 43], "universe_file_path": 17, "unlimit": [54, 56], "uo": [1, 2, 8, 9, 44], "up": [28, 30, 58, 59, 61, 62, 63, 64, 65, 66], "updat": [7, 49], "update_additional_statistics_if_requir": [46, 49], "upon": [7, 46, 49], "us": [1, 2, 7, 8, 14, 15, 17, 21, 44, 48, 49, 54, 56], "user": 1, "usual": 7, "util": [8, 9, 45, 57, 58], "v": 41, "vallei": 7, "valu": [1, 7, 14, 15, 16, 17, 21, 22, 46, 48, 49, 52, 53, 54, 55, 56], "variabl": [1, 3, 5, 8, 15, 39, 52], "variable_neighborhood_search": [46, 49, 59, 62], "variant": 7, "variou": [7, 8, 15, 21], "vehicl": 7, "versa": 1, "version": [0, 2], "vice": 1, "virtual": 2, "visual": 1, "vladimir": 1, "vladimirfilipov": 1, "vladofilipov": 1, "vn": [0, 1, 7, 44, 48, 52], "vns_ls_support": [49, 52], "vns_optim": [46, 49], "vns_shaking_support": [49, 52], "vnslocalsearchsupport": 52, "vnsoptim": [7, 49, 52], "vnsoptimizerconstructionparamet": [49, 52], "vnsshakingsupport": 52, "vnsshakingsupportstandardbitarrai": 1, "vnsshakingsupportstandardint": 1, "void": 49, "w": 41, "wa": 7, "web": 1, "weight": 41, "when": [14, 15, 16, 17, 21, 22, 46], "where": [1, 17, 46], "whether": [53, 55], "which": [7, 15, 21, 46, 54, 56], "while": 1, "whose": 68, "within": [1, 2, 7, 44, 49, 52], "wors": [54, 56], "write": 46, "write_after_algorithm": [45, 46], "write_after_evalu": [45, 46], "write_after_iter": [45, 46], "write_after_step_in_iter": [45, 46], "write_before_algorithm": [45, 46], "write_before_evalu": [45, 46], "write_before_iter": [45, 46], "write_before_step_in_iter": [45, 46], "written": 46, "x": [7, 21, 48, 49, 52, 54, 56], "y": 7}, "titles": ["Changelog", "How to Contribute", "How-to Guides", "Implemented algorithms", "Implemented exact algorithms", "Implemented metaheuristic algorithms", "Total Enumeration", "Variable Neighborhood Search", "Universal optimizer - Optimization algorithms library", "Library", "opt package", "opt.multi_objective package", "opt.single_objective package", "opt.single_objective.comb package", "opt.single_objective.comb.minimum_multi_cut_problem package", "opt.single_objective.comb.ones_count_max_problem package", "opt.single_objective.comb.ones_count_min_problem package", "opt.single_objective.comb.set_covering_problem package", "opt.single_objective.combinatorial.traveling_salesperson_problem package", "opt.single_objective.constraint package", "opt.single_objective.glob package", "opt.single_objective.glob.function_one_variable_max_problem package", "opt.single_objective.glob.function_one_variable_min_problem package", "opt.tests package", "opt.tests.integration package", "opt.tests.integration.opt package", "opt.tests.integration.opt.single_objective package", "opt.tests.integration.opt.single_objective.comb package", "opt.tests.integration.opt.single_objective.comb.ones_count_problem package", "opt.tests.integration.opt.single_objective.glob package", "opt.tests.integration.opt.single_objective.glob.function_one_variable_problem package", "opt.tests.unit package", "opt.tests.unit.single_objective package", "opt.tests.unit.single_objective.comb package", "opt.tests.unit.single_objective.comb.minimum_multi_cut_problem package", "opt.tests.unit.single_objective.comb.ones_count_max_problem package", "opt.tests.unit.single_objective.comb.set_covering_problem package", "opt.tests.unit.single_objective.glob package", "opt.tests.unit.single_objective.glob.function_one_variable_max_problem package", "Problems to be solved", "Function One Variable Max Problem", "Minimum Multi Cut Problem", "Ones Count Max Problem", "Set Covering Problem", "Tutorials", "uo package", "uo.algorithm package", "uo.algorithm.exact package", "uo.algorithm.exact.total_enumeration package", "uo.algorithm.metaheuristic package", "uo.algorithm.metaheuristic.electro_magnetism_like_metaheuristic package", "uo.algorithm.metaheuristic.genetic_algorithm package", "uo.algorithm.metaheuristic.variable_neighborhood_search package", "uo.problem package", "uo.solution package", "uo.target_problem package", "uo.target_solution package", "uo.tests package", "uo.tests.unit package", "uo.tests.unit.algorithm package", "uo.tests.unit.algorithm.exact package", "uo.tests.unit.algorithm.exact.total_enumeration package", "uo.tests.unit.algorithm.metaheuristic package", "uo.tests.unit.algorithm.metaheuristic.genetic_algorithm package", "uo.tests.unit.algorithm.metaheuristic.variable_neighborhood_search package", "uo.tests.unit.problem package", "uo.tests.unit.solution package", "uo.tests.unit.utils package", "uo.utils package"], "titleterms": {"In": 8, "One": 40, "Ones": 42, "To": 8, "algorithm": [3, 4, 5, 7, 8, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64], "basic": 7, "changelog": [0, 8], "code": 8, "comb": [13, 14, 15, 16, 17, 27, 28, 33, 34, 35, 36], "combinatori": 18, "command_lin": [15, 21], "constraint": 19, "content": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "contribut": [1, 8], "contributor": 1, "count": 42, "cover": 43, "cut": 41, "depth": 8, "distance_calculation_cache_control_statist": 54, "domain": 1, "electro_magnetism_like_metaheurist": 50, "enumer": 6, "evaluation_cache_control_statist": [54, 56], "exact": [4, 47, 48, 60, 61], "file": 68, "function": 40, "function_one_variable_max_problem": [21, 38], "function_one_variable_max_problem_binary_int_solut": 21, "function_one_variable_max_problem_binary_int_solution_vns_support": 21, "function_one_variable_max_problem_solv": 21, "function_one_variable_min_problem": 22, "function_one_variable_problem": 30, "genetic_algorithm": [51, 63], "glob": [20, 21, 22, 29, 30, 37, 38], "guid": [2, 8], "how": [1, 2, 8], "implement": [3, 4, 5, 7], "indic": 8, "inform": [7, 8], "integr": [24, 25, 26, 27, 28, 29, 30], "librari": [8, 9], "list": 1, "logger": 68, "max": [40, 42], "metaheurist": [5, 49, 50, 51, 52, 62, 63, 64], "minimum": 41, "minimum_multi_cut_problem": [14, 34], "minimum_multi_cut_problem_binary_bit_array_solut": 14, "minimum_multi_cut_problem_binary_bit_array_solution_vns_support": 14, "modul": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "multi": 41, "multi_object": 11, "neighborhood": 7, "note": 7, "ones_count_max_problem": [15, 35], "ones_count_max_problem_binary_bit_array_solut": 15, "ones_count_max_problem_binary_bit_array_solution_te_support": 15, "ones_count_max_problem_binary_bit_array_solution_vns_support": 15, "ones_count_max_problem_binary_int_solut": 15, "ones_count_max_problem_binary_int_solution_vns_support": 15, "ones_count_max_problem_ilp_linopi": 15, "ones_count_max_problem_solv": 15, "ones_count_min_problem": 16, "ones_count_problem": 28, "opt": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "optim": [8, 9], "output_control": 46, "packag": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "problem": [39, 40, 41, 42, 43, 53, 65], "problem_solution_te_support": 48, "problem_solution_vns_support": 52, "problem_void": 53, "program": 8, "quality_of_solut": 54, "refer": 7, "search": 7, "set": 43, "set_covering_problem": [17, 36], "set_covering_problem_ilp_linopy_solut": 17, "single_object": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38], "solut": [54, 66], "solution_void": 54, "solution_void_object_str": 54, "solv": 39, "solver": [15, 21], "structur": 7, "submodul": [14, 15, 16, 17, 21, 22, 28, 30, 34, 35, 36, 38, 46, 48, 49, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68], "subpackag": [10, 12, 13, 20, 23, 24, 25, 26, 27, 29, 31, 32, 33, 37, 45, 46, 47, 49, 57, 58, 59, 60, 62], "tabl": 8, "target_problem": 55, "target_solut": 56, "te_optim": 48, "test": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "test_additional_statistics_control": 62, "test_additional_statistics_control_2": 62, "test_algorithm": 59, "test_complex_counter_bit_array_ful": 67, "test_distance_calculation_cache_control_statist": 66, "test_dummi": 58, "test_evaluation_cache_control_statistics_oper": 66, "test_evaluation_cache_control_statistics_properti": 66, "test_finish_control": 62, "test_funcion_one_variable_problem": 38, "test_function_one_variable_problem_binary_int_solut": 38, "test_function_one_variable_problem_binary_int_solution_vns_support": 38, "test_ga_optim": 63, "test_ga_optimizer_properti": 63, "test_max_function_one_variable_problem_vns_binary_int_solution_lsfi": 30, "test_metaheurist": 62, "test_minimum_multi_cut_problem": 34, "test_minimum_multi_cut_problem_binary_bit_array_solut": 34, "test_minimum_multi_cut_problem_binary_bit_array_solution_ga_support": 34, "test_minimum_multi_cut_problem_binary_bit_array_solution_vns_support": 34, "test_ones_count_max_problem_ga_bit_array_solut": 28, "test_ones_count_max_problem_ilp_linopi": 28, "test_ones_count_max_problem_te_bit_array_solut": 28, "test_ones_count_max_problem_vns_bit_array_solution_lsbi": 28, "test_ones_count_max_problem_vns_bit_array_solution_lsfi": 28, "test_ones_count_max_problem_vns_int_solution_lsbi": 28, "test_ones_count_max_problem_vns_int_solution_lsfi": 28, "test_ones_count_problem": 35, "test_ones_count_problem_binary_bit_array_solut": 35, "test_ones_count_problem_binary_bit_array_solution_te_support": 35, "test_ones_count_problem_binary_bit_array_solution_vns_support": 35, "test_ones_count_problem_binary_int_solut": 35, "test_ones_count_problem_ilp_linopi": 35, "test_optim": 59, "test_output_control": 59, "test_problem__copy__": 65, "test_problem_properti": 65, "test_set_covering_problem": 36, "test_single_solution_metaheurist": 62, "test_solut": 66, "test_solution1": 66, "test_solution2": 66, "test_solution_void_object_str": 66, "test_te_optim": 61, "test_test_complex_counter_uniform_ascend": 67, "test_vns_optim": 64, "test_vns_optmizer_properti": 64, "total": 6, "total_enumer": [48, 61], "traveling_salesperson_problem": 18, "tutori": [8, 44], "unit": [31, 32, 33, 34, 35, 36, 37, 38, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "univers": 8, "uo": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "util": [67, 68], "variabl": [7, 40], "variable_neighborhood_search": [52, 64], "vns_optim": 52}})